/*
Entitlements Service

The Entitlements service provides REST APIs that manage the assignments of entitlements and quotas to subaccounts and directories.   Entitlements and their quota are automatically assigned to the global account when a customer order is fulfilled. Use the APIs in this service to manage the distribution of this global quota to your directories and subaccounts.   NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EntitledServicesResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitledServicesResponseObject{}

// EntitledServicesResponseObject Services entitled to global account, its directories and subaccounts.
type EntitledServicesResponseObject struct {
	ApplicationCoordinates map[string]interface{} `json:"applicationCoordinates,omitempty"`
	BusinessCategory *BusinessCategoryResponseObject `json:"businessCategory,omitempty"`
	// Description of the service for customer-facing UIs.
	Description *string `json:"description,omitempty"`
	// Display name of the service for customer-facing UIs.
	DisplayName *string `json:"displayName,omitempty"`
	// The icon of the service in Base64 format.
	IconBase64 *string `json:"iconBase64,omitempty"`
	// The unique registration name of the deployed service as defined by the service provider.
	Name *string `json:"name,omitempty"`
	// The owner type of the service. Possible values: * <b>VENDOR:</b> The owner is a service owner, who is affiliated with the cloud operator, that added the service to the product catalog for general consumption. * <b>CUSTOMER:</b> The owner is an SAP customer that added a custom service to the product catalog, and it is available only for consumption within the customer's global account. * <b>PARTNER:</b> The owner is an SAP partner that added the service to the product catalog, and it is available only to their customers for consumption. 
	OwnerType *string `json:"ownerType,omitempty"`
	// List of service plans associated with the entitled service.
	ServicePlans []ServicePlanResponseObject `json:"servicePlans,omitempty"`
}

// NewEntitledServicesResponseObject instantiates a new EntitledServicesResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitledServicesResponseObject() *EntitledServicesResponseObject {
	this := EntitledServicesResponseObject{}
	return &this
}

// NewEntitledServicesResponseObjectWithDefaults instantiates a new EntitledServicesResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitledServicesResponseObjectWithDefaults() *EntitledServicesResponseObject {
	this := EntitledServicesResponseObject{}
	return &this
}

// GetApplicationCoordinates returns the ApplicationCoordinates field value if set, zero value otherwise.
func (o *EntitledServicesResponseObject) GetApplicationCoordinates() map[string]interface{} {
	if o == nil || IsNil(o.ApplicationCoordinates) {
		var ret map[string]interface{}
		return ret
	}
	return o.ApplicationCoordinates
}

// GetApplicationCoordinatesOk returns a tuple with the ApplicationCoordinates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledServicesResponseObject) GetApplicationCoordinatesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ApplicationCoordinates) {
		return map[string]interface{}{}, false
	}
	return o.ApplicationCoordinates, true
}

// HasApplicationCoordinates returns a boolean if a field has been set.
func (o *EntitledServicesResponseObject) HasApplicationCoordinates() bool {
	if o != nil && !IsNil(o.ApplicationCoordinates) {
		return true
	}

	return false
}

// SetApplicationCoordinates gets a reference to the given map[string]interface{} and assigns it to the ApplicationCoordinates field.
func (o *EntitledServicesResponseObject) SetApplicationCoordinates(v map[string]interface{}) {
	o.ApplicationCoordinates = v
}

// GetBusinessCategory returns the BusinessCategory field value if set, zero value otherwise.
func (o *EntitledServicesResponseObject) GetBusinessCategory() BusinessCategoryResponseObject {
	if o == nil || IsNil(o.BusinessCategory) {
		var ret BusinessCategoryResponseObject
		return ret
	}
	return *o.BusinessCategory
}

// GetBusinessCategoryOk returns a tuple with the BusinessCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledServicesResponseObject) GetBusinessCategoryOk() (*BusinessCategoryResponseObject, bool) {
	if o == nil || IsNil(o.BusinessCategory) {
		return nil, false
	}
	return o.BusinessCategory, true
}

// HasBusinessCategory returns a boolean if a field has been set.
func (o *EntitledServicesResponseObject) HasBusinessCategory() bool {
	if o != nil && !IsNil(o.BusinessCategory) {
		return true
	}

	return false
}

// SetBusinessCategory gets a reference to the given BusinessCategoryResponseObject and assigns it to the BusinessCategory field.
func (o *EntitledServicesResponseObject) SetBusinessCategory(v BusinessCategoryResponseObject) {
	o.BusinessCategory = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EntitledServicesResponseObject) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledServicesResponseObject) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EntitledServicesResponseObject) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EntitledServicesResponseObject) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *EntitledServicesResponseObject) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledServicesResponseObject) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *EntitledServicesResponseObject) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *EntitledServicesResponseObject) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetIconBase64 returns the IconBase64 field value if set, zero value otherwise.
func (o *EntitledServicesResponseObject) GetIconBase64() string {
	if o == nil || IsNil(o.IconBase64) {
		var ret string
		return ret
	}
	return *o.IconBase64
}

// GetIconBase64Ok returns a tuple with the IconBase64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledServicesResponseObject) GetIconBase64Ok() (*string, bool) {
	if o == nil || IsNil(o.IconBase64) {
		return nil, false
	}
	return o.IconBase64, true
}

// HasIconBase64 returns a boolean if a field has been set.
func (o *EntitledServicesResponseObject) HasIconBase64() bool {
	if o != nil && !IsNil(o.IconBase64) {
		return true
	}

	return false
}

// SetIconBase64 gets a reference to the given string and assigns it to the IconBase64 field.
func (o *EntitledServicesResponseObject) SetIconBase64(v string) {
	o.IconBase64 = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EntitledServicesResponseObject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledServicesResponseObject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EntitledServicesResponseObject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EntitledServicesResponseObject) SetName(v string) {
	o.Name = &v
}

// GetOwnerType returns the OwnerType field value if set, zero value otherwise.
func (o *EntitledServicesResponseObject) GetOwnerType() string {
	if o == nil || IsNil(o.OwnerType) {
		var ret string
		return ret
	}
	return *o.OwnerType
}

// GetOwnerTypeOk returns a tuple with the OwnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledServicesResponseObject) GetOwnerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerType) {
		return nil, false
	}
	return o.OwnerType, true
}

// HasOwnerType returns a boolean if a field has been set.
func (o *EntitledServicesResponseObject) HasOwnerType() bool {
	if o != nil && !IsNil(o.OwnerType) {
		return true
	}

	return false
}

// SetOwnerType gets a reference to the given string and assigns it to the OwnerType field.
func (o *EntitledServicesResponseObject) SetOwnerType(v string) {
	o.OwnerType = &v
}

// GetServicePlans returns the ServicePlans field value if set, zero value otherwise.
func (o *EntitledServicesResponseObject) GetServicePlans() []ServicePlanResponseObject {
	if o == nil || IsNil(o.ServicePlans) {
		var ret []ServicePlanResponseObject
		return ret
	}
	return o.ServicePlans
}

// GetServicePlansOk returns a tuple with the ServicePlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledServicesResponseObject) GetServicePlansOk() ([]ServicePlanResponseObject, bool) {
	if o == nil || IsNil(o.ServicePlans) {
		return nil, false
	}
	return o.ServicePlans, true
}

// HasServicePlans returns a boolean if a field has been set.
func (o *EntitledServicesResponseObject) HasServicePlans() bool {
	if o != nil && !IsNil(o.ServicePlans) {
		return true
	}

	return false
}

// SetServicePlans gets a reference to the given []ServicePlanResponseObject and assigns it to the ServicePlans field.
func (o *EntitledServicesResponseObject) SetServicePlans(v []ServicePlanResponseObject) {
	o.ServicePlans = v
}

func (o EntitledServicesResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitledServicesResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationCoordinates) {
		toSerialize["applicationCoordinates"] = o.ApplicationCoordinates
	}
	if !IsNil(o.BusinessCategory) {
		toSerialize["businessCategory"] = o.BusinessCategory
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.IconBase64) {
		toSerialize["iconBase64"] = o.IconBase64
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OwnerType) {
		toSerialize["ownerType"] = o.OwnerType
	}
	if !IsNil(o.ServicePlans) {
		toSerialize["servicePlans"] = o.ServicePlans
	}
	return toSerialize, nil
}

type NullableEntitledServicesResponseObject struct {
	value *EntitledServicesResponseObject
	isSet bool
}

func (v NullableEntitledServicesResponseObject) Get() *EntitledServicesResponseObject {
	return v.value
}

func (v *NullableEntitledServicesResponseObject) Set(val *EntitledServicesResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitledServicesResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitledServicesResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitledServicesResponseObject(val *EntitledServicesResponseObject) *NullableEntitledServicesResponseObject {
	return &NullableEntitledServicesResponseObject{value: val, isSet: true}
}

func (v NullableEntitledServicesResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitledServicesResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


