/*
Entitlements Service

The Entitlements service provides REST APIs that manage the assignments of entitlements and quotas to subaccounts and directories.   Entitlements and their quota are automatically assigned to the global account when a customer order is fulfilled. Use the APIs in this service to manage the distribution of this global quota to your directories and subaccounts.   NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExternalResourceRequestPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalResourceRequestPayload{}

// ExternalResourceRequestPayload External resources to assign to subaccount
type ExternalResourceRequestPayload struct {
	// Any additional data to include.
	ResourceData map[string]map[string]interface{} `json:"resourceData,omitempty"`
	// The name of the resource.
	ResourceName *string `json:"resourceName,omitempty"`
	// The name of the provider.
	ResourceProvider *string `json:"resourceProvider,omitempty"`
	// The unique name of the resource.
	ResourceTechnicalName *string `json:"resourceTechnicalName,omitempty"`
	// The type of the provider. For example infrastructure-as-a-service (IaaS).
	ResourceType *string `json:"resourceType,omitempty"`
}

// NewExternalResourceRequestPayload instantiates a new ExternalResourceRequestPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalResourceRequestPayload() *ExternalResourceRequestPayload {
	this := ExternalResourceRequestPayload{}
	return &this
}

// NewExternalResourceRequestPayloadWithDefaults instantiates a new ExternalResourceRequestPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalResourceRequestPayloadWithDefaults() *ExternalResourceRequestPayload {
	this := ExternalResourceRequestPayload{}
	return &this
}

// GetResourceData returns the ResourceData field value if set, zero value otherwise.
func (o *ExternalResourceRequestPayload) GetResourceData() map[string]map[string]interface{} {
	if o == nil || IsNil(o.ResourceData) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.ResourceData
}

// GetResourceDataOk returns a tuple with the ResourceData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalResourceRequestPayload) GetResourceDataOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.ResourceData) {
		return map[string]map[string]interface{}{}, false
	}
	return o.ResourceData, true
}

// HasResourceData returns a boolean if a field has been set.
func (o *ExternalResourceRequestPayload) HasResourceData() bool {
	if o != nil && !IsNil(o.ResourceData) {
		return true
	}

	return false
}

// SetResourceData gets a reference to the given map[string]map[string]interface{} and assigns it to the ResourceData field.
func (o *ExternalResourceRequestPayload) SetResourceData(v map[string]map[string]interface{}) {
	o.ResourceData = v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *ExternalResourceRequestPayload) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalResourceRequestPayload) GetResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceName) {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *ExternalResourceRequestPayload) HasResourceName() bool {
	if o != nil && !IsNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *ExternalResourceRequestPayload) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetResourceProvider returns the ResourceProvider field value if set, zero value otherwise.
func (o *ExternalResourceRequestPayload) GetResourceProvider() string {
	if o == nil || IsNil(o.ResourceProvider) {
		var ret string
		return ret
	}
	return *o.ResourceProvider
}

// GetResourceProviderOk returns a tuple with the ResourceProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalResourceRequestPayload) GetResourceProviderOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceProvider) {
		return nil, false
	}
	return o.ResourceProvider, true
}

// HasResourceProvider returns a boolean if a field has been set.
func (o *ExternalResourceRequestPayload) HasResourceProvider() bool {
	if o != nil && !IsNil(o.ResourceProvider) {
		return true
	}

	return false
}

// SetResourceProvider gets a reference to the given string and assigns it to the ResourceProvider field.
func (o *ExternalResourceRequestPayload) SetResourceProvider(v string) {
	o.ResourceProvider = &v
}

// GetResourceTechnicalName returns the ResourceTechnicalName field value if set, zero value otherwise.
func (o *ExternalResourceRequestPayload) GetResourceTechnicalName() string {
	if o == nil || IsNil(o.ResourceTechnicalName) {
		var ret string
		return ret
	}
	return *o.ResourceTechnicalName
}

// GetResourceTechnicalNameOk returns a tuple with the ResourceTechnicalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalResourceRequestPayload) GetResourceTechnicalNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceTechnicalName) {
		return nil, false
	}
	return o.ResourceTechnicalName, true
}

// HasResourceTechnicalName returns a boolean if a field has been set.
func (o *ExternalResourceRequestPayload) HasResourceTechnicalName() bool {
	if o != nil && !IsNil(o.ResourceTechnicalName) {
		return true
	}

	return false
}

// SetResourceTechnicalName gets a reference to the given string and assigns it to the ResourceTechnicalName field.
func (o *ExternalResourceRequestPayload) SetResourceTechnicalName(v string) {
	o.ResourceTechnicalName = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *ExternalResourceRequestPayload) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalResourceRequestPayload) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *ExternalResourceRequestPayload) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *ExternalResourceRequestPayload) SetResourceType(v string) {
	o.ResourceType = &v
}

func (o ExternalResourceRequestPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalResourceRequestPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ResourceData) {
		toSerialize["resourceData"] = o.ResourceData
	}
	if !IsNil(o.ResourceName) {
		toSerialize["resourceName"] = o.ResourceName
	}
	if !IsNil(o.ResourceProvider) {
		toSerialize["resourceProvider"] = o.ResourceProvider
	}
	if !IsNil(o.ResourceTechnicalName) {
		toSerialize["resourceTechnicalName"] = o.ResourceTechnicalName
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	return toSerialize, nil
}

type NullableExternalResourceRequestPayload struct {
	value *ExternalResourceRequestPayload
	isSet bool
}

func (v NullableExternalResourceRequestPayload) Get() *ExternalResourceRequestPayload {
	return v.value
}

func (v *NullableExternalResourceRequestPayload) Set(val *ExternalResourceRequestPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalResourceRequestPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalResourceRequestPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalResourceRequestPayload(val *ExternalResourceRequestPayload) *NullableExternalResourceRequestPayload {
	return &NullableExternalResourceRequestPayload{value: val, isSet: true}
}

func (v NullableExternalResourceRequestPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalResourceRequestPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


