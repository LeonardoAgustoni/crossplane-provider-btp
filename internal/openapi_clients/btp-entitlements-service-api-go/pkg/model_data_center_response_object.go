/*
Entitlements Service

The Entitlements service provides REST APIs that manage the assignments of entitlements and quotas to subaccounts and directories.   Entitlements and their quota are automatically assigned to the global account when a customer order is fulfilled. Use the APIs in this service to manage the distribution of this global quota to your directories and subaccounts.   NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DataCenterResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataCenterResponseObject{}

// DataCenterResponseObject Contains information about the data centers and regions in the cloud landscape
type DataCenterResponseObject struct {
	// Descriptive name of the data center for customer-facing UIs.
	DisplayName *string `json:"displayName,omitempty"`
	// The domain of the data center
	Domain *string `json:"domain,omitempty"`
	// The environment that the data center supports. For example: Kubernetes, Cloud Foundry.
	Environment *string `json:"environment,omitempty"`
	// The infrastructure provider for the data center. Valid values: * <b>AWS:</b> Amazon Web Services. * <b>GCP:</b> Google Cloud Platform. * <b>AZURE:</b> Microsoft Azure. * <b>SAP:</b> SAP BTP (Neo). * <b>ALI:</b> Alibaba Cloud. * <b>IBM:</b> IBM Cloud.
	IaasProvider *string `json:"iaasProvider,omitempty"`
	// Whether the data center is designated as the primary data center within its region. Note that regions that comprise multiple data centers can have only one main data center defined.
	IsMainDataCenter *bool `json:"isMainDataCenter,omitempty"`
	// Technical name of the data center. Must be unique within the cloud deployment.
	Name *string `json:"name,omitempty"`
	// Provisioning service URL.
	ProvisioningServiceUrl *string `json:"provisioningServiceUrl,omitempty"`
	// The region in which the data center is located.
	Region *string `json:"region,omitempty"`
	// Saas-Registry service URL.
	SaasRegistryServiceUrl *string `json:"saasRegistryServiceUrl,omitempty"`
	// Whether the specified data center supports trial accounts.
	SupportsTrial *bool `json:"supportsTrial,omitempty"`
}

// NewDataCenterResponseObject instantiates a new DataCenterResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataCenterResponseObject() *DataCenterResponseObject {
	this := DataCenterResponseObject{}
	return &this
}

// NewDataCenterResponseObjectWithDefaults instantiates a new DataCenterResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataCenterResponseObjectWithDefaults() *DataCenterResponseObject {
	this := DataCenterResponseObject{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *DataCenterResponseObject) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterResponseObject) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *DataCenterResponseObject) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *DataCenterResponseObject) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *DataCenterResponseObject) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterResponseObject) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *DataCenterResponseObject) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *DataCenterResponseObject) SetDomain(v string) {
	o.Domain = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *DataCenterResponseObject) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterResponseObject) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *DataCenterResponseObject) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *DataCenterResponseObject) SetEnvironment(v string) {
	o.Environment = &v
}

// GetIaasProvider returns the IaasProvider field value if set, zero value otherwise.
func (o *DataCenterResponseObject) GetIaasProvider() string {
	if o == nil || IsNil(o.IaasProvider) {
		var ret string
		return ret
	}
	return *o.IaasProvider
}

// GetIaasProviderOk returns a tuple with the IaasProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterResponseObject) GetIaasProviderOk() (*string, bool) {
	if o == nil || IsNil(o.IaasProvider) {
		return nil, false
	}
	return o.IaasProvider, true
}

// HasIaasProvider returns a boolean if a field has been set.
func (o *DataCenterResponseObject) HasIaasProvider() bool {
	if o != nil && !IsNil(o.IaasProvider) {
		return true
	}

	return false
}

// SetIaasProvider gets a reference to the given string and assigns it to the IaasProvider field.
func (o *DataCenterResponseObject) SetIaasProvider(v string) {
	o.IaasProvider = &v
}

// GetIsMainDataCenter returns the IsMainDataCenter field value if set, zero value otherwise.
func (o *DataCenterResponseObject) GetIsMainDataCenter() bool {
	if o == nil || IsNil(o.IsMainDataCenter) {
		var ret bool
		return ret
	}
	return *o.IsMainDataCenter
}

// GetIsMainDataCenterOk returns a tuple with the IsMainDataCenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterResponseObject) GetIsMainDataCenterOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMainDataCenter) {
		return nil, false
	}
	return o.IsMainDataCenter, true
}

// HasIsMainDataCenter returns a boolean if a field has been set.
func (o *DataCenterResponseObject) HasIsMainDataCenter() bool {
	if o != nil && !IsNil(o.IsMainDataCenter) {
		return true
	}

	return false
}

// SetIsMainDataCenter gets a reference to the given bool and assigns it to the IsMainDataCenter field.
func (o *DataCenterResponseObject) SetIsMainDataCenter(v bool) {
	o.IsMainDataCenter = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DataCenterResponseObject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterResponseObject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DataCenterResponseObject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DataCenterResponseObject) SetName(v string) {
	o.Name = &v
}

// GetProvisioningServiceUrl returns the ProvisioningServiceUrl field value if set, zero value otherwise.
func (o *DataCenterResponseObject) GetProvisioningServiceUrl() string {
	if o == nil || IsNil(o.ProvisioningServiceUrl) {
		var ret string
		return ret
	}
	return *o.ProvisioningServiceUrl
}

// GetProvisioningServiceUrlOk returns a tuple with the ProvisioningServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterResponseObject) GetProvisioningServiceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ProvisioningServiceUrl) {
		return nil, false
	}
	return o.ProvisioningServiceUrl, true
}

// HasProvisioningServiceUrl returns a boolean if a field has been set.
func (o *DataCenterResponseObject) HasProvisioningServiceUrl() bool {
	if o != nil && !IsNil(o.ProvisioningServiceUrl) {
		return true
	}

	return false
}

// SetProvisioningServiceUrl gets a reference to the given string and assigns it to the ProvisioningServiceUrl field.
func (o *DataCenterResponseObject) SetProvisioningServiceUrl(v string) {
	o.ProvisioningServiceUrl = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *DataCenterResponseObject) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterResponseObject) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *DataCenterResponseObject) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *DataCenterResponseObject) SetRegion(v string) {
	o.Region = &v
}

// GetSaasRegistryServiceUrl returns the SaasRegistryServiceUrl field value if set, zero value otherwise.
func (o *DataCenterResponseObject) GetSaasRegistryServiceUrl() string {
	if o == nil || IsNil(o.SaasRegistryServiceUrl) {
		var ret string
		return ret
	}
	return *o.SaasRegistryServiceUrl
}

// GetSaasRegistryServiceUrlOk returns a tuple with the SaasRegistryServiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterResponseObject) GetSaasRegistryServiceUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SaasRegistryServiceUrl) {
		return nil, false
	}
	return o.SaasRegistryServiceUrl, true
}

// HasSaasRegistryServiceUrl returns a boolean if a field has been set.
func (o *DataCenterResponseObject) HasSaasRegistryServiceUrl() bool {
	if o != nil && !IsNil(o.SaasRegistryServiceUrl) {
		return true
	}

	return false
}

// SetSaasRegistryServiceUrl gets a reference to the given string and assigns it to the SaasRegistryServiceUrl field.
func (o *DataCenterResponseObject) SetSaasRegistryServiceUrl(v string) {
	o.SaasRegistryServiceUrl = &v
}

// GetSupportsTrial returns the SupportsTrial field value if set, zero value otherwise.
func (o *DataCenterResponseObject) GetSupportsTrial() bool {
	if o == nil || IsNil(o.SupportsTrial) {
		var ret bool
		return ret
	}
	return *o.SupportsTrial
}

// GetSupportsTrialOk returns a tuple with the SupportsTrial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataCenterResponseObject) GetSupportsTrialOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsTrial) {
		return nil, false
	}
	return o.SupportsTrial, true
}

// HasSupportsTrial returns a boolean if a field has been set.
func (o *DataCenterResponseObject) HasSupportsTrial() bool {
	if o != nil && !IsNil(o.SupportsTrial) {
		return true
	}

	return false
}

// SetSupportsTrial gets a reference to the given bool and assigns it to the SupportsTrial field.
func (o *DataCenterResponseObject) SetSupportsTrial(v bool) {
	o.SupportsTrial = &v
}

func (o DataCenterResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataCenterResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.IaasProvider) {
		toSerialize["iaasProvider"] = o.IaasProvider
	}
	if !IsNil(o.IsMainDataCenter) {
		toSerialize["isMainDataCenter"] = o.IsMainDataCenter
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ProvisioningServiceUrl) {
		toSerialize["provisioningServiceUrl"] = o.ProvisioningServiceUrl
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.SaasRegistryServiceUrl) {
		toSerialize["saasRegistryServiceUrl"] = o.SaasRegistryServiceUrl
	}
	if !IsNil(o.SupportsTrial) {
		toSerialize["supportsTrial"] = o.SupportsTrial
	}
	return toSerialize, nil
}

type NullableDataCenterResponseObject struct {
	value *DataCenterResponseObject
	isSet bool
}

func (v NullableDataCenterResponseObject) Get() *DataCenterResponseObject {
	return v.value
}

func (v *NullableDataCenterResponseObject) Set(val *DataCenterResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableDataCenterResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableDataCenterResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataCenterResponseObject(val *DataCenterResponseObject) *NullableDataCenterResponseObject {
	return &NullableDataCenterResponseObject{value: val, isSet: true}
}

func (v NullableDataCenterResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataCenterResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


