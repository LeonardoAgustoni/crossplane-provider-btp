/*
Entitlements Service

The Entitlements service provides REST APIs that manage the assignments of entitlements and quotas to subaccounts and directories.   Entitlements and their quota are automatically assigned to the global account when a customer order is fulfilled. Use the APIs in this service to manage the distribution of this global quota to your directories and subaccounts.   NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServicePlanResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicePlanResponseObject{}

// ServicePlanResponseObject List of service plans associated with the entitled service.
type ServicePlanResponseObject struct {
	// The assigned quota for maximum allowed consumption of the plan. Relevant for services that have a numeric quota assignment.
	Amount *float32 `json:"amount,omitempty"`
	// Whether to automatically assign a quota of the entitlement to a subaccount when the subaccount is created in the entitlement's assigned directory.
	AutoAssign *bool `json:"autoAssign,omitempty"`
	// The amount of the entitlement to automatically assign to a subaccount when the subaccount is created in the entitlement's assigned directory. Requires that autoAssign is set to TRUE, and there is remaining quota for the entitlement. 
	AutoDistributeAmount *int32 `json:"autoDistributeAmount,omitempty"`
	// Whether the service plan is available internally to SAP users.
	AvailableForInternal *bool `json:"availableForInternal,omitempty"`
	// Whether the service plan is a beta feature.
	Beta *bool `json:"beta,omitempty"`
	// The type of service offering. Possible values: * <b>PLATFORM:</b> A service required for using a specific platform; for example, Application Runtime is required for the Cloud Foundry platform. * <b>SERVICE:</b> A commercial or technical service. that has a numeric quota (amount) when entitled or assigned to a resource. When assigning entitlements of this type, use the 'amount' option instead of 'enable'. See: PUT/entitlements/v1/directories/{directoryGUID}/assignments. * <b>ELASTIC_SERVICE:</b> A commercial or technical service that has no numeric quota (amount) when entitled or assigned to a resource. Generally this type of service can be as many times as needed when enabled, but may in some cases be restricted by the service owner. When assigning entitlements of this type, use the 'enable' option instead of 'amount'. See: PUT/entitlements/v1/directories/{directoryGUID}/assignments. * <b>ELASTIC_LIMITED:</b> An elastic service that can be enabled for only one subaccount per global account. * <b>APPLICATION:</b> A multitenant application to which consumers can subscribe. As opposed to applications defined as a 'QUOTA_BASED_APPLICATION', these applications do not have a numeric quota and are simply enabled or disabled as entitlements per subaccount. * <b>QUOTA_BASED_APPLICATION:</b> A multitenant application to which consumers can subscribe. As opposed to applications defined as 'APPLICATION', these applications have an numeric quota that limits consumer usage of the subscribed application per subaccount. When maxAllowedSubaccountQuota is > 0, this is the limit that can be set when assigning the max quota entitlement of the app to any subaccount. If maxAllowedSubaccountQuota is = 0 or null, the max quota that can be entitled to any subaccount is the amount purchased by the customer (the global account quota). * <b>ENVIRONMENT:</b> An environment service; for example, Cloud Foundry.
	Category *string `json:"category,omitempty"`
	// Contains information about the data centers and regions in the cloud landscape
	DataCenters []DataCenterResponseObject `json:"dataCenters,omitempty"`
	// Description of the service plan for customer-facing UIs.
	Description *string `json:"description,omitempty"`
	// Display name of the service plan for customer-facing UIs.
	DisplayName *string `json:"displayName,omitempty"`
	// The quota limit that is allowed for this service plan for SAP internal users. If null, the default quota limit is set to 200. Applies only when the availableForInternal property is set to TRUE.
	InternalQuotaLimit *int32 `json:"internalQuotaLimit,omitempty"`
	// The maximum allowed usage quota per subaccount for multitenant applications and environments that are defined as \"quota-based\". This quota limits the usage of the application and/or environment per subaccount per a given usage metric that is defined within the application or environment by the service provider. If null, the usage limit per subaccount is the maximum free quota in the global account. For example, a value of 1 could: (1) limit the number of subscriptions to a quota-based multitenant application within a global account according to the purchased quota, or (2) restrict the enablement of a single instance of an environment per subaccount.
	MaxAllowedSubaccountQuota *int32 `json:"maxAllowedSubaccountQuota,omitempty"`
	// The unique registration name of the service plan.
	Name *string `json:"name,omitempty"`
	// [DEPRECATED] The source that added the service. Possible values: * <b>VENDOR:</b> The product has been added by SAP or the cloud operator to the product catalog for general use. * <b>GLOBAL_ACCOUNT_OWNER:</b> Custom services that are added by a customer and are available only for that customerâ€™s global account. * <b>PARTNER:</b> Service that are added by partners. And only available to its customers.  Note: This property is deprecated. Please use the ownerType attribute on the entitledService level instead.
	ProvidedBy *string `json:"providedBy,omitempty"`
	// The method used to provision the service plan. * <b>SERVICE_BROKER:</b> Provisioning of Neo or Cloud Foundry quotas done by the service broker. * <b>NONE_REQUIRED:</b> Provisioning of Cloud Foundry quotas done by setting amount at provisioning-service. * <b>COMMERCIAL_SOLUTION_SCRIPT:</b> Provisioning is done by a script provided by the service owner and run by the Core Commercial Foundation service. * <b>GLOBAL_COMMERCIAL_SOLUTION_SCRIPT:</b> Provisioning is done by a script provided by the service owner and run by the Core Commercial Foundation service used for Global Account level. * <b>GLOBAL_QUOTA_DOMAIN_DB:</b> Provisioning is done by setting amount at Domain DB, this is relevant for non-ui quotas only. * <b>CLOUD_AUTOMATION:</b> Provisioning is done by the cloud automation service. This is relevant only for provisioning that requires external providers that are not within the scope of CIS. * <b>SPC:</b> Provisioning is done by Service Provider Cockpit. 
	ProvisioningMethod *string `json:"provisioningMethod,omitempty"`
	// The remaining amount of the plan that can still be assigned. For plans that don't have a numeric quota, the remaining amount is always the maximum allowed quota.
	RemainingAmount *float32 `json:"remainingAmount,omitempty"`
	// Remote service resources provided by non-SAP cloud vendors, and which are offered by this plan.
	Resources []ExternalResourceRequestPayload `json:"resources,omitempty"`
	// Relevant entitlements for the source that added the product.
	SourceEntitlements []EntitlementAmountResponseObject `json:"sourceEntitlements,omitempty"`
	// A unique identifier for service plans that can distinguish between the same service plans with different pricing plans.
	UniqueIdentifier *string `json:"uniqueIdentifier,omitempty"`
	Unlimited *bool `json:"unlimited,omitempty"`
}

// NewServicePlanResponseObject instantiates a new ServicePlanResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicePlanResponseObject() *ServicePlanResponseObject {
	this := ServicePlanResponseObject{}
	return &this
}

// NewServicePlanResponseObjectWithDefaults instantiates a new ServicePlanResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicePlanResponseObjectWithDefaults() *ServicePlanResponseObject {
	this := ServicePlanResponseObject{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *ServicePlanResponseObject) SetAmount(v float32) {
	o.Amount = &v
}

// GetAutoAssign returns the AutoAssign field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetAutoAssign() bool {
	if o == nil || IsNil(o.AutoAssign) {
		var ret bool
		return ret
	}
	return *o.AutoAssign
}

// GetAutoAssignOk returns a tuple with the AutoAssign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetAutoAssignOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoAssign) {
		return nil, false
	}
	return o.AutoAssign, true
}

// HasAutoAssign returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasAutoAssign() bool {
	if o != nil && !IsNil(o.AutoAssign) {
		return true
	}

	return false
}

// SetAutoAssign gets a reference to the given bool and assigns it to the AutoAssign field.
func (o *ServicePlanResponseObject) SetAutoAssign(v bool) {
	o.AutoAssign = &v
}

// GetAutoDistributeAmount returns the AutoDistributeAmount field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetAutoDistributeAmount() int32 {
	if o == nil || IsNil(o.AutoDistributeAmount) {
		var ret int32
		return ret
	}
	return *o.AutoDistributeAmount
}

// GetAutoDistributeAmountOk returns a tuple with the AutoDistributeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetAutoDistributeAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.AutoDistributeAmount) {
		return nil, false
	}
	return o.AutoDistributeAmount, true
}

// HasAutoDistributeAmount returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasAutoDistributeAmount() bool {
	if o != nil && !IsNil(o.AutoDistributeAmount) {
		return true
	}

	return false
}

// SetAutoDistributeAmount gets a reference to the given int32 and assigns it to the AutoDistributeAmount field.
func (o *ServicePlanResponseObject) SetAutoDistributeAmount(v int32) {
	o.AutoDistributeAmount = &v
}

// GetAvailableForInternal returns the AvailableForInternal field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetAvailableForInternal() bool {
	if o == nil || IsNil(o.AvailableForInternal) {
		var ret bool
		return ret
	}
	return *o.AvailableForInternal
}

// GetAvailableForInternalOk returns a tuple with the AvailableForInternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetAvailableForInternalOk() (*bool, bool) {
	if o == nil || IsNil(o.AvailableForInternal) {
		return nil, false
	}
	return o.AvailableForInternal, true
}

// HasAvailableForInternal returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasAvailableForInternal() bool {
	if o != nil && !IsNil(o.AvailableForInternal) {
		return true
	}

	return false
}

// SetAvailableForInternal gets a reference to the given bool and assigns it to the AvailableForInternal field.
func (o *ServicePlanResponseObject) SetAvailableForInternal(v bool) {
	o.AvailableForInternal = &v
}

// GetBeta returns the Beta field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetBeta() bool {
	if o == nil || IsNil(o.Beta) {
		var ret bool
		return ret
	}
	return *o.Beta
}

// GetBetaOk returns a tuple with the Beta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetBetaOk() (*bool, bool) {
	if o == nil || IsNil(o.Beta) {
		return nil, false
	}
	return o.Beta, true
}

// HasBeta returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasBeta() bool {
	if o != nil && !IsNil(o.Beta) {
		return true
	}

	return false
}

// SetBeta gets a reference to the given bool and assigns it to the Beta field.
func (o *ServicePlanResponseObject) SetBeta(v bool) {
	o.Beta = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ServicePlanResponseObject) SetCategory(v string) {
	o.Category = &v
}

// GetDataCenters returns the DataCenters field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetDataCenters() []DataCenterResponseObject {
	if o == nil || IsNil(o.DataCenters) {
		var ret []DataCenterResponseObject
		return ret
	}
	return o.DataCenters
}

// GetDataCentersOk returns a tuple with the DataCenters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetDataCentersOk() ([]DataCenterResponseObject, bool) {
	if o == nil || IsNil(o.DataCenters) {
		return nil, false
	}
	return o.DataCenters, true
}

// HasDataCenters returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasDataCenters() bool {
	if o != nil && !IsNil(o.DataCenters) {
		return true
	}

	return false
}

// SetDataCenters gets a reference to the given []DataCenterResponseObject and assigns it to the DataCenters field.
func (o *ServicePlanResponseObject) SetDataCenters(v []DataCenterResponseObject) {
	o.DataCenters = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServicePlanResponseObject) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ServicePlanResponseObject) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetInternalQuotaLimit returns the InternalQuotaLimit field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetInternalQuotaLimit() int32 {
	if o == nil || IsNil(o.InternalQuotaLimit) {
		var ret int32
		return ret
	}
	return *o.InternalQuotaLimit
}

// GetInternalQuotaLimitOk returns a tuple with the InternalQuotaLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetInternalQuotaLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.InternalQuotaLimit) {
		return nil, false
	}
	return o.InternalQuotaLimit, true
}

// HasInternalQuotaLimit returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasInternalQuotaLimit() bool {
	if o != nil && !IsNil(o.InternalQuotaLimit) {
		return true
	}

	return false
}

// SetInternalQuotaLimit gets a reference to the given int32 and assigns it to the InternalQuotaLimit field.
func (o *ServicePlanResponseObject) SetInternalQuotaLimit(v int32) {
	o.InternalQuotaLimit = &v
}

// GetMaxAllowedSubaccountQuota returns the MaxAllowedSubaccountQuota field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetMaxAllowedSubaccountQuota() int32 {
	if o == nil || IsNil(o.MaxAllowedSubaccountQuota) {
		var ret int32
		return ret
	}
	return *o.MaxAllowedSubaccountQuota
}

// GetMaxAllowedSubaccountQuotaOk returns a tuple with the MaxAllowedSubaccountQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetMaxAllowedSubaccountQuotaOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxAllowedSubaccountQuota) {
		return nil, false
	}
	return o.MaxAllowedSubaccountQuota, true
}

// HasMaxAllowedSubaccountQuota returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasMaxAllowedSubaccountQuota() bool {
	if o != nil && !IsNil(o.MaxAllowedSubaccountQuota) {
		return true
	}

	return false
}

// SetMaxAllowedSubaccountQuota gets a reference to the given int32 and assigns it to the MaxAllowedSubaccountQuota field.
func (o *ServicePlanResponseObject) SetMaxAllowedSubaccountQuota(v int32) {
	o.MaxAllowedSubaccountQuota = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServicePlanResponseObject) SetName(v string) {
	o.Name = &v
}

// GetProvidedBy returns the ProvidedBy field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetProvidedBy() string {
	if o == nil || IsNil(o.ProvidedBy) {
		var ret string
		return ret
	}
	return *o.ProvidedBy
}

// GetProvidedByOk returns a tuple with the ProvidedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetProvidedByOk() (*string, bool) {
	if o == nil || IsNil(o.ProvidedBy) {
		return nil, false
	}
	return o.ProvidedBy, true
}

// HasProvidedBy returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasProvidedBy() bool {
	if o != nil && !IsNil(o.ProvidedBy) {
		return true
	}

	return false
}

// SetProvidedBy gets a reference to the given string and assigns it to the ProvidedBy field.
func (o *ServicePlanResponseObject) SetProvidedBy(v string) {
	o.ProvidedBy = &v
}

// GetProvisioningMethod returns the ProvisioningMethod field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetProvisioningMethod() string {
	if o == nil || IsNil(o.ProvisioningMethod) {
		var ret string
		return ret
	}
	return *o.ProvisioningMethod
}

// GetProvisioningMethodOk returns a tuple with the ProvisioningMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetProvisioningMethodOk() (*string, bool) {
	if o == nil || IsNil(o.ProvisioningMethod) {
		return nil, false
	}
	return o.ProvisioningMethod, true
}

// HasProvisioningMethod returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasProvisioningMethod() bool {
	if o != nil && !IsNil(o.ProvisioningMethod) {
		return true
	}

	return false
}

// SetProvisioningMethod gets a reference to the given string and assigns it to the ProvisioningMethod field.
func (o *ServicePlanResponseObject) SetProvisioningMethod(v string) {
	o.ProvisioningMethod = &v
}

// GetRemainingAmount returns the RemainingAmount field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetRemainingAmount() float32 {
	if o == nil || IsNil(o.RemainingAmount) {
		var ret float32
		return ret
	}
	return *o.RemainingAmount
}

// GetRemainingAmountOk returns a tuple with the RemainingAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetRemainingAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.RemainingAmount) {
		return nil, false
	}
	return o.RemainingAmount, true
}

// HasRemainingAmount returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasRemainingAmount() bool {
	if o != nil && !IsNil(o.RemainingAmount) {
		return true
	}

	return false
}

// SetRemainingAmount gets a reference to the given float32 and assigns it to the RemainingAmount field.
func (o *ServicePlanResponseObject) SetRemainingAmount(v float32) {
	o.RemainingAmount = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetResources() []ExternalResourceRequestPayload {
	if o == nil || IsNil(o.Resources) {
		var ret []ExternalResourceRequestPayload
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetResourcesOk() ([]ExternalResourceRequestPayload, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []ExternalResourceRequestPayload and assigns it to the Resources field.
func (o *ServicePlanResponseObject) SetResources(v []ExternalResourceRequestPayload) {
	o.Resources = v
}

// GetSourceEntitlements returns the SourceEntitlements field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetSourceEntitlements() []EntitlementAmountResponseObject {
	if o == nil || IsNil(o.SourceEntitlements) {
		var ret []EntitlementAmountResponseObject
		return ret
	}
	return o.SourceEntitlements
}

// GetSourceEntitlementsOk returns a tuple with the SourceEntitlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetSourceEntitlementsOk() ([]EntitlementAmountResponseObject, bool) {
	if o == nil || IsNil(o.SourceEntitlements) {
		return nil, false
	}
	return o.SourceEntitlements, true
}

// HasSourceEntitlements returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasSourceEntitlements() bool {
	if o != nil && !IsNil(o.SourceEntitlements) {
		return true
	}

	return false
}

// SetSourceEntitlements gets a reference to the given []EntitlementAmountResponseObject and assigns it to the SourceEntitlements field.
func (o *ServicePlanResponseObject) SetSourceEntitlements(v []EntitlementAmountResponseObject) {
	o.SourceEntitlements = v
}

// GetUniqueIdentifier returns the UniqueIdentifier field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetUniqueIdentifier() string {
	if o == nil || IsNil(o.UniqueIdentifier) {
		var ret string
		return ret
	}
	return *o.UniqueIdentifier
}

// GetUniqueIdentifierOk returns a tuple with the UniqueIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetUniqueIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.UniqueIdentifier) {
		return nil, false
	}
	return o.UniqueIdentifier, true
}

// HasUniqueIdentifier returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasUniqueIdentifier() bool {
	if o != nil && !IsNil(o.UniqueIdentifier) {
		return true
	}

	return false
}

// SetUniqueIdentifier gets a reference to the given string and assigns it to the UniqueIdentifier field.
func (o *ServicePlanResponseObject) SetUniqueIdentifier(v string) {
	o.UniqueIdentifier = &v
}

// GetUnlimited returns the Unlimited field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetUnlimited() bool {
	if o == nil || IsNil(o.Unlimited) {
		var ret bool
		return ret
	}
	return *o.Unlimited
}

// GetUnlimitedOk returns a tuple with the Unlimited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetUnlimitedOk() (*bool, bool) {
	if o == nil || IsNil(o.Unlimited) {
		return nil, false
	}
	return o.Unlimited, true
}

// HasUnlimited returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasUnlimited() bool {
	if o != nil && !IsNil(o.Unlimited) {
		return true
	}

	return false
}

// SetUnlimited gets a reference to the given bool and assigns it to the Unlimited field.
func (o *ServicePlanResponseObject) SetUnlimited(v bool) {
	o.Unlimited = &v
}

func (o ServicePlanResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicePlanResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.AutoAssign) {
		toSerialize["autoAssign"] = o.AutoAssign
	}
	if !IsNil(o.AutoDistributeAmount) {
		toSerialize["autoDistributeAmount"] = o.AutoDistributeAmount
	}
	if !IsNil(o.AvailableForInternal) {
		toSerialize["availableForInternal"] = o.AvailableForInternal
	}
	if !IsNil(o.Beta) {
		toSerialize["beta"] = o.Beta
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.DataCenters) {
		toSerialize["dataCenters"] = o.DataCenters
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.InternalQuotaLimit) {
		toSerialize["internalQuotaLimit"] = o.InternalQuotaLimit
	}
	if !IsNil(o.MaxAllowedSubaccountQuota) {
		toSerialize["maxAllowedSubaccountQuota"] = o.MaxAllowedSubaccountQuota
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ProvidedBy) {
		toSerialize["providedBy"] = o.ProvidedBy
	}
	if !IsNil(o.ProvisioningMethod) {
		toSerialize["provisioningMethod"] = o.ProvisioningMethod
	}
	if !IsNil(o.RemainingAmount) {
		toSerialize["remainingAmount"] = o.RemainingAmount
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	if !IsNil(o.SourceEntitlements) {
		toSerialize["sourceEntitlements"] = o.SourceEntitlements
	}
	if !IsNil(o.UniqueIdentifier) {
		toSerialize["uniqueIdentifier"] = o.UniqueIdentifier
	}
	if !IsNil(o.Unlimited) {
		toSerialize["unlimited"] = o.Unlimited
	}
	return toSerialize, nil
}

type NullableServicePlanResponseObject struct {
	value *ServicePlanResponseObject
	isSet bool
}

func (v NullableServicePlanResponseObject) Get() *ServicePlanResponseObject {
	return v.value
}

func (v *NullableServicePlanResponseObject) Set(val *ServicePlanResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableServicePlanResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableServicePlanResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicePlanResponseObject(val *ServicePlanResponseObject) *NullableServicePlanResponseObject {
	return &NullableServicePlanResponseObject{value: val, isSet: true}
}

func (v NullableServicePlanResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicePlanResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


