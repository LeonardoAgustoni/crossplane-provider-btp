/*
Entitlements Service

The Entitlements service provides REST APIs that manage the assignments of entitlements and quotas to subaccounts and directories.   Entitlements and their quota are automatically assigned to the global account when a customer order is fulfilled. Use the APIs in this service to manage the distribution of this global quota to your directories and subaccounts.   NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DirectoryAssignmentsRequestPayloadCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DirectoryAssignmentsRequestPayloadCollection{}

// DirectoryAssignmentsRequestPayloadCollection JSON object that contains the specifications of assignment, such as the name of the assigned plan, the quantity to distribute, and whether to distribute the quota and how much to subaccounts that currently exist in the directory and to subaccounts that will added to the directory in the future.
type DirectoryAssignmentsRequestPayloadCollection struct {
	Entitlements []DirectoryAssignmentsRequestPayload `json:"entitlements"`
}

type _DirectoryAssignmentsRequestPayloadCollection DirectoryAssignmentsRequestPayloadCollection

// NewDirectoryAssignmentsRequestPayloadCollection instantiates a new DirectoryAssignmentsRequestPayloadCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectoryAssignmentsRequestPayloadCollection(entitlements []DirectoryAssignmentsRequestPayload) *DirectoryAssignmentsRequestPayloadCollection {
	this := DirectoryAssignmentsRequestPayloadCollection{}
	this.Entitlements = entitlements
	return &this
}

// NewDirectoryAssignmentsRequestPayloadCollectionWithDefaults instantiates a new DirectoryAssignmentsRequestPayloadCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectoryAssignmentsRequestPayloadCollectionWithDefaults() *DirectoryAssignmentsRequestPayloadCollection {
	this := DirectoryAssignmentsRequestPayloadCollection{}
	return &this
}

// GetEntitlements returns the Entitlements field value
func (o *DirectoryAssignmentsRequestPayloadCollection) GetEntitlements() []DirectoryAssignmentsRequestPayload {
	if o == nil {
		var ret []DirectoryAssignmentsRequestPayload
		return ret
	}

	return o.Entitlements
}

// GetEntitlementsOk returns a tuple with the Entitlements field value
// and a boolean to check if the value has been set.
func (o *DirectoryAssignmentsRequestPayloadCollection) GetEntitlementsOk() ([]DirectoryAssignmentsRequestPayload, bool) {
	if o == nil {
		return nil, false
	}
	return o.Entitlements, true
}

// SetEntitlements sets field value
func (o *DirectoryAssignmentsRequestPayloadCollection) SetEntitlements(v []DirectoryAssignmentsRequestPayload) {
	o.Entitlements = v
}

func (o DirectoryAssignmentsRequestPayloadCollection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DirectoryAssignmentsRequestPayloadCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entitlements"] = o.Entitlements
	return toSerialize, nil
}

func (o *DirectoryAssignmentsRequestPayloadCollection) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entitlements",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDirectoryAssignmentsRequestPayloadCollection := _DirectoryAssignmentsRequestPayloadCollection{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDirectoryAssignmentsRequestPayloadCollection)

	if err != nil {
		return err
	}

	*o = DirectoryAssignmentsRequestPayloadCollection(varDirectoryAssignmentsRequestPayloadCollection)

	return err
}

type NullableDirectoryAssignmentsRequestPayloadCollection struct {
	value *DirectoryAssignmentsRequestPayloadCollection
	isSet bool
}

func (v NullableDirectoryAssignmentsRequestPayloadCollection) Get() *DirectoryAssignmentsRequestPayloadCollection {
	return v.value
}

func (v *NullableDirectoryAssignmentsRequestPayloadCollection) Set(val *DirectoryAssignmentsRequestPayloadCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectoryAssignmentsRequestPayloadCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectoryAssignmentsRequestPayloadCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectoryAssignmentsRequestPayloadCollection(val *DirectoryAssignmentsRequestPayloadCollection) *NullableDirectoryAssignmentsRequestPayloadCollection {
	return &NullableDirectoryAssignmentsRequestPayloadCollection{value: val, isSet: true}
}

func (v NullableDirectoryAssignmentsRequestPayloadCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectoryAssignmentsRequestPayloadCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


