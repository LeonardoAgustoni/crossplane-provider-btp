/*
Entitlements Service

The Entitlements service provides REST APIs that manage the assignments of entitlements and quotas to subaccounts and directories.   Entitlements and their quota are automatically assigned to the global account when a customer order is fulfilled. Use the APIs in this service to manage the distribution of this global quota to your directories and subaccounts.   NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SubaccountServicePlansRequestPayloadCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubaccountServicePlansRequestPayloadCollection{}

// SubaccountServicePlansRequestPayloadCollection The details of entitlement's name, plan, amount and subaccount GUIDs to assign to a subaccount. The entitlement can be a service, multitenant application, or environment. Note that some environments, such as Cloud Foundry, are available by default to all subaccounts, and therefore are not displayed as entitlements.
type SubaccountServicePlansRequestPayloadCollection struct {
	// Contains information about the plans to assign to a subaccount.
	SubaccountServicePlans []ServicePlanAssignmentRequestPayload `json:"subaccountServicePlans"`
}

type _SubaccountServicePlansRequestPayloadCollection SubaccountServicePlansRequestPayloadCollection

// NewSubaccountServicePlansRequestPayloadCollection instantiates a new SubaccountServicePlansRequestPayloadCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubaccountServicePlansRequestPayloadCollection(subaccountServicePlans []ServicePlanAssignmentRequestPayload) *SubaccountServicePlansRequestPayloadCollection {
	this := SubaccountServicePlansRequestPayloadCollection{}
	this.SubaccountServicePlans = subaccountServicePlans
	return &this
}

// NewSubaccountServicePlansRequestPayloadCollectionWithDefaults instantiates a new SubaccountServicePlansRequestPayloadCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubaccountServicePlansRequestPayloadCollectionWithDefaults() *SubaccountServicePlansRequestPayloadCollection {
	this := SubaccountServicePlansRequestPayloadCollection{}
	return &this
}

// GetSubaccountServicePlans returns the SubaccountServicePlans field value
func (o *SubaccountServicePlansRequestPayloadCollection) GetSubaccountServicePlans() []ServicePlanAssignmentRequestPayload {
	if o == nil {
		var ret []ServicePlanAssignmentRequestPayload
		return ret
	}

	return o.SubaccountServicePlans
}

// GetSubaccountServicePlansOk returns a tuple with the SubaccountServicePlans field value
// and a boolean to check if the value has been set.
func (o *SubaccountServicePlansRequestPayloadCollection) GetSubaccountServicePlansOk() ([]ServicePlanAssignmentRequestPayload, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubaccountServicePlans, true
}

// SetSubaccountServicePlans sets field value
func (o *SubaccountServicePlansRequestPayloadCollection) SetSubaccountServicePlans(v []ServicePlanAssignmentRequestPayload) {
	o.SubaccountServicePlans = v
}

func (o SubaccountServicePlansRequestPayloadCollection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubaccountServicePlansRequestPayloadCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subaccountServicePlans"] = o.SubaccountServicePlans
	return toSerialize, nil
}

func (o *SubaccountServicePlansRequestPayloadCollection) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subaccountServicePlans",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubaccountServicePlansRequestPayloadCollection := _SubaccountServicePlansRequestPayloadCollection{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSubaccountServicePlansRequestPayloadCollection)

	if err != nil {
		return err
	}

	*o = SubaccountServicePlansRequestPayloadCollection(varSubaccountServicePlansRequestPayloadCollection)

	return err
}

type NullableSubaccountServicePlansRequestPayloadCollection struct {
	value *SubaccountServicePlansRequestPayloadCollection
	isSet bool
}

func (v NullableSubaccountServicePlansRequestPayloadCollection) Get() *SubaccountServicePlansRequestPayloadCollection {
	return v.value
}

func (v *NullableSubaccountServicePlansRequestPayloadCollection) Set(val *SubaccountServicePlansRequestPayloadCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableSubaccountServicePlansRequestPayloadCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableSubaccountServicePlansRequestPayloadCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubaccountServicePlansRequestPayloadCollection(val *SubaccountServicePlansRequestPayloadCollection) *NullableSubaccountServicePlansRequestPayloadCollection {
	return &NullableSubaccountServicePlansRequestPayloadCollection{value: val, isSet: true}
}

func (v NullableSubaccountServicePlansRequestPayloadCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubaccountServicePlansRequestPayloadCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


