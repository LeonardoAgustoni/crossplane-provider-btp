/*
Entitlements Service

The Entitlements service provides REST APIs that manage the assignments of entitlements and quotas to subaccounts and directories.   Entitlements and their quota are automatically assigned to the global account when a customer order is fulfilled. Use the APIs in this service to manage the distribution of this global quota to your directories and subaccounts.   NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EntitledAndAssignedServicesResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitledAndAssignedServicesResponseObject{}

// EntitledAndAssignedServicesResponseObject struct for EntitledAndAssignedServicesResponseObject
type EntitledAndAssignedServicesResponseObject struct {
	// The list of services that are assigned to subaccounts located under a global account.
	AssignedServices []AssignedServiceResponseObject `json:"assignedServices,omitempty"`
	// Services entitled to global account, its directories and subaccounts.
	EntitledServices []EntitledServicesResponseObject `json:"entitledServices,omitempty"`
	// Whether the External Provider Registry (XPR) is available.
	FetchErrorFromExternalProviderRegistry *bool `json:"fetchErrorFromExternalProviderRegistry,omitempty"`
}

// NewEntitledAndAssignedServicesResponseObject instantiates a new EntitledAndAssignedServicesResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitledAndAssignedServicesResponseObject() *EntitledAndAssignedServicesResponseObject {
	this := EntitledAndAssignedServicesResponseObject{}
	return &this
}

// NewEntitledAndAssignedServicesResponseObjectWithDefaults instantiates a new EntitledAndAssignedServicesResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitledAndAssignedServicesResponseObjectWithDefaults() *EntitledAndAssignedServicesResponseObject {
	this := EntitledAndAssignedServicesResponseObject{}
	return &this
}

// GetAssignedServices returns the AssignedServices field value if set, zero value otherwise.
func (o *EntitledAndAssignedServicesResponseObject) GetAssignedServices() []AssignedServiceResponseObject {
	if o == nil || IsNil(o.AssignedServices) {
		var ret []AssignedServiceResponseObject
		return ret
	}
	return o.AssignedServices
}

// GetAssignedServicesOk returns a tuple with the AssignedServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledAndAssignedServicesResponseObject) GetAssignedServicesOk() ([]AssignedServiceResponseObject, bool) {
	if o == nil || IsNil(o.AssignedServices) {
		return nil, false
	}
	return o.AssignedServices, true
}

// HasAssignedServices returns a boolean if a field has been set.
func (o *EntitledAndAssignedServicesResponseObject) HasAssignedServices() bool {
	if o != nil && !IsNil(o.AssignedServices) {
		return true
	}

	return false
}

// SetAssignedServices gets a reference to the given []AssignedServiceResponseObject and assigns it to the AssignedServices field.
func (o *EntitledAndAssignedServicesResponseObject) SetAssignedServices(v []AssignedServiceResponseObject) {
	o.AssignedServices = v
}

// GetEntitledServices returns the EntitledServices field value if set, zero value otherwise.
func (o *EntitledAndAssignedServicesResponseObject) GetEntitledServices() []EntitledServicesResponseObject {
	if o == nil || IsNil(o.EntitledServices) {
		var ret []EntitledServicesResponseObject
		return ret
	}
	return o.EntitledServices
}

// GetEntitledServicesOk returns a tuple with the EntitledServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledAndAssignedServicesResponseObject) GetEntitledServicesOk() ([]EntitledServicesResponseObject, bool) {
	if o == nil || IsNil(o.EntitledServices) {
		return nil, false
	}
	return o.EntitledServices, true
}

// HasEntitledServices returns a boolean if a field has been set.
func (o *EntitledAndAssignedServicesResponseObject) HasEntitledServices() bool {
	if o != nil && !IsNil(o.EntitledServices) {
		return true
	}

	return false
}

// SetEntitledServices gets a reference to the given []EntitledServicesResponseObject and assigns it to the EntitledServices field.
func (o *EntitledAndAssignedServicesResponseObject) SetEntitledServices(v []EntitledServicesResponseObject) {
	o.EntitledServices = v
}

// GetFetchErrorFromExternalProviderRegistry returns the FetchErrorFromExternalProviderRegistry field value if set, zero value otherwise.
func (o *EntitledAndAssignedServicesResponseObject) GetFetchErrorFromExternalProviderRegistry() bool {
	if o == nil || IsNil(o.FetchErrorFromExternalProviderRegistry) {
		var ret bool
		return ret
	}
	return *o.FetchErrorFromExternalProviderRegistry
}

// GetFetchErrorFromExternalProviderRegistryOk returns a tuple with the FetchErrorFromExternalProviderRegistry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledAndAssignedServicesResponseObject) GetFetchErrorFromExternalProviderRegistryOk() (*bool, bool) {
	if o == nil || IsNil(o.FetchErrorFromExternalProviderRegistry) {
		return nil, false
	}
	return o.FetchErrorFromExternalProviderRegistry, true
}

// HasFetchErrorFromExternalProviderRegistry returns a boolean if a field has been set.
func (o *EntitledAndAssignedServicesResponseObject) HasFetchErrorFromExternalProviderRegistry() bool {
	if o != nil && !IsNil(o.FetchErrorFromExternalProviderRegistry) {
		return true
	}

	return false
}

// SetFetchErrorFromExternalProviderRegistry gets a reference to the given bool and assigns it to the FetchErrorFromExternalProviderRegistry field.
func (o *EntitledAndAssignedServicesResponseObject) SetFetchErrorFromExternalProviderRegistry(v bool) {
	o.FetchErrorFromExternalProviderRegistry = &v
}

func (o EntitledAndAssignedServicesResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitledAndAssignedServicesResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssignedServices) {
		toSerialize["assignedServices"] = o.AssignedServices
	}
	if !IsNil(o.EntitledServices) {
		toSerialize["entitledServices"] = o.EntitledServices
	}
	if !IsNil(o.FetchErrorFromExternalProviderRegistry) {
		toSerialize["fetchErrorFromExternalProviderRegistry"] = o.FetchErrorFromExternalProviderRegistry
	}
	return toSerialize, nil
}

type NullableEntitledAndAssignedServicesResponseObject struct {
	value *EntitledAndAssignedServicesResponseObject
	isSet bool
}

func (v NullableEntitledAndAssignedServicesResponseObject) Get() *EntitledAndAssignedServicesResponseObject {
	return v.value
}

func (v *NullableEntitledAndAssignedServicesResponseObject) Set(val *EntitledAndAssignedServicesResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitledAndAssignedServicesResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitledAndAssignedServicesResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitledAndAssignedServicesResponseObject(val *EntitledAndAssignedServicesResponseObject) *NullableEntitledAndAssignedServicesResponseObject {
	return &NullableEntitledAndAssignedServicesResponseObject{value: val, isSet: true}
}

func (v NullableEntitledAndAssignedServicesResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitledAndAssignedServicesResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


