/*
Entitlements Service

The Entitlements service provides REST APIs that manage the assignments of entitlements and quotas to subaccounts and directories.   Entitlements and their quota are automatically assigned to the global account when a customer order is fulfilled. Use the APIs in this service to manage the distribution of this global quota to your directories and subaccounts.   NOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DirectoryAssignmentsPatchUpdateRequestPayloadCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DirectoryAssignmentsPatchUpdateRequestPayloadCollection{}

// DirectoryAssignmentsPatchUpdateRequestPayloadCollection JSON object that contains the specifications of an assignment, such as the name of the assigned plan and whether to distribute the quota and how much to subaccounts that currently exist in the directory and to subaccounts that will be added to the directory in the future.
type DirectoryAssignmentsPatchUpdateRequestPayloadCollection struct {
	EntitlementUpdates []DirectoryAssignmentsPatchUpdateRequestPayload `json:"entitlementUpdates"`
}

type _DirectoryAssignmentsPatchUpdateRequestPayloadCollection DirectoryAssignmentsPatchUpdateRequestPayloadCollection

// NewDirectoryAssignmentsPatchUpdateRequestPayloadCollection instantiates a new DirectoryAssignmentsPatchUpdateRequestPayloadCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectoryAssignmentsPatchUpdateRequestPayloadCollection(entitlementUpdates []DirectoryAssignmentsPatchUpdateRequestPayload) *DirectoryAssignmentsPatchUpdateRequestPayloadCollection {
	this := DirectoryAssignmentsPatchUpdateRequestPayloadCollection{}
	this.EntitlementUpdates = entitlementUpdates
	return &this
}

// NewDirectoryAssignmentsPatchUpdateRequestPayloadCollectionWithDefaults instantiates a new DirectoryAssignmentsPatchUpdateRequestPayloadCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectoryAssignmentsPatchUpdateRequestPayloadCollectionWithDefaults() *DirectoryAssignmentsPatchUpdateRequestPayloadCollection {
	this := DirectoryAssignmentsPatchUpdateRequestPayloadCollection{}
	return &this
}

// GetEntitlementUpdates returns the EntitlementUpdates field value
func (o *DirectoryAssignmentsPatchUpdateRequestPayloadCollection) GetEntitlementUpdates() []DirectoryAssignmentsPatchUpdateRequestPayload {
	if o == nil {
		var ret []DirectoryAssignmentsPatchUpdateRequestPayload
		return ret
	}

	return o.EntitlementUpdates
}

// GetEntitlementUpdatesOk returns a tuple with the EntitlementUpdates field value
// and a boolean to check if the value has been set.
func (o *DirectoryAssignmentsPatchUpdateRequestPayloadCollection) GetEntitlementUpdatesOk() ([]DirectoryAssignmentsPatchUpdateRequestPayload, bool) {
	if o == nil {
		return nil, false
	}
	return o.EntitlementUpdates, true
}

// SetEntitlementUpdates sets field value
func (o *DirectoryAssignmentsPatchUpdateRequestPayloadCollection) SetEntitlementUpdates(v []DirectoryAssignmentsPatchUpdateRequestPayload) {
	o.EntitlementUpdates = v
}

func (o DirectoryAssignmentsPatchUpdateRequestPayloadCollection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DirectoryAssignmentsPatchUpdateRequestPayloadCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entitlementUpdates"] = o.EntitlementUpdates
	return toSerialize, nil
}

func (o *DirectoryAssignmentsPatchUpdateRequestPayloadCollection) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entitlementUpdates",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDirectoryAssignmentsPatchUpdateRequestPayloadCollection := _DirectoryAssignmentsPatchUpdateRequestPayloadCollection{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDirectoryAssignmentsPatchUpdateRequestPayloadCollection)

	if err != nil {
		return err
	}

	*o = DirectoryAssignmentsPatchUpdateRequestPayloadCollection(varDirectoryAssignmentsPatchUpdateRequestPayloadCollection)

	return err
}

type NullableDirectoryAssignmentsPatchUpdateRequestPayloadCollection struct {
	value *DirectoryAssignmentsPatchUpdateRequestPayloadCollection
	isSet bool
}

func (v NullableDirectoryAssignmentsPatchUpdateRequestPayloadCollection) Get() *DirectoryAssignmentsPatchUpdateRequestPayloadCollection {
	return v.value
}

func (v *NullableDirectoryAssignmentsPatchUpdateRequestPayloadCollection) Set(val *DirectoryAssignmentsPatchUpdateRequestPayloadCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectoryAssignmentsPatchUpdateRequestPayloadCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectoryAssignmentsPatchUpdateRequestPayloadCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectoryAssignmentsPatchUpdateRequestPayloadCollection(val *DirectoryAssignmentsPatchUpdateRequestPayloadCollection) *NullableDirectoryAssignmentsPatchUpdateRequestPayloadCollection {
	return &NullableDirectoryAssignmentsPatchUpdateRequestPayloadCollection{value: val, isSet: true}
}

func (v NullableDirectoryAssignmentsPatchUpdateRequestPayloadCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectoryAssignmentsPatchUpdateRequestPayloadCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


