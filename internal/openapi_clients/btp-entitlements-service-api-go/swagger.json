{
  "openapi": "3.0.1",
  "info": {
    "description": "The Entitlements service provides REST APIs that manage the assignments of entitlements and quotas to subaccounts and directories.  \nEntitlements and their quota are automatically assigned to the global account when a customer order is fulfilled. Use the APIs in this service to manage the distribution of this global quota to your directories and subaccounts.  \nNOTE: These APIs are relevant only for cloud management tools feature set B. For details and information about whether this applies to your global account, see [Cloud Management Tools - Feature Set Overview](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/caf4e4e23aef4666ad8f125af393dfb2.html).\n\nSee also:\n* [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html)\n* [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html)\n* [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html)\n* [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)",
    "termsOfService": "http://www.sap.com",
    "title": "Entitlements Service",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://entitlements-service.cfapps.eu10.hana.ondemand.com",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "OAuth2": [

      ]
    }
  ],
  "tags": [
    {
      "description": "Manage Assigned Entitlements",
      "name": "Manage Assigned Entitlements"
    },
    {
      "description": "Job Management",
      "name": "Job Management"
    },
    {
      "description": "Regions for Global Account",
      "name": "Regions for Global Account"
    }
  ],
  "paths": {
    "/entitlements/v1/assignments": {
      "get": {
        "description": "Get all the entitlements and quota assignments for a global account and its directories and subaccounts. The information returned depends on the target of this API:\n- When the target is a global account, you view all the resources a global account and its directories and subaccounts are entitled to use. In this case, you omit the directoryGUID and subaccountGUID in the API call.\n- When the target is directory (applies only to directories that can manage their own entitlements), you view all the resources the directory and its subaccounts are entitled to use.\n- When the target is a specific subaccount, you can view all the entitlements and quota assigned to the subaccount.<br/><br/>Required scopes: $XSAPPNAME.directory.entitlement.read or $XSAPPNAME.global-account.entitlement.read",
        "operationId": "getDirectoryAssignments",
        "parameters": [
          {
            "description": "The ID of the directory for which to show the entitlements and quota assignments.",
            "in": "query",
            "name": "directoryGUID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the subaccount for which to show the entitlements and quota assignments.",
            "in": "query",
            "name": "subaccountGUID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify if to include also services that are automatically entitled to a global account when the global account is created. Default is false.",
            "in": "query",
            "name": "includeAutoManagedPlans",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Indicates the natural language and locale that the client prefers.",
            "example": "*",
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "When true: (1) only the available services for which the global account is entitled (under 'entitledServices') are retrieved, and (2) services that are assigned to directories and subaccounts in the global account are not retrieved (under 'assignedServices'). When false, both 'entitledServices' and 'assignedServices' are retrieved. Default value: false",
            "in": "query",
            "name": "entitledServicesOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A specific service for which to return subaccount quota assignments in the global account or directory. If not specified, then all services in the global account or directory are returned.",
            "in": "query",
            "name": "assignedServiceName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitledAndAssignedServicesResponseObject"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "headers": {
              "X-Ratelimit-Reset": {
                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                "example": "167918400000",
                "schema": {
                  "type": "string",
                  "format": "long"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get all the entitlements and quota assignments",
        "tags": [
          "Manage Assigned Entitlements"
        ]
      }
    },
    "/entitlements/v1/directories/{directoryGUID}/assignments": {
      "patch": {
        "description": "Update an entitlement plan of a service, multitenant application, or environment that is already assigned to a directory. Use it to apply changes to the distribution of a plan and quota to subaccounts in a directory. You cannot use this API to assign new plans or to change the quota assigned to a directory. This API is valid only for directories that are enabled to manage their entitlements. Note that some environments, such as Cloud Foundry, are available by default to all subaccounts, and therefore are not displayed as entitlements.<br/><br/>Required scopes: $XSAPPNAME.directory.entitlement.update",
        "operationId": "updateEntitlements",
        "parameters": [
          {
            "description": "The unique ID of the directory to which the entitlement is assigned.",
            "in": "path",
            "name": "directoryGUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectoryAssignmentsPatchUpdateRequestPayloadCollection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "headers": {
              "X-Ratelimit-Reset": {
                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                "example": "167918400000",
                "schema": {
                  "type": "string",
                  "format": "long"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update an existing entitlement in a directory",
        "tags": [
          "Manage Assigned Entitlements"
        ]
      },
      "put": {
        "description": "Assign or update an entitlement plan of a service, multitenant application, or environment, to a directory. This is valid only for directories that are enabled to manage their entitlements.The amount that can be assigned to plans that are based on a numeric quota, is subject to available quota in the global account.Note that some environments, such as Cloud Foundry, are available by default to all subaccounts, and therefore are not displayed as entitlements.<br/><br/>Required scopes: $XSAPPNAME.directory.entitlement.update",
        "operationId": "createOrUpdateEntitlements",
        "parameters": [
          {
            "description": "The unique ID of the directory to which the entitlement is assigned.",
            "in": "path",
            "name": "directoryGUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DirectoryAssignmentsRequestPayloadCollection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "headers": {
              "X-Ratelimit-Reset": {
                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                "example": "167918400000",
                "schema": {
                  "type": "string",
                  "format": "long"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Assign or update an entitlement in a directory",
        "tags": [
          "Manage Assigned Entitlements"
        ]
      }
    },
    "/entitlements/v1/globalAccountAllowedDataCenters": {
      "get": {
        "description": "Get all data centers that are available for the global account, including information such as their names, regions where they are located, and their IaaS providers.<br/><br/>Returns only data centers that are defined as a main data center. For regions that comprise multiple data centers, use the includeSatelliteDataCenters parameter to list also the regions' satellite data centers.<br/><br/>Required scopes: $XSAPPNAME.global-account.region.read",
        "operationId": "getAllowedDataCenters",
        "parameters": [
          {
            "description": "Region for which to get data centers.",
            "example": "region",
            "in": "query",
            "name": "region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to list also satellite data centers in regions that comprise multiple data centers. When omitted, only data centers that are defined as a main data center are listed.",
            "in": "query",
            "name": "includeSatelliteDataCenters",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "Indicates the natural language and locale that the client prefers.",
            "example": "*",
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCenterResponseCollection"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "headers": {
              "X-Ratelimit-Reset": {
                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                "example": "167918400000",
                "schema": {
                  "type": "string",
                  "format": "long"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get available data centers",
        "tags": [
          "Regions for Global Account"
        ]
      }
    },
    "/entitlements/v1/globalAccountAssignments": {
      "get": {
        "description": "Get details about all the entitlements assigned to a global account.<br/><br/>Required scopes: $XSAPPNAME.global-account.entitlement.read",
        "operationId": "getGlobalAccountAssignments",
        "parameters": [
          {
            "description": "Use the parameter to specify for which subaccount to view assigned entitlements.\nIf left empty, the API returns the entitlements for the global account and all its subaccounts.",
            "in": "query",
            "name": "subaccountGUID",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates the natural language and locale that the client prefers.",
            "example": "*",
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify if to include also services that are automatically assigned to a subaccount when the subaccount is created. Default is false.",
            "in": "query",
            "name": "includeAutoManagedPlans",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "description": "When true: (1) only the available services for which the global account is entitled (under 'entitledServices') are retrieved, and (2) services that are assigned to directories and subaccounts in the global account are not retrieved (under 'assignedServices'). When false, both 'entitledServices' and 'assignedServices' are retrieved. Default value: false",
            "in": "query",
            "name": "entitledServicesOnly",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A specific service for which to return subaccount quota assignments in the global account. If not specified, then all services in the global account are returned.",
            "in": "query",
            "name": "assignedServiceName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitledAndAssignedServicesResponseObject"
                }
              }
            },
            "description": "Ok"
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "headers": {
              "X-Ratelimit-Reset": {
                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                "example": "167918400000",
                "schema": {
                  "type": "string",
                  "format": "long"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get entitlements assigned to a global account",
        "tags": [
          "Manage Assigned Entitlements"
        ]
      }
    },
    "/entitlements/v1/subaccountServicePlans": {
      "put": {
        "description": "Assign or update an entitlement of a service, multitenant application, or environment plan, to a subaccount. Subaccounts can be located either directly under the global account, or under a directory in the global account.When a subaccount is located directly under the global account, total amount of service or application plan it is entitled to consume cannot exceed the entitlement’s quota for the global account. This is also true for the directories that are not enabled to manage their quota as they consume the quota from the global account.<br/>For the directories that are enabled to manage their entitlements, the total amounts assigned to subaccounts cannot exceed the entitlement’s quota for these directories.<br/>Note that some environments, such as Cloud Foundry, are available by default to all subaccounts, and therefore are not displayed as entitlements.<br/><br/>Required scopes: $XSAPPNAME.global-account.entitlement.subaccount.update",
        "operationId": "setServicePlans",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubaccountServicePlansRequestPayloadCollection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Accepted"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "headers": {
              "X-Ratelimit-Reset": {
                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                "example": "167918400000",
                "schema": {
                  "type": "string",
                  "format": "long"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Assign entitlements to subaccounts",
        "tags": [
          "Manage Assigned Entitlements"
        ]
      }
    },
    "/jobs-management/v1/jobs/{jobInstanceIdOrUniqueId}/status": {
      "get": {
        "description": "Get information for a specified job, including its ID and its current status.<br/><br/>Required scope: $XSAPPNAME.job.read",
        "operationId": "getStatus",
        "parameters": [
          {
            "description": "ID of the job for which to get status",
            "in": "path",
            "name": "jobInstanceIdOrUniqueId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Bad request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Not Found"
          },
          "429": {
            "description": "Rate Limit Exceeded",
            "headers": {
              "X-Ratelimit-Reset": {
                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                "example": "167918400000",
                "schema": {
                  "type": "string",
                  "format": "long"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiExceptionResponseObject"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Get job status",
        "tags": [
          "Job Management"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiExceptionResponseObject": {
        "required": [
          "code",
          "correlationID",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Technical code of the error as a reference for support",
            "format": "int32"
          },
          "correlationID": {
            "type": "string",
            "description": "Log correlation ID to track the event"
          },
          "description": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "details": {
            "type": "array",
            "description": "Nesting of error responses",
            "items": {
              "$ref": "#/components/schemas/NestingErrorDetailsResponseObject"
            }
          },
          "message": {
            "type": "string",
            "description": "User-friendly description of the error."
          },
          "target": {
            "type": "string",
            "description": "Describes a data element (for example, a resource path: /online-store/v1/products/123)"
          }
        }
      },
      "AssignedServicePlanResponseObject": {
        "type": "object",
        "properties": {
          "assignmentInfo": {
            "type": "array",
            "description": "Assignment detailed information",
            "items": {
              "$ref": "#/components/schemas/AssignedServicePlanSubaccountDTO"
            }
          },
          "beta": {
            "type": "boolean",
            "description": "Whether the service plan is a beta feature."
          },
          "category": {
            "type": "string",
            "description": "The type of service offering. Possible values:\n* <b>PLATFORM:</b> A service required for using a specific platform; for example, Application Runtime is required for the Cloud Foundry platform.\n* <b>SERVICE:</b> A commercial or technical service. that has a numeric quota (amount) when entitled or assigned to a resource. When assigning entitlements of this type, use the 'amount' option instead of 'enable'. See: PUT/entitlements/v1/directories/{directoryGUID}/assignments.\n* <b>ELASTIC_SERVICE:</b> A commercial or technical service that has no numeric quota (amount) when entitled or assigned to a resource. Generally this type of service can be as many times as needed when enabled, but may in some cases be restricted by the service owner. When assigning entitlements of this type, use the 'enable' option instead of 'amount'. See: PUT/entitlements/v1/directories/{directoryGUID}/assignments.\n* <b>ELASTIC_LIMITED:</b> An elastic service that can be enabled for only one subaccount per global account.\n* <b>APPLICATION:</b> A multitenant application to which consumers can subscribe. As opposed to applications defined as a 'QUOTA_BASED_APPLICATION', these applications do not have a numeric quota and are simply enabled or disabled as entitlements per subaccount.\n* <b>QUOTA_BASED_APPLICATION:</b> A multitenant application to which consumers can subscribe. As opposed to applications defined as 'APPLICATION', these applications have an numeric quota that limits consumer usage of the subscribed application per subaccount. When maxAllowedSubaccountQuota is > 0, this is the limit that can be set when assigning the max quota entitlement of the app to any subaccount. If maxAllowedSubaccountQuota is = 0 or null, the max quota that can be entitled to any subaccount is the amount purchased by the customer (the global account quota).\n* <b>ENVIRONMENT:</b> An environment service; for example, Cloud Foundry.",
            "enum": [
              "PLATFORM",
              "SERVICE",
              "ELASTIC_SERVICE",
              "ELASTIC_LIMITED",
              "APPLICATION",
              "QUOTA_BASED_APPLICATION",
              "ENVIRONMENT"
            ]
          },
          "displayName": {
            "type": "string",
            "description": "The name of the service plan for customer-facing UIs."
          },
          "maxAllowedSubaccountQuota": {
            "type": "integer",
            "description": "The maximum allowed usage quota per subaccount for multitenant applications and environments that are defined as \"quota-based\". This quota limits the usage of the application and/or environment per subaccount per a given usage metric that is defined within the application or environment by the service provider. If null, the usage limit per subaccount is the maximum free quota in the global account.\nFor example, a value of 1 could: (1) limit the number of subscriptions to a quota-based multitenant application within a global account according to the purchased quota, or (2) restrict the enablement of a single instance of an environment per subaccount.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The unique registration name of the service plan."
          },
          "uniqueIdentifier": {
            "type": "string",
            "description": "A unique identifier for service plans that can distinguish between the same service plans with different pricing plans."
          },
          "unlimited": {
            "type": "boolean",
            "description": "Is the quota of this service plan entitled to the global account with unlimited usage."
          }
        },
        "description": "List of service plans associated with the assigned service."
      },
      "AssignedServicePlanSubaccountDTO": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The quantity of the entitlement that is assigned to the root global account or directory."
          },
          "autoAssign": {
            "type": "boolean",
            "description": "Whether the plan is automatically distributed to the subaccounts that are located in the directory."
          },
          "autoAssigned": {
            "type": "boolean",
            "description": "Specifies if the plan was automatically assigned regardless of any action by an admin. This applies to entitlements that are always available to subaccounts and cannot be removed."
          },
          "autoDistributeAmount": {
            "type": "integer",
            "description": "The amount of the entitlement to automatically assign to subaccounts that are added in the future to the entitlement's assigned directory.  \nRequires that autoAssign is set to TRUE, and there is remaining quota for the entitlement. To automatically distribute to subaccounts that are added in the future to the directory, distribute must be set to TRUE.",
            "format": "int32"
          },
          "createdDate": {
            "type": "string",
            "description": "Date the subaccount has been created. Dates and times are in UTC format.",
            "format": "date-time"
          },
          "entityId": {
            "type": "string",
            "description": "The unique ID of the global account or directory to which the entitlement is assigned.",
            "example": "GUID of GLOBAL_ACCOUNT or SUBACCOUNT"
          },
          "entityState": {
            "type": "string",
            "description": "The current state of the service plan assignment.\n* <b>STARTED:</b> CRUD operation on an entity has started.\n* <b>PROCESSING:</b> A series of operations related to the entity is in progress.\n* <b>PROCESSING_FAILED:</b> The processing operations failed.\n* <b>OK:</b> The CRUD operation or series of operations completed successfully.",
            "enum": [
              "STARTED",
              "PROCESSING",
              "PROCESSING_FAILED",
              "OK"
            ]
          },
          "entityType": {
            "type": "string",
            "description": "The type of entity to which the entitlement is assigned.\n* <b>SUBACCOUNT:</b> The entitlement is assigned to a subaccount.\n* <b>GLOBAL_ACCOUNT:</b> The entitlement is assigned to a root global account.\n* <b>DIRECTORY:</b> The entitlement is assigned to a directory.",
            "example": "GLOBAL_ACCOUNT or SUBACCOUNT",
            "enum": [
              "SUBACCOUNT",
              "GLOBAL_ACCOUNT",
              "DIRECTORY"
            ]
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date the subaccount has been modified. Dates and times are in UTC format.",
            "format": "date-time"
          },
          "parentAmount": {
            "type": "number"
          },
          "parentId": {
            "type": "string"
          },
          "parentRemainingAmount": {
            "type": "number"
          },
          "parentType": {
            "type": "string",
            "enum": [
              "SUBACCOUNT",
              "GLOBAL_ACCOUNT",
              "DIRECTORY"
            ]
          },
          "requestedAmount": {
            "type": "number",
            "description": "The requested amount when it is different from the actual amount because the request state is still in process or failed."
          },
          "resources": {
            "type": "array",
            "description": "Global account resource details",
            "items": {
              "$ref": "#/components/schemas/ExternalResourceRequestPayload"
            }
          },
          "stateMessage": {
            "type": "string",
            "description": "Information about the current state."
          },
          "unlimitedAmountAssigned": {
            "type": "boolean",
            "description": "True, if an unlimited quota of this service plan assigned to the directory or subaccount in the global account. False, if the service plan is assigned to the directory or subaccount with a limited numeric quota, even if the service plan has an unlimited usage entitled on the level of the global account."
          }
        },
        "description": "Assignment detailed information"
      },
      "AssignedServiceResponseObject": {
        "type": "object",
        "properties": {
          "applicationCoordinates": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "The application coordinates provided in metadata."
            },
            "description": "The application coordinates provided in metadata."
          },
          "businessCategory": {
            "type": "string",
            "description": "The business category of the product according to the capabilities listed for the SAP BTP product catalog.",
            "enum": [
              "OTHER",
              "APPLICATION_DEVELOPMENT_AND_AUTOMATION",
              "INTEGRATION",
              "FOUNDATION_CROSS_SERVICES",
              "AI",
              "DATA_AND_ANALYTICS",
              "EXTENDED_PLANNING_AND_ANALYSIS"
            ]
          },
          "displayName": {
            "type": "string",
            "description": "Display name of the service for customer-facing UIs."
          },
          "iconBase64": {
            "type": "string",
            "description": "The icon of the service in Base64 format."
          },
          "name": {
            "type": "string",
            "description": "The unique registration name of the deployed service as defined by the service provider."
          },
          "ownerType": {
            "type": "string",
            "description": "The owner type of the service. Possible values:\n* <b>VENDOR:</b> The owner is a service owner, who is affiliated with the cloud operator, that added the service to the product catalog for general consumption.\n* <b>CUSTOMER:</b> The owner is an SAP customer that added a custom service to the product catalog, and it is available only for consumption within the customer's global account.\n* <b>PARTNER:</b> The owner is an SAP partner that added the service to the product catalog, and it is available only to their customers for consumption.\n",
            "enum": [
              "VENDOR",
              "CUSTOMER",
              "PARTNER"
            ]
          },
          "servicePlans": {
            "type": "array",
            "description": "List of service plans associated with the assigned service.",
            "items": {
              "$ref": "#/components/schemas/AssignedServicePlanResponseObject"
            }
          }
        },
        "description": "The list of services that are assigned to subaccounts located under a global account."
      },
      "CommercialModelResponseObject": {
        "type": "object",
        "properties": {
          "consumptionBased": {
            "type": "boolean",
            "description": "Whether a customer pays only for services that they actually use (consumption-based) or pays for subscribed services at a fixed cost irrespective of consumption (subscription-based).\n<b>True:</b> Consumption-based commercial model.<b>False:</b> Subscription-based commercial model."
          },
          "containedCommercialModels": {
            "type": "array",
            "description": "Directly contained commercial models.",
            "items": {
              "$ref": "#/components/schemas/CommercialModelResponseObject"
            }
          },
          "description": {
            "type": "string",
            "description": "A description of the commercial model"
          },
          "displayName": {
            "type": "string",
            "description": "A descriptive name of the commercial model for customer-facing UIs."
          },
          "name": {
            "type": "string",
            "description": "Technical name of the commercial model."
          }
        },
        "description": "The commercial model type assigned to the entitlement."
      },
      "DataCenterResponseCollection": {
        "type": "object",
        "properties": {
          "datacenters": {
            "type": "array",
            "description": "Contains information about the available data centers for a specified global account.",
            "items": {
              "$ref": "#/components/schemas/DataCenterResponseObject"
            }
          }
        }
      },
      "DataCenterResponseObject": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Descriptive name of the data center for customer-facing UIs."
          },
          "domain": {
            "type": "string",
            "description": "The domain of the data center"
          },
          "environment": {
            "type": "string",
            "description": "The environment that the data center supports. For example: Kubernetes, Cloud Foundry."
          },
          "iaasProvider": {
            "type": "string",
            "description": "The infrastructure provider for the data center. Valid values:\n* <b>AWS:</b> Amazon Web Services.\n* <b>GCP:</b> Google Cloud Platform.\n* <b>AZURE:</b> Microsoft Azure.\n* <b>SAP:</b> SAP BTP (Neo).\n* <b>ALI:</b> Alibaba Cloud.\n* <b>IBM:</b> IBM Cloud.",
            "enum": [
              "AWS",
              "GCP",
              "AZURE",
              "SAP",
              "ALI",
              "IBM"
            ]
          },
          "isMainDataCenter": {
            "type": "boolean",
            "description": "Whether the data center is designated as the primary data center within its region. Note that regions that comprise multiple data centers can have only one main data center defined."
          },
          "name": {
            "type": "string",
            "description": "Technical name of the data center. Must be unique within the cloud deployment."
          },
          "provisioningServiceUrl": {
            "type": "string",
            "description": "Provisioning service URL."
          },
          "region": {
            "type": "string",
            "description": "The region in which the data center is located."
          },
          "saasRegistryServiceUrl": {
            "type": "string",
            "description": "Saas-Registry service URL."
          },
          "supportsTrial": {
            "type": "boolean",
            "description": "Whether the specified data center supports trial accounts."
          }
        },
        "description": "Contains information about the data centers and regions in the cloud landscape"
      },
      "DirectoryAssignmentsPatchUpdateRequestPayload": {
        "required": [
          "plan",
          "service"
        ],
        "type": "object",
        "properties": {
          "autoAssign": {
            "type": "boolean",
            "description": "Whether to automatically allocate the plans of entitlements that have a numeric quota with the amount specified in auto-distribute-amount to any new subaccount that is added to the directory in the future. For entitlements without a numeric quota, the plan is assigned to any new subaccount that is added to the directory in the future with the condition that enable=TRUE is set (autoDistributeAmount is not relevant in this case). If distribute=TRUE, the same assignment is also made to all subaccounts currently in the directory. Entitlements are subject to available quota in the directory."
          },
          "autoDistributeAmount": {
            "type": "integer",
            "description": "The quota of the specified plan to automatically allocate to any new subaccount that is created in the future in the directory.\nWhen applying this option, you must set autoAssign=TRUE and/or distribute=TRUE. Applies only to entitlements that have a numeric quota. Entitlements are subject to available quota in the directory.",
            "format": "int32"
          },
          "distribute": {
            "type": "boolean",
            "description": "Whether to assign the plan with the quota specified in autoDistributeAmount to subaccounts currently located in the specified directory. For entitlements without a numeric quota, such as multitenant apps, the plan is assigned to the subaccounts currently located in the directory (autoDistributeAmount is not relevant in this case). In both cases, autoAssign must be set to TRUE."
          },
          "plan": {
            "type": "string",
            "description": "The technical name of the entitlement to assign to the directory."
          },
          "planUniqueIdentifier": {
            "type": "string",
            "description": "A unique identifier for service plans that can distinguish between the same service plans with different pricing plans."
          },
          "service": {
            "type": "string",
            "description": "The technical name of the entitlement (service, application, environment) to assign."
          }
        }
      },
      "DirectoryAssignmentsPatchUpdateRequestPayloadCollection": {
        "required": [
          "entitlementUpdates"
        ],
        "type": "object",
        "properties": {
          "entitlementUpdates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectoryAssignmentsPatchUpdateRequestPayload"
            }
          }
        },
        "description": "JSON object that contains the specifications of an assignment, such as the name of the assigned plan and whether to distribute the quota and how much to subaccounts that currently exist in the directory and to subaccounts that will be added to the directory in the future."
      },
      "DirectoryAssignmentsRequestPayload": {
        "required": [
          "plan",
          "service"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The quantity of the plan to assign to the specified directory. Relevant and mandatory only for plans that have a numeric quota.  Do not set if enable=TRUE is specified."
          },
          "autoAssign": {
            "type": "boolean",
            "description": "Whether to automatically allocate the plans of entitlements that have a numeric quota with the amount specified in auto-distribute-amount to any new subaccount that is added to the directory in the future. For entitlements without a numeric quota, the plan is assigned to any new subaccount that is added to the directory in the future with the condition that enable=TRUE is set (autoDistributeAmount is not relevant in this case). If distribute=TRUE, the same assignment is also made to all subaccounts currently in the directory. Entitlements are subject to available quota in the directory."
          },
          "autoDistributeAmount": {
            "type": "integer",
            "description": "The quota of the specified plan to automatically allocate to any new subaccount that is created in the future in the directory.\nWhen applying this option, you must set autoAssign=TRUE and/or distribute=TRUE. Applies only to entitlements that have a numeric quota. Entitlements are subject to available quota in the directory.",
            "format": "int32"
          },
          "distribute": {
            "type": "boolean",
            "description": "Whether to assign the plan with the quota specified in autoDistributeAmount to subaccounts currently located in the specified directory. For entitlements without a numeric quota, such as multitenant apps, the plan is assigned to the subaccounts currently located in the directory (autoDistributeAmount is not relevant in this case). In both cases, autoAssign must be set to TRUE."
          },
          "enable": {
            "type": "boolean",
            "description": "Whether to allocate the plan to the to the specified directory without quantity restrictions. Relevant and mandatory only for plans that don't have a numeric quota. Do not use if amount is specified."
          },
          "plan": {
            "type": "string",
            "description": "The technical name of the entitlement to assign to the directory."
          },
          "planUniqueIdentifier": {
            "type": "string",
            "description": "A unique identifier for service plans that can distinguish between the same service plans with different pricing plans."
          },
          "service": {
            "type": "string",
            "description": "The technical name of the entitlement (service, application, environment) to assign."
          }
        }
      },
      "DirectoryAssignmentsRequestPayloadCollection": {
        "required": [
          "entitlements"
        ],
        "type": "object",
        "properties": {
          "entitlements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectoryAssignmentsRequestPayload"
            }
          }
        },
        "description": "JSON object that contains the specifications of assignment, such as the name of the assigned plan, the quantity to distribute, and whether to distribute the quota and how much to subaccounts that currently exist in the directory and to subaccounts that will added to the directory in the future."
      },
      "EntitledAndAssignedServicesResponseObject": {
        "type": "object",
        "properties": {
          "assignedServices": {
            "type": "array",
            "description": "The list of services that are assigned to subaccounts located under a global account.",
            "items": {
              "$ref": "#/components/schemas/AssignedServiceResponseObject"
            }
          },
          "entitledServices": {
            "uniqueItems": true,
            "type": "array",
            "description": "Services entitled to global account, its directories and subaccounts.",
            "items": {
              "$ref": "#/components/schemas/EntitledServicesResponseObject"
            }
          },
          "fetchErrorFromExternalProviderRegistry": {
            "type": "boolean",
            "description": "Whether the External Provider Registry (XPR) is available."
          }
        }
      },
      "EntitledServicesResponseObject": {
        "type": "object",
        "properties": {
          "applicationCoordinates": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "The application coordinates provided in metadata."
            },
            "description": "The application coordinates provided in metadata."
          },
          "businessCategory": {
            "type": "string",
            "description": "Services grouped according to capabilities and customer’s business needs, for example, Extension Suite - Digital Experience, Extension Suite - Development Efficiency, and Extension Suite - Digital Process Automation.",
            "enum": [
              "OTHER",
              "APPLICATION_DEVELOPMENT_AND_AUTOMATION",
              "INTEGRATION",
              "FOUNDATION_CROSS_SERVICES",
              "AI",
              "DATA_AND_ANALYTICS",
              "EXTENDED_PLANNING_AND_ANALYSIS"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the service for customer-facing UIs."
          },
          "displayName": {
            "type": "string",
            "description": "Display name of the service for customer-facing UIs."
          },
          "iconBase64": {
            "type": "string",
            "description": "The icon of the service in Base64 format."
          },
          "name": {
            "type": "string",
            "description": "The unique registration name of the deployed service as defined by the service provider."
          },
          "ownerType": {
            "type": "string",
            "description": "The owner type of the service. Possible values:\n* <b>VENDOR:</b> The owner is a service owner, who is affiliated with the cloud operator, that added the service to the product catalog for general consumption.\n* <b>CUSTOMER:</b> The owner is an SAP customer that added a custom service to the product catalog, and it is available only for consumption within the customer's global account.\n* <b>PARTNER:</b> The owner is an SAP partner that added the service to the product catalog, and it is available only to their customers for consumption.\n",
            "enum": [
              "VENDOR",
              "CUSTOMER",
              "PARTNER"
            ]
          },
          "servicePlans": {
            "type": "array",
            "description": "List of service plans associated with the entitled service.",
            "items": {
              "$ref": "#/components/schemas/ServicePlanResponseObject"
            }
          }
        },
        "description": "Services entitled to global account, its directories and subaccounts."
      },
      "EntitlementAmountResponseObject": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The quantity of the entitlement that is assigned to the root global account or directory."
          },
          "autoAssign": {
            "type": "boolean",
            "description": "Specifies if a plan associated with this entitlement will be automatically assigned by the system to any new subaccount. For example, free plans that are available to all subaccounts."
          },
          "commercialModel": {
            "$ref": "#/components/schemas/CommercialModelResponseObject"
          },
          "entitlementName": {
            "type": "string",
            "description": "The technical name of the product."
          },
          "productId": {
            "type": "string",
            "description": "The unique ID of the material (product) to which the assigned service plan belongs."
          }
        },
        "description": "Relevant entitlements for the source that added the product."
      },
      "ExternalResourceRequestPayload": {
        "type": "object",
        "properties": {
          "resourceData": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Any additional data to include."
            },
            "description": "Any additional data to include."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the resource."
          },
          "resourceProvider": {
            "type": "string",
            "description": "The name of the provider."
          },
          "resourceTechnicalName": {
            "type": "string",
            "description": "The unique name of the resource."
          },
          "resourceType": {
            "type": "string",
            "description": "The type of the provider. For example infrastructure-as-a-service (IaaS)."
          }
        },
        "description": "External resources to assign to subaccount"
      },
      "JsonNode": {
        "type": "object",
        "description": "Error description in JSON format"
      },
      "NestingErrorDetailsResponseObject": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "Nesting of error responses"
      },
      "ServicePlanAssignmentRequestPayload": {
        "required": [
          "assignmentInfo",
          "serviceName",
          "servicePlanName"
        ],
        "type": "object",
        "properties": {
          "assignmentInfo": {
            "type": "array",
            "description": "List of assigned entitlements and their specifications.",
            "items": {
              "$ref": "#/components/schemas/SubaccountServicePlanRequestPayload"
            }
          },
          "serviceName": {
            "type": "string",
            "description": "The technical name of the entitlement to assign to a subaccount."
          },
          "servicePlanName": {
            "type": "string",
            "description": "The technical name of the entitlement's plan."
          }
        },
        "description": "Contains information about the plans to assign to a subaccount."
      },
      "ServicePlanResponseObject": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The assigned quota for maximum allowed consumption of the plan. Relevant for services that have a numeric quota assignment."
          },
          "autoAssign": {
            "type": "boolean",
            "description": "Whether to automatically assign a quota of the entitlement to a subaccount when the subaccount is created in the entitlement's assigned directory."
          },
          "autoDistributeAmount": {
            "type": "integer",
            "description": "The amount of the entitlement to automatically assign to a subaccount when the subaccount is created in the entitlement's assigned directory.\nRequires that autoAssign is set to TRUE, and there is remaining quota for the entitlement. ",
            "format": "int32"
          },
          "availableForInternal": {
            "type": "boolean",
            "description": "Whether the service plan is available internally to SAP users."
          },
          "beta": {
            "type": "boolean",
            "description": "Whether the service plan is a beta feature."
          },
          "category": {
            "type": "string",
            "description": "The type of service offering. Possible values:\n* <b>PLATFORM:</b> A service required for using a specific platform; for example, Application Runtime is required for the Cloud Foundry platform.\n* <b>SERVICE:</b> A commercial or technical service. that has a numeric quota (amount) when entitled or assigned to a resource. When assigning entitlements of this type, use the 'amount' option instead of 'enable'. See: PUT/entitlements/v1/directories/{directoryGUID}/assignments.\n* <b>ELASTIC_SERVICE:</b> A commercial or technical service that has no numeric quota (amount) when entitled or assigned to a resource. Generally this type of service can be as many times as needed when enabled, but may in some cases be restricted by the service owner. When assigning entitlements of this type, use the 'enable' option instead of 'amount'. See: PUT/entitlements/v1/directories/{directoryGUID}/assignments.\n* <b>ELASTIC_LIMITED:</b> An elastic service that can be enabled for only one subaccount per global account.\n* <b>APPLICATION:</b> A multitenant application to which consumers can subscribe. As opposed to applications defined as a 'QUOTA_BASED_APPLICATION', these applications do not have a numeric quota and are simply enabled or disabled as entitlements per subaccount.\n* <b>QUOTA_BASED_APPLICATION:</b> A multitenant application to which consumers can subscribe. As opposed to applications defined as 'APPLICATION', these applications have an numeric quota that limits consumer usage of the subscribed application per subaccount. When maxAllowedSubaccountQuota is > 0, this is the limit that can be set when assigning the max quota entitlement of the app to any subaccount. If maxAllowedSubaccountQuota is = 0 or null, the max quota that can be entitled to any subaccount is the amount purchased by the customer (the global account quota).\n* <b>ENVIRONMENT:</b> An environment service; for example, Cloud Foundry.",
            "enum": [
              "PLATFORM",
              "SERVICE",
              "ELASTIC_SERVICE",
              "ELASTIC_LIMITED",
              "APPLICATION",
              "QUOTA_BASED_APPLICATION",
              "ENVIRONMENT"
            ]
          },
          "dataCenters": {
            "type": "array",
            "description": "Contains information about the data centers and regions in the cloud landscape",
            "items": {
              "$ref": "#/components/schemas/DataCenterResponseObject"
            }
          },
          "description": {
            "type": "string",
            "description": "Description of the service plan for customer-facing UIs."
          },
          "displayName": {
            "type": "string",
            "description": "Display name of the service plan for customer-facing UIs."
          },
          "internalQuotaLimit": {
            "type": "integer",
            "description": "The quota limit that is allowed for this service plan for SAP internal users.\nIf null, the default quota limit is set to 200.\nApplies only when the availableForInternal property is set to TRUE.",
            "format": "int32"
          },
          "maxAllowedSubaccountQuota": {
            "type": "integer",
            "description": "The maximum allowed usage quota per subaccount for multitenant applications and environments that are defined as \"quota-based\". This quota limits the usage of the application and/or environment per subaccount per a given usage metric that is defined within the application or environment by the service provider. If null, the usage limit per subaccount is the maximum free quota in the global account.\nFor example, a value of 1 could: (1) limit the number of subscriptions to a quota-based multitenant application within a global account according to the purchased quota, or (2) restrict the enablement of a single instance of an environment per subaccount.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The unique registration name of the service plan."
          },
          "providedBy": {
            "type": "string",
            "description": "[DEPRECATED] The source that added the service. Possible values:\n* <b>VENDOR:</b> The product has been added by SAP or the cloud operator to the product catalog for general use.\n* <b>GLOBAL_ACCOUNT_OWNER:</b> Custom services that are added by a customer and are available only for that customer’s global account.\n* <b>PARTNER:</b> Service that are added by partners. And only available to its customers.\n\nNote: This property is deprecated. Please use the ownerType attribute on the entitledService level instead.",
            "enum": [
              "VENDOR",
              "GLOBAL_ACCOUNT_OWNER",
              "PARTNER"
            ]
          },
          "provisioningMethod": {
            "type": "string",
            "description": "The method used to provision the service plan.\n* <b>SERVICE_BROKER:</b> Provisioning of Neo or Cloud Foundry quotas done by the service broker.\n* <b>NONE_REQUIRED:</b> Provisioning of Cloud Foundry quotas done by setting amount at provisioning-service.\n* <b>COMMERCIAL_SOLUTION_SCRIPT:</b> Provisioning is done by a script provided by the service owner and run by the Core Commercial Foundation service.\n* <b>GLOBAL_COMMERCIAL_SOLUTION_SCRIPT:</b> Provisioning is done by a script provided by the service owner and run by the Core Commercial Foundation service used for Global Account level.\n* <b>GLOBAL_QUOTA_DOMAIN_DB:</b> Provisioning is done by setting amount at Domain DB, this is relevant for non-ui quotas only.\n* <b>CLOUD_AUTOMATION:</b> Provisioning is done by the cloud automation service. This is relevant only for provisioning that requires external providers that are not within the scope of CIS.\n* <b>SPC:</b> Provisioning is done by Service Provider Cockpit.\n",
            "enum": [
              "SERVICE_BROKER",
              "NONE_REQUIRED",
              "COMMERCIAL_SOLUTION_SCRIPT",
              "GLOBAL_COMMERCIAL_SOLUTION_SCRIPT",
              "GLOBAL_QUOTA_DOMAIN_DB",
              "CLOUD_AUTOMATION",
              "SPC"
            ]
          },
          "remainingAmount": {
            "type": "number",
            "description": "The remaining amount of the plan that can still be assigned. For plans that don't have a numeric quota, the remaining amount is always the maximum allowed quota."
          },
          "resources": {
            "type": "array",
            "description": "Remote service resources provided by non-SAP cloud vendors, and which are offered by this plan.",
            "items": {
              "$ref": "#/components/schemas/ExternalResourceRequestPayload"
            }
          },
          "sourceEntitlements": {
            "type": "array",
            "description": "Relevant entitlements for the source that added the product.",
            "items": {
              "$ref": "#/components/schemas/EntitlementAmountResponseObject"
            }
          },
          "uniqueIdentifier": {
            "type": "string",
            "description": "A unique identifier for service plans that can distinguish between the same service plans with different pricing plans."
          },
          "unlimited": {
            "type": "boolean"
          }
        },
        "description": "List of service plans associated with the entitled service."
      },
      "SubaccountServicePlanRequestPayload": {
        "required": [
          "subaccountGUID"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "The quantity of the plan that is assigned to the specified subaccount. Relevant and mandatory only for plans that have a numeric quota. Do not set if enable=TRUE is specified."
          },
          "enable": {
            "type": "boolean",
            "description": "Whether to enable the service plan assignment to the specified subaccount without quantity restrictions. Relevant and mandatory only for plans that do not have a numeric quota. Do not set if amount is specified."
          },
          "resources": {
            "type": "array",
            "description": "External resources to assign to subaccount",
            "items": {
              "$ref": "#/components/schemas/ExternalResourceRequestPayload"
            }
          },
          "subaccountGUID": {
            "type": "string",
            "description": "The unique ID of the subaccount to which to assign a service plan."
          }
        },
        "description": "List of assigned entitlements and their specifications."
      },
      "SubaccountServicePlansRequestPayloadCollection": {
        "required": [
          "subaccountServicePlans"
        ],
        "type": "object",
        "properties": {
          "subaccountServicePlans": {
            "type": "array",
            "description": "Contains information about the plans to assign to a subaccount.",
            "items": {
              "$ref": "#/components/schemas/ServicePlanAssignmentRequestPayload"
            }
          }
        },
        "description": "The details of entitlement's name, plan, amount and subaccount GUIDs to assign to a subaccount. The entitlement can be a service, multitenant application, or environment. Note that some environments, such as Cloud Foundry, are available by default to all subaccounts, and therefore are not displayed as entitlements."
      }
    },
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://{identityzone}.authentication.eu10.hana.ondemand.com/oauth/token",
            "scopes": {
            }
          },
          "password": {
            "tokenUrl": "https://{identityzone}.authentication.eu10.hana.ondemand.com/oauth/token",
            "scopes": {
            }
          }
        }
      }
    }
  },
  "x-sap-shortText": "Manage product entitlements and assignments across your global account, directories, and subaccounts.",
  "externalDocs": {
    "description": "Account Administration Using APIs of the SAP Cloud Management Service",
    "url": "https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/17b6a171552544a6804f12ea83112a3f.html"
  },
  "x-sap-stateInfo": {
    "state": "Active"
  },
  "x-servers": [
    {
      "url": "https://entitlements-service.cfapps.eu10.hana.ondemand.com"
    }
  ]
}