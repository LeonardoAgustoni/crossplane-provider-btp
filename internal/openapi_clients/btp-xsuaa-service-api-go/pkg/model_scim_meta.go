/*
SAP XSUAA REST API

Provides access to RoleTemplates, Roles, RoleCollection etc. using the XSUAA REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ScimMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScimMeta{}

// ScimMeta struct for ScimMeta
type ScimMeta struct {
	Version *int32 `json:"version,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	LastModified *time.Time `json:"lastModified,omitempty"`
	Attributes []string `json:"attributes,omitempty"`
}

// NewScimMeta instantiates a new ScimMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScimMeta() *ScimMeta {
	this := ScimMeta{}
	return &this
}

// NewScimMetaWithDefaults instantiates a new ScimMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScimMetaWithDefaults() *ScimMeta {
	this := ScimMeta{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ScimMeta) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimMeta) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ScimMeta) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *ScimMeta) SetVersion(v int32) {
	o.Version = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ScimMeta) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimMeta) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ScimMeta) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *ScimMeta) SetCreated(v time.Time) {
	o.Created = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *ScimMeta) GetLastModified() time.Time {
	if o == nil || IsNil(o.LastModified) {
		var ret time.Time
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimMeta) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *ScimMeta) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given time.Time and assigns it to the LastModified field.
func (o *ScimMeta) SetLastModified(v time.Time) {
	o.LastModified = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ScimMeta) GetAttributes() []string {
	if o == nil || IsNil(o.Attributes) {
		var ret []string
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimMeta) GetAttributesOk() ([]string, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ScimMeta) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []string and assigns it to the Attributes field.
func (o *ScimMeta) SetAttributes(v []string) {
	o.Attributes = v
}

func (o ScimMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScimMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

type NullableScimMeta struct {
	value *ScimMeta
	isSet bool
}

func (v NullableScimMeta) Get() *ScimMeta {
	return v.value
}

func (v *NullableScimMeta) Set(val *ScimMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableScimMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableScimMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScimMeta(val *ScimMeta) *NullableScimMeta {
	return &NullableScimMeta{value: val, isSet: true}
}

func (v NullableScimMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScimMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


