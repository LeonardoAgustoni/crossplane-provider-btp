/*
SAP XSUAA REST API

Provides access to RoleTemplates, Roles, RoleCollection etc. using the XSUAA REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the App type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &App{}

// App struct for App
type App struct {
	Appid *string `json:"appid,omitempty"`
	Serviceinstanceid *string `json:"serviceinstanceid,omitempty"`
	PlanId *string `json:"planId,omitempty"`
	PlanName *string `json:"planName,omitempty"`
	OrgId *string `json:"orgId,omitempty"`
	SpaceId *string `json:"spaceId,omitempty"`
	UserName *string `json:"userName,omitempty"`
	Description *string `json:"description,omitempty"`
	MasterAppId *string `json:"masterAppId,omitempty"`
	TenantId *string `json:"tenantId,omitempty"`
	Xsappname *string `json:"xsappname,omitempty"`
	Scopes []Scope `json:"scopes,omitempty"`
	Authorities []string `json:"authorities,omitempty"`
	ForeignScopeReferences []string `json:"foreign-scope-references,omitempty"`
	Attributes []AppAttribute `json:"attributes,omitempty"`
	RoleTemplates []RoleTemplate `json:"role-templates,omitempty"`
	Oauth2Configuration *OAuth2Configuration `json:"oauth2-configuration,omitempty"`
	TenantMode *string `json:"tenant-mode,omitempty"`
}

// NewApp instantiates a new App object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApp() *App {
	this := App{}
	return &this
}

// NewAppWithDefaults instantiates a new App object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppWithDefaults() *App {
	this := App{}
	return &this
}

// GetAppid returns the Appid field value if set, zero value otherwise.
func (o *App) GetAppid() string {
	if o == nil || IsNil(o.Appid) {
		var ret string
		return ret
	}
	return *o.Appid
}

// GetAppidOk returns a tuple with the Appid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetAppidOk() (*string, bool) {
	if o == nil || IsNil(o.Appid) {
		return nil, false
	}
	return o.Appid, true
}

// HasAppid returns a boolean if a field has been set.
func (o *App) HasAppid() bool {
	if o != nil && !IsNil(o.Appid) {
		return true
	}

	return false
}

// SetAppid gets a reference to the given string and assigns it to the Appid field.
func (o *App) SetAppid(v string) {
	o.Appid = &v
}

// GetServiceinstanceid returns the Serviceinstanceid field value if set, zero value otherwise.
func (o *App) GetServiceinstanceid() string {
	if o == nil || IsNil(o.Serviceinstanceid) {
		var ret string
		return ret
	}
	return *o.Serviceinstanceid
}

// GetServiceinstanceidOk returns a tuple with the Serviceinstanceid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetServiceinstanceidOk() (*string, bool) {
	if o == nil || IsNil(o.Serviceinstanceid) {
		return nil, false
	}
	return o.Serviceinstanceid, true
}

// HasServiceinstanceid returns a boolean if a field has been set.
func (o *App) HasServiceinstanceid() bool {
	if o != nil && !IsNil(o.Serviceinstanceid) {
		return true
	}

	return false
}

// SetServiceinstanceid gets a reference to the given string and assigns it to the Serviceinstanceid field.
func (o *App) SetServiceinstanceid(v string) {
	o.Serviceinstanceid = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *App) GetPlanId() string {
	if o == nil || IsNil(o.PlanId) {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *App) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *App) SetPlanId(v string) {
	o.PlanId = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *App) GetPlanName() string {
	if o == nil || IsNil(o.PlanName) {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanName) {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *App) HasPlanName() bool {
	if o != nil && !IsNil(o.PlanName) {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *App) SetPlanName(v string) {
	o.PlanName = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *App) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *App) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *App) SetOrgId(v string) {
	o.OrgId = &v
}

// GetSpaceId returns the SpaceId field value if set, zero value otherwise.
func (o *App) GetSpaceId() string {
	if o == nil || IsNil(o.SpaceId) {
		var ret string
		return ret
	}
	return *o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetSpaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SpaceId) {
		return nil, false
	}
	return o.SpaceId, true
}

// HasSpaceId returns a boolean if a field has been set.
func (o *App) HasSpaceId() bool {
	if o != nil && !IsNil(o.SpaceId) {
		return true
	}

	return false
}

// SetSpaceId gets a reference to the given string and assigns it to the SpaceId field.
func (o *App) SetSpaceId(v string) {
	o.SpaceId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *App) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *App) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *App) SetUserName(v string) {
	o.UserName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *App) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *App) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *App) SetDescription(v string) {
	o.Description = &v
}

// GetMasterAppId returns the MasterAppId field value if set, zero value otherwise.
func (o *App) GetMasterAppId() string {
	if o == nil || IsNil(o.MasterAppId) {
		var ret string
		return ret
	}
	return *o.MasterAppId
}

// GetMasterAppIdOk returns a tuple with the MasterAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetMasterAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.MasterAppId) {
		return nil, false
	}
	return o.MasterAppId, true
}

// HasMasterAppId returns a boolean if a field has been set.
func (o *App) HasMasterAppId() bool {
	if o != nil && !IsNil(o.MasterAppId) {
		return true
	}

	return false
}

// SetMasterAppId gets a reference to the given string and assigns it to the MasterAppId field.
func (o *App) SetMasterAppId(v string) {
	o.MasterAppId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *App) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *App) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *App) SetTenantId(v string) {
	o.TenantId = &v
}

// GetXsappname returns the Xsappname field value if set, zero value otherwise.
func (o *App) GetXsappname() string {
	if o == nil || IsNil(o.Xsappname) {
		var ret string
		return ret
	}
	return *o.Xsappname
}

// GetXsappnameOk returns a tuple with the Xsappname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetXsappnameOk() (*string, bool) {
	if o == nil || IsNil(o.Xsappname) {
		return nil, false
	}
	return o.Xsappname, true
}

// HasXsappname returns a boolean if a field has been set.
func (o *App) HasXsappname() bool {
	if o != nil && !IsNil(o.Xsappname) {
		return true
	}

	return false
}

// SetXsappname gets a reference to the given string and assigns it to the Xsappname field.
func (o *App) SetXsappname(v string) {
	o.Xsappname = &v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *App) GetScopes() []Scope {
	if o == nil || IsNil(o.Scopes) {
		var ret []Scope
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetScopesOk() ([]Scope, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *App) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []Scope and assigns it to the Scopes field.
func (o *App) SetScopes(v []Scope) {
	o.Scopes = v
}

// GetAuthorities returns the Authorities field value if set, zero value otherwise.
func (o *App) GetAuthorities() []string {
	if o == nil || IsNil(o.Authorities) {
		var ret []string
		return ret
	}
	return o.Authorities
}

// GetAuthoritiesOk returns a tuple with the Authorities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetAuthoritiesOk() ([]string, bool) {
	if o == nil || IsNil(o.Authorities) {
		return nil, false
	}
	return o.Authorities, true
}

// HasAuthorities returns a boolean if a field has been set.
func (o *App) HasAuthorities() bool {
	if o != nil && !IsNil(o.Authorities) {
		return true
	}

	return false
}

// SetAuthorities gets a reference to the given []string and assigns it to the Authorities field.
func (o *App) SetAuthorities(v []string) {
	o.Authorities = v
}

// GetForeignScopeReferences returns the ForeignScopeReferences field value if set, zero value otherwise.
func (o *App) GetForeignScopeReferences() []string {
	if o == nil || IsNil(o.ForeignScopeReferences) {
		var ret []string
		return ret
	}
	return o.ForeignScopeReferences
}

// GetForeignScopeReferencesOk returns a tuple with the ForeignScopeReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetForeignScopeReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.ForeignScopeReferences) {
		return nil, false
	}
	return o.ForeignScopeReferences, true
}

// HasForeignScopeReferences returns a boolean if a field has been set.
func (o *App) HasForeignScopeReferences() bool {
	if o != nil && !IsNil(o.ForeignScopeReferences) {
		return true
	}

	return false
}

// SetForeignScopeReferences gets a reference to the given []string and assigns it to the ForeignScopeReferences field.
func (o *App) SetForeignScopeReferences(v []string) {
	o.ForeignScopeReferences = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *App) GetAttributes() []AppAttribute {
	if o == nil || IsNil(o.Attributes) {
		var ret []AppAttribute
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetAttributesOk() ([]AppAttribute, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *App) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []AppAttribute and assigns it to the Attributes field.
func (o *App) SetAttributes(v []AppAttribute) {
	o.Attributes = v
}

// GetRoleTemplates returns the RoleTemplates field value if set, zero value otherwise.
func (o *App) GetRoleTemplates() []RoleTemplate {
	if o == nil || IsNil(o.RoleTemplates) {
		var ret []RoleTemplate
		return ret
	}
	return o.RoleTemplates
}

// GetRoleTemplatesOk returns a tuple with the RoleTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetRoleTemplatesOk() ([]RoleTemplate, bool) {
	if o == nil || IsNil(o.RoleTemplates) {
		return nil, false
	}
	return o.RoleTemplates, true
}

// HasRoleTemplates returns a boolean if a field has been set.
func (o *App) HasRoleTemplates() bool {
	if o != nil && !IsNil(o.RoleTemplates) {
		return true
	}

	return false
}

// SetRoleTemplates gets a reference to the given []RoleTemplate and assigns it to the RoleTemplates field.
func (o *App) SetRoleTemplates(v []RoleTemplate) {
	o.RoleTemplates = v
}

// GetOauth2Configuration returns the Oauth2Configuration field value if set, zero value otherwise.
func (o *App) GetOauth2Configuration() OAuth2Configuration {
	if o == nil || IsNil(o.Oauth2Configuration) {
		var ret OAuth2Configuration
		return ret
	}
	return *o.Oauth2Configuration
}

// GetOauth2ConfigurationOk returns a tuple with the Oauth2Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetOauth2ConfigurationOk() (*OAuth2Configuration, bool) {
	if o == nil || IsNil(o.Oauth2Configuration) {
		return nil, false
	}
	return o.Oauth2Configuration, true
}

// HasOauth2Configuration returns a boolean if a field has been set.
func (o *App) HasOauth2Configuration() bool {
	if o != nil && !IsNil(o.Oauth2Configuration) {
		return true
	}

	return false
}

// SetOauth2Configuration gets a reference to the given OAuth2Configuration and assigns it to the Oauth2Configuration field.
func (o *App) SetOauth2Configuration(v OAuth2Configuration) {
	o.Oauth2Configuration = &v
}

// GetTenantMode returns the TenantMode field value if set, zero value otherwise.
func (o *App) GetTenantMode() string {
	if o == nil || IsNil(o.TenantMode) {
		var ret string
		return ret
	}
	return *o.TenantMode
}

// GetTenantModeOk returns a tuple with the TenantMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *App) GetTenantModeOk() (*string, bool) {
	if o == nil || IsNil(o.TenantMode) {
		return nil, false
	}
	return o.TenantMode, true
}

// HasTenantMode returns a boolean if a field has been set.
func (o *App) HasTenantMode() bool {
	if o != nil && !IsNil(o.TenantMode) {
		return true
	}

	return false
}

// SetTenantMode gets a reference to the given string and assigns it to the TenantMode field.
func (o *App) SetTenantMode(v string) {
	o.TenantMode = &v
}

func (o App) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o App) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Appid) {
		toSerialize["appid"] = o.Appid
	}
	if !IsNil(o.Serviceinstanceid) {
		toSerialize["serviceinstanceid"] = o.Serviceinstanceid
	}
	if !IsNil(o.PlanId) {
		toSerialize["planId"] = o.PlanId
	}
	if !IsNil(o.PlanName) {
		toSerialize["planName"] = o.PlanName
	}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.SpaceId) {
		toSerialize["spaceId"] = o.SpaceId
	}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.MasterAppId) {
		toSerialize["masterAppId"] = o.MasterAppId
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.Xsappname) {
		toSerialize["xsappname"] = o.Xsappname
	}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.Authorities) {
		toSerialize["authorities"] = o.Authorities
	}
	if !IsNil(o.ForeignScopeReferences) {
		toSerialize["foreign-scope-references"] = o.ForeignScopeReferences
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.RoleTemplates) {
		toSerialize["role-templates"] = o.RoleTemplates
	}
	if !IsNil(o.Oauth2Configuration) {
		toSerialize["oauth2-configuration"] = o.Oauth2Configuration
	}
	if !IsNil(o.TenantMode) {
		toSerialize["tenant-mode"] = o.TenantMode
	}
	return toSerialize, nil
}

type NullableApp struct {
	value *App
	isSet bool
}

func (v NullableApp) Get() *App {
	return v.value
}

func (v *NullableApp) Set(val *App) {
	v.value = val
	v.isSet = true
}

func (v NullableApp) IsSet() bool {
	return v.isSet
}

func (v *NullableApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApp(val *App) *NullableApp {
	return &NullableApp{value: val, isSet: true}
}

func (v NullableApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


