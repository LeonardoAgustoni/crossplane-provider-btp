/*
SAP XSUAA REST API

Provides access to RoleTemplates, Roles, RoleCollection etc. using the XSUAA REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TenantCredentialTypeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantCredentialTypeInfo{}

// TenantCredentialTypeInfo struct for TenantCredentialTypeInfo
type TenantCredentialTypeInfo struct {
	TenantId *string `json:"tenantId,omitempty"`
	ServiceInstanceId *string `json:"serviceInstanceId,omitempty"`
	AppId *string `json:"appId,omitempty"`
	CredentialType *string `json:"credentialType,omitempty"`
	BindingId *string `json:"bindingId,omitempty"`
}

// NewTenantCredentialTypeInfo instantiates a new TenantCredentialTypeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantCredentialTypeInfo() *TenantCredentialTypeInfo {
	this := TenantCredentialTypeInfo{}
	return &this
}

// NewTenantCredentialTypeInfoWithDefaults instantiates a new TenantCredentialTypeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantCredentialTypeInfoWithDefaults() *TenantCredentialTypeInfo {
	this := TenantCredentialTypeInfo{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *TenantCredentialTypeInfo) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantCredentialTypeInfo) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *TenantCredentialTypeInfo) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *TenantCredentialTypeInfo) SetTenantId(v string) {
	o.TenantId = &v
}

// GetServiceInstanceId returns the ServiceInstanceId field value if set, zero value otherwise.
func (o *TenantCredentialTypeInfo) GetServiceInstanceId() string {
	if o == nil || IsNil(o.ServiceInstanceId) {
		var ret string
		return ret
	}
	return *o.ServiceInstanceId
}

// GetServiceInstanceIdOk returns a tuple with the ServiceInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantCredentialTypeInfo) GetServiceInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceInstanceId) {
		return nil, false
	}
	return o.ServiceInstanceId, true
}

// HasServiceInstanceId returns a boolean if a field has been set.
func (o *TenantCredentialTypeInfo) HasServiceInstanceId() bool {
	if o != nil && !IsNil(o.ServiceInstanceId) {
		return true
	}

	return false
}

// SetServiceInstanceId gets a reference to the given string and assigns it to the ServiceInstanceId field.
func (o *TenantCredentialTypeInfo) SetServiceInstanceId(v string) {
	o.ServiceInstanceId = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *TenantCredentialTypeInfo) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantCredentialTypeInfo) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *TenantCredentialTypeInfo) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *TenantCredentialTypeInfo) SetAppId(v string) {
	o.AppId = &v
}

// GetCredentialType returns the CredentialType field value if set, zero value otherwise.
func (o *TenantCredentialTypeInfo) GetCredentialType() string {
	if o == nil || IsNil(o.CredentialType) {
		var ret string
		return ret
	}
	return *o.CredentialType
}

// GetCredentialTypeOk returns a tuple with the CredentialType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantCredentialTypeInfo) GetCredentialTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CredentialType) {
		return nil, false
	}
	return o.CredentialType, true
}

// HasCredentialType returns a boolean if a field has been set.
func (o *TenantCredentialTypeInfo) HasCredentialType() bool {
	if o != nil && !IsNil(o.CredentialType) {
		return true
	}

	return false
}

// SetCredentialType gets a reference to the given string and assigns it to the CredentialType field.
func (o *TenantCredentialTypeInfo) SetCredentialType(v string) {
	o.CredentialType = &v
}

// GetBindingId returns the BindingId field value if set, zero value otherwise.
func (o *TenantCredentialTypeInfo) GetBindingId() string {
	if o == nil || IsNil(o.BindingId) {
		var ret string
		return ret
	}
	return *o.BindingId
}

// GetBindingIdOk returns a tuple with the BindingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantCredentialTypeInfo) GetBindingIdOk() (*string, bool) {
	if o == nil || IsNil(o.BindingId) {
		return nil, false
	}
	return o.BindingId, true
}

// HasBindingId returns a boolean if a field has been set.
func (o *TenantCredentialTypeInfo) HasBindingId() bool {
	if o != nil && !IsNil(o.BindingId) {
		return true
	}

	return false
}

// SetBindingId gets a reference to the given string and assigns it to the BindingId field.
func (o *TenantCredentialTypeInfo) SetBindingId(v string) {
	o.BindingId = &v
}

func (o TenantCredentialTypeInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantCredentialTypeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.ServiceInstanceId) {
		toSerialize["serviceInstanceId"] = o.ServiceInstanceId
	}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.CredentialType) {
		toSerialize["credentialType"] = o.CredentialType
	}
	if !IsNil(o.BindingId) {
		toSerialize["bindingId"] = o.BindingId
	}
	return toSerialize, nil
}

type NullableTenantCredentialTypeInfo struct {
	value *TenantCredentialTypeInfo
	isSet bool
}

func (v NullableTenantCredentialTypeInfo) Get() *TenantCredentialTypeInfo {
	return v.value
}

func (v *NullableTenantCredentialTypeInfo) Set(val *TenantCredentialTypeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantCredentialTypeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantCredentialTypeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantCredentialTypeInfo(val *TenantCredentialTypeInfo) *NullableTenantCredentialTypeInfo {
	return &NullableTenantCredentialTypeInfo{value: val, isSet: true}
}

func (v NullableTenantCredentialTypeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantCredentialTypeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


