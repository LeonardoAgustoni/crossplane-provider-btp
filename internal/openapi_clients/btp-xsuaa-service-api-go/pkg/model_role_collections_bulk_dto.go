/*
SAP XSUAA REST API

Provides access to RoleTemplates, Roles, RoleCollection etc. using the XSUAA REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RoleCollectionsBulkDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleCollectionsBulkDto{}

// RoleCollectionsBulkDto The role collection names to be created
type RoleCollectionsBulkDto struct {
	RoleCollections []RoleCollectionBasicDto `json:"roleCollections,omitempty"`
}

// NewRoleCollectionsBulkDto instantiates a new RoleCollectionsBulkDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleCollectionsBulkDto() *RoleCollectionsBulkDto {
	this := RoleCollectionsBulkDto{}
	return &this
}

// NewRoleCollectionsBulkDtoWithDefaults instantiates a new RoleCollectionsBulkDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleCollectionsBulkDtoWithDefaults() *RoleCollectionsBulkDto {
	this := RoleCollectionsBulkDto{}
	return &this
}

// GetRoleCollections returns the RoleCollections field value if set, zero value otherwise.
func (o *RoleCollectionsBulkDto) GetRoleCollections() []RoleCollectionBasicDto {
	if o == nil || IsNil(o.RoleCollections) {
		var ret []RoleCollectionBasicDto
		return ret
	}
	return o.RoleCollections
}

// GetRoleCollectionsOk returns a tuple with the RoleCollections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleCollectionsBulkDto) GetRoleCollectionsOk() ([]RoleCollectionBasicDto, bool) {
	if o == nil || IsNil(o.RoleCollections) {
		return nil, false
	}
	return o.RoleCollections, true
}

// HasRoleCollections returns a boolean if a field has been set.
func (o *RoleCollectionsBulkDto) HasRoleCollections() bool {
	if o != nil && !IsNil(o.RoleCollections) {
		return true
	}

	return false
}

// SetRoleCollections gets a reference to the given []RoleCollectionBasicDto and assigns it to the RoleCollections field.
func (o *RoleCollectionsBulkDto) SetRoleCollections(v []RoleCollectionBasicDto) {
	o.RoleCollections = v
}

func (o RoleCollectionsBulkDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleCollectionsBulkDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoleCollections) {
		toSerialize["roleCollections"] = o.RoleCollections
	}
	return toSerialize, nil
}

type NullableRoleCollectionsBulkDto struct {
	value *RoleCollectionsBulkDto
	isSet bool
}

func (v NullableRoleCollectionsBulkDto) Get() *RoleCollectionsBulkDto {
	return v.value
}

func (v *NullableRoleCollectionsBulkDto) Set(val *RoleCollectionsBulkDto) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleCollectionsBulkDto) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleCollectionsBulkDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleCollectionsBulkDto(val *RoleCollectionsBulkDto) *NullableRoleCollectionsBulkDto {
	return &NullableRoleCollectionsBulkDto{value: val, isSet: true}
}

func (v NullableRoleCollectionsBulkDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleCollectionsBulkDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


