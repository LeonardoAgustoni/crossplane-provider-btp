/*
SAP XSUAA REST API

Provides access to RoleTemplates, Roles, RoleCollection etc. using the XSUAA REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the XSUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &XSUser{}

// XSUser struct for XSUser
type XSUser struct {
	Id *string `json:"id,omitempty"`
	Username *string `json:"username,omitempty"`
	Password *string `json:"password,omitempty"`
	Email *string `json:"email,omitempty"`
	GivenName *string `json:"givenName,omitempty"`
	FamilyName *string `json:"familyName,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	Modified *time.Time `json:"modified,omitempty"`
	Origin *string `json:"origin,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
	Salt *string `json:"salt,omitempty"`
	PasswordLastModified *time.Time `json:"passwordLastModified,omitempty"`
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	LastLogonTime *int64 `json:"lastLogonTime,omitempty"`
	PreviousLogonTime *int64 `json:"previousLogonTime,omitempty"`
	ZoneId *string `json:"zoneId,omitempty"`
	Verified *bool `json:"verified,omitempty"`
	LegacyVerificationBehavior *bool `json:"legacyVerificationBehavior,omitempty"`
	PasswordChangeRequired *bool `json:"passwordChangeRequired,omitempty"`
	Version *int32 `json:"version,omitempty"`
	Active *bool `json:"active,omitempty"`
	RoleCollections []string `json:"roleCollections,omitempty"`
}

// NewXSUser instantiates a new XSUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewXSUser() *XSUser {
	this := XSUser{}
	return &this
}

// NewXSUserWithDefaults instantiates a new XSUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewXSUserWithDefaults() *XSUser {
	this := XSUser{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *XSUser) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *XSUser) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *XSUser) SetId(v string) {
	o.Id = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *XSUser) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *XSUser) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *XSUser) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *XSUser) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *XSUser) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *XSUser) SetPassword(v string) {
	o.Password = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *XSUser) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *XSUser) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *XSUser) SetEmail(v string) {
	o.Email = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *XSUser) GetGivenName() string {
	if o == nil || IsNil(o.GivenName) {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetGivenNameOk() (*string, bool) {
	if o == nil || IsNil(o.GivenName) {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *XSUser) HasGivenName() bool {
	if o != nil && !IsNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *XSUser) SetGivenName(v string) {
	o.GivenName = &v
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise.
func (o *XSUser) GetFamilyName() string {
	if o == nil || IsNil(o.FamilyName) {
		var ret string
		return ret
	}
	return *o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetFamilyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FamilyName) {
		return nil, false
	}
	return o.FamilyName, true
}

// HasFamilyName returns a boolean if a field has been set.
func (o *XSUser) HasFamilyName() bool {
	if o != nil && !IsNil(o.FamilyName) {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given string and assigns it to the FamilyName field.
func (o *XSUser) SetFamilyName(v string) {
	o.FamilyName = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *XSUser) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *XSUser) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *XSUser) SetCreated(v time.Time) {
	o.Created = &v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *XSUser) GetModified() time.Time {
	if o == nil || IsNil(o.Modified) {
		var ret time.Time
		return ret
	}
	return *o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetModifiedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *XSUser) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given time.Time and assigns it to the Modified field.
func (o *XSUser) SetModified(v time.Time) {
	o.Modified = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *XSUser) GetOrigin() string {
	if o == nil || IsNil(o.Origin) {
		var ret string
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetOriginOk() (*string, bool) {
	if o == nil || IsNil(o.Origin) {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *XSUser) HasOrigin() bool {
	if o != nil && !IsNil(o.Origin) {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given string and assigns it to the Origin field.
func (o *XSUser) SetOrigin(v string) {
	o.Origin = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *XSUser) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *XSUser) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *XSUser) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetSalt returns the Salt field value if set, zero value otherwise.
func (o *XSUser) GetSalt() string {
	if o == nil || IsNil(o.Salt) {
		var ret string
		return ret
	}
	return *o.Salt
}

// GetSaltOk returns a tuple with the Salt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetSaltOk() (*string, bool) {
	if o == nil || IsNil(o.Salt) {
		return nil, false
	}
	return o.Salt, true
}

// HasSalt returns a boolean if a field has been set.
func (o *XSUser) HasSalt() bool {
	if o != nil && !IsNil(o.Salt) {
		return true
	}

	return false
}

// SetSalt gets a reference to the given string and assigns it to the Salt field.
func (o *XSUser) SetSalt(v string) {
	o.Salt = &v
}

// GetPasswordLastModified returns the PasswordLastModified field value if set, zero value otherwise.
func (o *XSUser) GetPasswordLastModified() time.Time {
	if o == nil || IsNil(o.PasswordLastModified) {
		var ret time.Time
		return ret
	}
	return *o.PasswordLastModified
}

// GetPasswordLastModifiedOk returns a tuple with the PasswordLastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetPasswordLastModifiedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PasswordLastModified) {
		return nil, false
	}
	return o.PasswordLastModified, true
}

// HasPasswordLastModified returns a boolean if a field has been set.
func (o *XSUser) HasPasswordLastModified() bool {
	if o != nil && !IsNil(o.PasswordLastModified) {
		return true
	}

	return false
}

// SetPasswordLastModified gets a reference to the given time.Time and assigns it to the PasswordLastModified field.
func (o *XSUser) SetPasswordLastModified(v time.Time) {
	o.PasswordLastModified = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *XSUser) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *XSUser) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *XSUser) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetLastLogonTime returns the LastLogonTime field value if set, zero value otherwise.
func (o *XSUser) GetLastLogonTime() int64 {
	if o == nil || IsNil(o.LastLogonTime) {
		var ret int64
		return ret
	}
	return *o.LastLogonTime
}

// GetLastLogonTimeOk returns a tuple with the LastLogonTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetLastLogonTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LastLogonTime) {
		return nil, false
	}
	return o.LastLogonTime, true
}

// HasLastLogonTime returns a boolean if a field has been set.
func (o *XSUser) HasLastLogonTime() bool {
	if o != nil && !IsNil(o.LastLogonTime) {
		return true
	}

	return false
}

// SetLastLogonTime gets a reference to the given int64 and assigns it to the LastLogonTime field.
func (o *XSUser) SetLastLogonTime(v int64) {
	o.LastLogonTime = &v
}

// GetPreviousLogonTime returns the PreviousLogonTime field value if set, zero value otherwise.
func (o *XSUser) GetPreviousLogonTime() int64 {
	if o == nil || IsNil(o.PreviousLogonTime) {
		var ret int64
		return ret
	}
	return *o.PreviousLogonTime
}

// GetPreviousLogonTimeOk returns a tuple with the PreviousLogonTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetPreviousLogonTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.PreviousLogonTime) {
		return nil, false
	}
	return o.PreviousLogonTime, true
}

// HasPreviousLogonTime returns a boolean if a field has been set.
func (o *XSUser) HasPreviousLogonTime() bool {
	if o != nil && !IsNil(o.PreviousLogonTime) {
		return true
	}

	return false
}

// SetPreviousLogonTime gets a reference to the given int64 and assigns it to the PreviousLogonTime field.
func (o *XSUser) SetPreviousLogonTime(v int64) {
	o.PreviousLogonTime = &v
}

// GetZoneId returns the ZoneId field value if set, zero value otherwise.
func (o *XSUser) GetZoneId() string {
	if o == nil || IsNil(o.ZoneId) {
		var ret string
		return ret
	}
	return *o.ZoneId
}

// GetZoneIdOk returns a tuple with the ZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetZoneIdOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneId) {
		return nil, false
	}
	return o.ZoneId, true
}

// HasZoneId returns a boolean if a field has been set.
func (o *XSUser) HasZoneId() bool {
	if o != nil && !IsNil(o.ZoneId) {
		return true
	}

	return false
}

// SetZoneId gets a reference to the given string and assigns it to the ZoneId field.
func (o *XSUser) SetZoneId(v string) {
	o.ZoneId = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *XSUser) GetVerified() bool {
	if o == nil || IsNil(o.Verified) {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.Verified) {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *XSUser) HasVerified() bool {
	if o != nil && !IsNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *XSUser) SetVerified(v bool) {
	o.Verified = &v
}

// GetLegacyVerificationBehavior returns the LegacyVerificationBehavior field value if set, zero value otherwise.
func (o *XSUser) GetLegacyVerificationBehavior() bool {
	if o == nil || IsNil(o.LegacyVerificationBehavior) {
		var ret bool
		return ret
	}
	return *o.LegacyVerificationBehavior
}

// GetLegacyVerificationBehaviorOk returns a tuple with the LegacyVerificationBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetLegacyVerificationBehaviorOk() (*bool, bool) {
	if o == nil || IsNil(o.LegacyVerificationBehavior) {
		return nil, false
	}
	return o.LegacyVerificationBehavior, true
}

// HasLegacyVerificationBehavior returns a boolean if a field has been set.
func (o *XSUser) HasLegacyVerificationBehavior() bool {
	if o != nil && !IsNil(o.LegacyVerificationBehavior) {
		return true
	}

	return false
}

// SetLegacyVerificationBehavior gets a reference to the given bool and assigns it to the LegacyVerificationBehavior field.
func (o *XSUser) SetLegacyVerificationBehavior(v bool) {
	o.LegacyVerificationBehavior = &v
}

// GetPasswordChangeRequired returns the PasswordChangeRequired field value if set, zero value otherwise.
func (o *XSUser) GetPasswordChangeRequired() bool {
	if o == nil || IsNil(o.PasswordChangeRequired) {
		var ret bool
		return ret
	}
	return *o.PasswordChangeRequired
}

// GetPasswordChangeRequiredOk returns a tuple with the PasswordChangeRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetPasswordChangeRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.PasswordChangeRequired) {
		return nil, false
	}
	return o.PasswordChangeRequired, true
}

// HasPasswordChangeRequired returns a boolean if a field has been set.
func (o *XSUser) HasPasswordChangeRequired() bool {
	if o != nil && !IsNil(o.PasswordChangeRequired) {
		return true
	}

	return false
}

// SetPasswordChangeRequired gets a reference to the given bool and assigns it to the PasswordChangeRequired field.
func (o *XSUser) SetPasswordChangeRequired(v bool) {
	o.PasswordChangeRequired = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *XSUser) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *XSUser) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *XSUser) SetVersion(v int32) {
	o.Version = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *XSUser) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *XSUser) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *XSUser) SetActive(v bool) {
	o.Active = &v
}

// GetRoleCollections returns the RoleCollections field value if set, zero value otherwise.
func (o *XSUser) GetRoleCollections() []string {
	if o == nil || IsNil(o.RoleCollections) {
		var ret []string
		return ret
	}
	return o.RoleCollections
}

// GetRoleCollectionsOk returns a tuple with the RoleCollections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XSUser) GetRoleCollectionsOk() ([]string, bool) {
	if o == nil || IsNil(o.RoleCollections) {
		return nil, false
	}
	return o.RoleCollections, true
}

// HasRoleCollections returns a boolean if a field has been set.
func (o *XSUser) HasRoleCollections() bool {
	if o != nil && !IsNil(o.RoleCollections) {
		return true
	}

	return false
}

// SetRoleCollections gets a reference to the given []string and assigns it to the RoleCollections field.
func (o *XSUser) SetRoleCollections(v []string) {
	o.RoleCollections = v
}

func (o XSUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o XSUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.GivenName) {
		toSerialize["givenName"] = o.GivenName
	}
	if !IsNil(o.FamilyName) {
		toSerialize["familyName"] = o.FamilyName
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	if !IsNil(o.Origin) {
		toSerialize["origin"] = o.Origin
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.Salt) {
		toSerialize["salt"] = o.Salt
	}
	if !IsNil(o.PasswordLastModified) {
		toSerialize["passwordLastModified"] = o.PasswordLastModified
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !IsNil(o.LastLogonTime) {
		toSerialize["lastLogonTime"] = o.LastLogonTime
	}
	if !IsNil(o.PreviousLogonTime) {
		toSerialize["previousLogonTime"] = o.PreviousLogonTime
	}
	if !IsNil(o.ZoneId) {
		toSerialize["zoneId"] = o.ZoneId
	}
	if !IsNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	if !IsNil(o.LegacyVerificationBehavior) {
		toSerialize["legacyVerificationBehavior"] = o.LegacyVerificationBehavior
	}
	if !IsNil(o.PasswordChangeRequired) {
		toSerialize["passwordChangeRequired"] = o.PasswordChangeRequired
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.RoleCollections) {
		toSerialize["roleCollections"] = o.RoleCollections
	}
	return toSerialize, nil
}

type NullableXSUser struct {
	value *XSUser
	isSet bool
}

func (v NullableXSUser) Get() *XSUser {
	return v.value
}

func (v *NullableXSUser) Set(val *XSUser) {
	v.value = val
	v.isSet = true
}

func (v NullableXSUser) IsSet() bool {
	return v.isSet
}

func (v *NullableXSUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableXSUser(val *XSUser) *NullableXSUser {
	return &NullableXSUser{value: val, isSet: true}
}

func (v NullableXSUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableXSUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


