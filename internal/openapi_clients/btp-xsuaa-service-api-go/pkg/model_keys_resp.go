/*
SAP XSUAA REST API

Provides access to RoleTemplates, Roles, RoleCollection etc. using the XSUAA REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KeysResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeysResp{}

// KeysResp struct for KeysResp
type KeysResp struct {
	Created *string `json:"created,omitempty"`
	FipsCompliant *bool `json:"fipsCompliant,omitempty"`
}

// NewKeysResp instantiates a new KeysResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeysResp() *KeysResp {
	this := KeysResp{}
	return &this
}

// NewKeysRespWithDefaults instantiates a new KeysResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeysRespWithDefaults() *KeysResp {
	this := KeysResp{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *KeysResp) GetCreated() string {
	if o == nil || IsNil(o.Created) {
		var ret string
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeysResp) GetCreatedOk() (*string, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *KeysResp) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given string and assigns it to the Created field.
func (o *KeysResp) SetCreated(v string) {
	o.Created = &v
}

// GetFipsCompliant returns the FipsCompliant field value if set, zero value otherwise.
func (o *KeysResp) GetFipsCompliant() bool {
	if o == nil || IsNil(o.FipsCompliant) {
		var ret bool
		return ret
	}
	return *o.FipsCompliant
}

// GetFipsCompliantOk returns a tuple with the FipsCompliant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeysResp) GetFipsCompliantOk() (*bool, bool) {
	if o == nil || IsNil(o.FipsCompliant) {
		return nil, false
	}
	return o.FipsCompliant, true
}

// HasFipsCompliant returns a boolean if a field has been set.
func (o *KeysResp) HasFipsCompliant() bool {
	if o != nil && !IsNil(o.FipsCompliant) {
		return true
	}

	return false
}

// SetFipsCompliant gets a reference to the given bool and assigns it to the FipsCompliant field.
func (o *KeysResp) SetFipsCompliant(v bool) {
	o.FipsCompliant = &v
}

func (o KeysResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeysResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.FipsCompliant) {
		toSerialize["fipsCompliant"] = o.FipsCompliant
	}
	return toSerialize, nil
}

type NullableKeysResp struct {
	value *KeysResp
	isSet bool
}

func (v NullableKeysResp) Get() *KeysResp {
	return v.value
}

func (v *NullableKeysResp) Set(val *KeysResp) {
	v.value = val
	v.isSet = true
}

func (v NullableKeysResp) IsSet() bool {
	return v.isSet
}

func (v *NullableKeysResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeysResp(val *KeysResp) *NullableKeysResp {
	return &NullableKeysResp{value: val, isSet: true}
}

func (v NullableKeysResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeysResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


