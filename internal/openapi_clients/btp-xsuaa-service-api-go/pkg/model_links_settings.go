/*
SAP XSUAA REST API

Provides access to RoleTemplates, Roles, RoleCollection etc. using the XSUAA REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LinksSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinksSettings{}

// LinksSettings struct for LinksSettings
type LinksSettings struct {
	HomeRedirect *string `json:"homeRedirect,omitempty"`
}

// NewLinksSettings instantiates a new LinksSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinksSettings() *LinksSettings {
	this := LinksSettings{}
	return &this
}

// NewLinksSettingsWithDefaults instantiates a new LinksSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinksSettingsWithDefaults() *LinksSettings {
	this := LinksSettings{}
	return &this
}

// GetHomeRedirect returns the HomeRedirect field value if set, zero value otherwise.
func (o *LinksSettings) GetHomeRedirect() string {
	if o == nil || IsNil(o.HomeRedirect) {
		var ret string
		return ret
	}
	return *o.HomeRedirect
}

// GetHomeRedirectOk returns a tuple with the HomeRedirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinksSettings) GetHomeRedirectOk() (*string, bool) {
	if o == nil || IsNil(o.HomeRedirect) {
		return nil, false
	}
	return o.HomeRedirect, true
}

// HasHomeRedirect returns a boolean if a field has been set.
func (o *LinksSettings) HasHomeRedirect() bool {
	if o != nil && !IsNil(o.HomeRedirect) {
		return true
	}

	return false
}

// SetHomeRedirect gets a reference to the given string and assigns it to the HomeRedirect field.
func (o *LinksSettings) SetHomeRedirect(v string) {
	o.HomeRedirect = &v
}

func (o LinksSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinksSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HomeRedirect) {
		toSerialize["homeRedirect"] = o.HomeRedirect
	}
	return toSerialize, nil
}

type NullableLinksSettings struct {
	value *LinksSettings
	isSet bool
}

func (v NullableLinksSettings) Get() *LinksSettings {
	return v.value
}

func (v *NullableLinksSettings) Set(val *LinksSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableLinksSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableLinksSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinksSettings(val *LinksSettings) *NullableLinksSettings {
	return &NullableLinksSettings{value: val, isSet: true}
}

func (v NullableLinksSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinksSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


