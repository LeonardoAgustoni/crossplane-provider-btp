openapi: 3.0.1
info:
  contact: {}
  description: "Provides access to RoleTemplates, Roles, RoleCollection etc. using\
    \ the XSUAA REST API"
  license:
    name: "SAP SE, Walldorf, Germany"
    url: https://support.sap.com/en/my-support/keys.html
  termsOfService: ""
  title: SAP XSUAA REST API
  version: 1.0.0
servers:
- description: Generated server url
  url: https://xsuaa-provisioning.cf.sap.hana.ondemand.com
tags:
- description: API for providing access to XSUAA applications
  name: application
- description: API for providing access to XSUAA IDP groups to role collections mappings
  name: idp-role-collection
- description: API for providing access to XSUAA identity providers
  name: identity-providers
- description: API for providing access to the XSUAA roles
  name: roles
- description: API for managing user entries and role collections assignments
  name: usercontroller
- description: API for providing access to the XSUAA role templates
  name: roletemplates
- description: API to check if more custom platform IdP trusts are allowed
  name: customidp
- description: API for providing access to the xsuaa role collections
  name: rolecollections
- description: The tenants API
  name: tenant
- description: API to set the neoAuthN flag or check if set
  name: customidp
paths:
  /sap/rest/user:
    post:
      description: Creates a new user from the payload
      operationId: createUser
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/XSUser'
        required: true
      responses:
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Bad Request - The request was poorly formed. The specified
            origin is not allowed or the payload is invalid.
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: OK - The API creates the new user.
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Unauthorized - Your authentication credentials have been refused.
      summary: Create user
      tags:
      - usercontroller
    put:
      description: Updates an existing user
      operationId: updateUser
      parameters:
      - explode: true
        in: query
        name: onlyRoleCollections
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/XSUser'
        required: true
      responses:
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Bad Request - The request was poorly formed. The specified
            origin is not allowed or the payload is invalid.
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: OK - The API updates the user.
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Not found - The user cannot be found.
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Unauthorized - Your authentication credentials have been refused.
      summary: Update a user
      tags:
      - usercontroller
  /sap/rest/user/origin/{origin}/name/{userName}/rolecollections/{roleCollectionName}:
    delete:
      description: Unassigns a role collection from a user.
      operationId: removeRoleCollection
      parameters:
      - explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleCollectionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: OK - The API unassigns the role collection from the user.
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Bad Request - The request was poorly formed. The specified
            origin is invalid.
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Unauthorized - Your authentication credentials have been refused.
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Not found - The user or role collection cannot be found.
      summary: Remove role collection from user
      tags:
      - usercontroller
    put:
      description: Assigns a role collection to a user. The user can be created if
        they do not exist yet.
      operationId: addRoleCollection
      parameters:
      - explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: roleCollectionName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: createUserIfMissing
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: "OK - The API assigns the role collection the user. Additionally,\
            \ the user is created if requested"
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Bad Request - The request was poorly formed. The specified
            origin or payload is invalid.
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Not found - The user or role collection cannot be found.
      summary: Add role collection to user
      tags:
      - usercontroller
  /sap/rest/platform-identity-providers-global/{originKey}:
    delete:
      description: Deletes a custom platform IdP and distributes the information in
        the own region.
      operationId: deletePlatformIdentityProvider
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Internal Server Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Authenticated
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Ok
      security:
      - xs_idp_global:
        - xs_idp_global.write
      summary: Deletes a custom platform identity provider.
      tags:
      - platform-identity-providers-global
    get:
      description: Reads a custom platform IdP from own region.
      operationId: getPlatformIdentityProvider
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: deleted
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: refreshMetadata
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Internal Server Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Authenticated
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Ok
      security:
      - xs_idp_global:
        - xs_idp_global.write
      summary: Reads a custom platform identity provider.
      tags:
      - platform-identity-providers-global
    put:
      description: Updates a custom platform IdP and distributes the information in
        the own region.
      operationId: updatePlatformIdentityProvider
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: refreshTrust
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XSPlatformIdentityProvider'
        required: true
      responses:
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Internal Server Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Authenticated
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Ok
      security:
      - xs_idp_global:
        - xs_idp_global.write
      summary: Updates a custom platform identity provider.
      tags:
      - platform-identity-providers-global
  /sap/rest/identity-providers/{id}:
    delete:
      operationId: deleteIdentityProvider
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdentityProviderAbstractIdentityProviderDefinition'
          description: OK
      tags:
      - identity-providers
    get:
      description: Returns an identity provider specified by the id of the identity
        provider.
      operationId: retrieveIdentityProvider
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/XSIdentityProviderAbstractIdentityProviderDefinition'
          description: OK - The API returned the identity provider.
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/XSIdentityProviderAbstractIdentityProviderDefinition'
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/XSIdentityProviderAbstractIdentityProviderDefinition'
          description: Not found - A possible reason is that there is no identity
            provider that matches the id of your request.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/XSIdentityProviderAbstractIdentityProviderDefinition'
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_idp.read
      summary: Returns an identity provider.
      tags:
      - identity-providers
    put:
      operationId: updateIdentityProvider
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XSIdentityProvider'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdentityProviderAbstractIdentityProviderDefinition'
          description: OK
      tags:
      - identity-providers
  /sap/rest/identity-providers/migrate/{origin}:
    put:
      operationId: migrateSAMLToOIDCIDP
      parameters:
      - explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XSIdentityProvider'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdentityProviderAbstractIdentityProviderDefinition'
          description: OK
      tags:
      - identity-providers
  /sap/rest/identity-providers/migrate/{origin}/rollback:
    put:
      operationId: rollbackSAMLToOIDCIDP
      parameters:
      - explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdentityProviderAbstractIdentityProviderDefinition'
          description: OK
      tags:
      - identity-providers
  /sap/rest/authorization/v2/rolecollections/{roleCollectionName}:
    delete:
      description: Deletes a role collection specified by the name of the role collection.
      operationId: deleteRoleCollectionByName
      parameters:
      - description: Name of collection to be retrieved
        explode: false
        in: path
        name: roleCollectionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK - The API deleted the role collection.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: "Not Found - Possible reasons: No role collection could be\
            \ found that matches your request."
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "204":
          content:
            application/json:
              schema:
                type: object
          description: No Content - The API deleted the role collection.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.write
      summary: Deletes a role collection.
      tags:
      - rolecollections
    get:
      description: Returns information about a role collection identified by the name
        of the role collection.
      operationId: getRoleCollectionByName
      parameters:
      - description: Name of collection to be retrieved
        explode: false
        in: path
        name: roleCollectionName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: withRoles
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - explode: true
        in: query
        name: withUsers
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: withGroups
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollection'
          description: "Not Found - Possible reasons: No role collection could be\
            \ found that matches your request."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollection'
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollection'
          description: OK - The API retuned information about the role.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollection'
          description: Bad Request - The request was poorly formed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollection'
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns a role collection.
      tags:
      - rolecollections
    put:
      description: Updates the description of a role collection specified by the name
        of the role collection. You cannot change any other attribute of the role
        collection.
      operationId: changeRoleCollectionDescription
      parameters:
      - description: Name of the role collection
        explode: false
        in: path
        name: roleCollectionName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCollectionDescription'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK - The API updated the role collection description.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: "Not Found - Possible reasons: No role collection could be\
            \ found that matches your request."
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: Created - The API updated the role collection description.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
        - xs_authorization.write
      summary: Updates the description of a role collection.
      tags:
      - rolecollections
  /sap/rest/authorization/v2/rolecollections/{roleCollectionName}/roles:
    delete:
      description: "Updates a role collection by removing an array of roles from role\
        \ collection. Specify the roles by role name, application ID, and role template\
        \ name. These roles are removed from the role collection."
      operationId: deleteRolesFromRoleCollection
      parameters:
      - description: Name of the role collection
        explode: false
        in: path
        name: roleCollectionName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              description: "The list of role references in an array, specified by\
                \ the role name, application ID, and role template name."
              items:
                $ref: '#/components/schemas/RoleReference'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK - The API updated the role collection with the specified
            roles.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: Created - The API updated the role collection with the specified
            roles.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: "Not Found - Possible reasons: No role collection or role could\
            \ be found that matches your request."
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Bad Request - The request was poorly formed.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
        - xs_authorization.write
      summary: Remove roles from role collection.
      tags:
      - rolecollections
    get:
      description: Returns information about the roles of a role collection specified
        by the name of the role collection.
      operationId: getRolesByRoleCollectionName
      parameters:
      - description: Name of the role collection
        explode: false
        in: path
        name: roleCollectionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: "Not Found - Possible reasons: No role collection could be\
            \ found that matches your request."
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: OK - The API returned roles for the role collection.
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Bad Request - The request was poorly formed.
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns the roles of a role collection.
      tags:
      - rolecollections
    put:
      description: "Updates a role collection with an array of roles. Specify the\
        \ roles by role name, application ID, and role template name. These roles\
        \ are added to the roles already included in the role collection."
      operationId: addRolesToRoleCollection
      parameters:
      - description: Name of the role collection
        explode: false
        in: path
        name: roleCollectionName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              description: "The list of role references in an array, specified by\
                \ the role name, application ID, and role template name."
              items:
                $ref: '#/components/schemas/RoleReference'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK - The API updated the role collection with the specified
            roles.
        "201":
          content:
            application/json:
              schema:
                type: object
          description: Created - The API updated the role collection with the specified
            roles.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: "Not Found - Possible reasons: No role collection or role could\
            \ be found that matches your request."
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Bad Request - The request was poorly formed.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.write
        - xs_authorization.write
      summary: Add roles to role collection.
      tags:
      - rolecollections
  /sap/rest/authorization/v2/rolecollections/{roleCollectionName}/roles/{roleTemplateAppID}/{roleName}/{roleTemplateName}:
    delete:
      description: Deletes a role specified by the role reference from a role collection.
      operationId: deleteRoleFromRoleCollection
      parameters:
      - description: Name of the role collection
        explode: false
        in: path
        name: roleCollectionName
        required: true
        schema:
          type: string
        style: simple
      - description: AppID of the Role Template
        explode: false
        in: path
        name: roleTemplateAppID
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Role
        explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Role Template
        explode: false
        in: path
        name: roleTemplateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK - The API removed the role from the role collection.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: "Not Found - Possible reasons: No role collection or role could\
            \ be found that matches your request."
        "204":
          content:
            application/json:
              schema:
                type: object
          description: Created - The API removed the role from the role collection.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Bad Request - The request was poorly formed.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
        - xs_authorization.write
      summary: Deletes a role from a role collection.
      tags:
      - rolecollections
    put:
      description: "Adds a role reference, specified by role name, application ID,\
        \ and role template name, to a role collection."
      operationId: addRoleToRoleCollection
      parameters:
      - description: The name of the role collection to update.
        explode: false
        in: path
        name: roleCollectionName
        required: true
        schema:
          type: string
        style: simple
      - description: "The application ID, with which the role is associated."
        explode: false
        in: path
        name: roleTemplateAppID
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the role to add to the role collection.
        explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      - description: "The name of the role template, with which the role is associated."
        explode: false
        in: path
        name: roleTemplateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
          description: Created - The API updated the role collection with the specified
            role.
        "403":
          content:
            application/json:
              schema:
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "404":
          content:
            application/json:
              schema:
                type: object
          description: "Not Found - Possible reasons: No role collection or role could\
            \ be found that matches your request."
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK - The API updated the role collection with the specified
            role.
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Bad Request - The request was poorly formed.
        "401":
          content:
            application/json:
              schema:
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
        - xs_authorization.write
      summary: Adds a role to role a collection.
      tags:
      - rolecollections
  /sap/rest/authorization/v2/apps/{appId}/roletemplates/{templateName}/roles/{roleName}:
    delete:
      description: "Deletes a role specfied by app ID, role template name, and role\
        \ name."
      operationId: deleteRoleByRoleName
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the role
        explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: The API deleted the role.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: "Not found. Possible reasons: No service instance, role template\
            \ name, or role name could be found that match your request."
      security:
      - xs_auth:
        - xs_authorization.read
        - xs_authorization.write
      summary: Deletes a role.
      tags:
      - roles
    get:
      description: "Returns a role specified by the app ID, role template, and role\
        \ name."
      operationId: getRoleByAppAndRoleTemplate
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the role
        explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: The API returned the role.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: "Not found. Possible reasons: No service instances, role templates,\
            \ or role names could be found that match your request."
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns the role of a service instance.
      tags:
      - roles
    put:
      description: "Updates a role specfied by app ID, role template name, and role\
        \ name."
      operationId: updateRole
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the role template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the role
        explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: The API updated and returned the role.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Conflict
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Your request was poorly formed or the role is read-only.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: "Not found. Possible reasons: No service instance, role template\
            \ name, or role name could be found that match your request."
      security:
      - xs_auth:
        - xs_authorization.read
        - xs_authorization.write
      summary: Updates a role
      tags:
      - roles
  /sap/rest/user/bulk:
    post:
      description: Creates a set of users from the list in the payload
      operationId: createUsers
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              items:
                $ref: '#/components/schemas/XSUser'
              type: array
        required: true
      responses:
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Bad Request - The request was poorly formed. The specified
            origin is not allowed or the payload is invalid.
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: OK - The API creates all users.
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
      summary: Create multiple users
      tags:
      - usercontroller
  /sap/rest/platform-identity-providers-global:
    get:
      description: Reads all custom platform IdPs from own region.
      operationId: getPlatformIdentityProviders
      parameters:
      - explode: true
        in: query
        name: userbase
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: deleted
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fromModifiedAtInMillis
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: globalAccountId
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: active
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: originXsuaa
        required: false
        schema:
          type: string
        style: form
      responses:
        "500":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/XSPlatformIdentityProvider'
                type: array
          description: Internal Server Error
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/XSPlatformIdentityProvider'
                type: array
          description: Not Authorized
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/XSPlatformIdentityProvider'
                type: array
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/XSPlatformIdentityProvider'
                type: array
          description: Not Authenticated
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Ok
      security:
      - xs_idp_global:
        - xs_idp_global.write
      summary: Reads all custom platform identity providers.
      tags:
      - platform-identity-providers-global
    post:
      description: Creates a custom platform IdP and distributes the information in
        the own region.
      operationId: createPlatformIdentityProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XSPlatformIdentityProvider'
        required: true
      responses:
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Internal Server Error
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Conflict
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Authenticated
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Created
      security:
      - xs_idp_global:
        - xs_idp_global.write
      summary: Creates a custom platform identity provider.
      tags:
      - platform-identity-providers-global
  /sap/rest/platform-identity-providers-global/{originKey}/globalaccountids:
    get:
      description: Reads GlobalAccountIds of a custom platform IdP.
      operationId: getPlatformIdentityProviderGlobalAccountIds
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "500":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Internal Server Error
        "403":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Not Authenticated
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Ok
      security:
      - xs_idp_global:
        - xs_idp_global.read
      summary: Reads GlobalAccountIds.
      tags:
      - platform-identity-providers-global
    post:
      description: Adds a globalAccountId to a custom platform IdP.
      operationId: addPlatformIdentityProviderGlobalAccountId
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Internal Server Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Authenticated
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Created
      security:
      - xs_idp_global:
        - xs_idp_global.write
      summary: Adds a globalAccountId.
      tags:
      - platform-identity-providers-global
  /sap/rest/platform-identity-providers-global/refreshTrusts:
    post:
      description: Refreshes all platform Identity Provider trusts or trusts provided
        in the body.
      operationId: refreshPlatformIdentityProviderTrusts
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
      responses:
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal Server Error
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Not Authenticated
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Ok
      security:
      - xs_idp_global:
        - xs_idp_global.write
      summary: Refreshes platform Identity Provider trusts.
      tags:
      - platform-identity-providers-global
  /sap/rest/identity-providers:
    get:
      description: Returns a list of identity providers for the current subaccount.
      operationId: retrieveIdentityProviders
      parameters:
      - explode: true
        in: query
        name: activeOnly
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/XSIdentityProviderAbstractIdentityProviderDefinition'
                type: array
          description: OK - The API returns the list of identity providers.
        "403":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/XSIdentityProviderAbstractIdentityProviderDefinition'
                type: array
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "401":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/XSIdentityProviderAbstractIdentityProviderDefinition'
                type: array
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_idp.read
      summary: Returns a list of identity providers.
      tags:
      - identity-providers
    post:
      description: Creates an identity provider based on a configuration in JSON format.
      operationId: createIdentityProvider
      parameters:
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/XSIdentityProvider'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdentityProviderAbstractIdentityProviderDefinition'
          description: The identity provider has been created.
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdentityProviderAbstractIdentityProviderDefinition'
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdentityProviderAbstractIdentityProviderDefinition'
          description: Access denied. Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_idp.write
      summary: Creates an identity provider.
      tags:
      - identity-providers
  /sap/rest/globalaccount/{globalAccountId}/platform-identity-providers:
    get:
      description: Reads all platform identity providers as help values for token
        GA.
      operationId: getPlatformIdentityProvidersForGA
      parameters:
      - description: Global account ID
        explode: false
        in: path
        name: globalAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/XSPlatformIdentityProvider'
                type: array
          description: Ok
      security:
      - xs_idp:
        - xs_idp.read
      summary: Reads all platform IdPs for token GA.
      tags:
      - platform-identity-providers
    post:
      description: Adds a Trust for a platform identity provider.
      operationId: addPlatformIdentityProviderTrust
      parameters:
      - description: Global account ID
        explode: false
        in: path
        name: globalAccountId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPlatformIdentityProviderTrust'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Trust added to token GA
      security:
      - xs_idp:
        - xs_idp.write
      summary: Adds GA Trust for a given origin.
      tags:
      - platform-identity-providers
  /sap/rest/authorization/v2/users/current/rolecollections:
    delete:
      description: delete role collections for a user
      operationId: deleteRoleCollectionsForUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCollectionListDto'
        required: true
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
        "400":
          description: Bad Request
        "403":
          description: No Authorization
      security:
      - xs_auth:
        - xs_authorization.write
      summary: Delete bulk role collections of User
      tags:
      - rolecollections
    get:
      description: all role collections for a user
      operationId: getRoleCollectionsForUser_1
      parameters:
      - description: User ID
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollectionListDto'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollectionListDto'
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollectionListDto'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollectionListDto'
          description: No Authorization
      summary: Get role collections of User
      tags:
      - rolecollections
    post:
      description: create role collections for a user
      operationId: createRoleCollectionsForUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCollectionListDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollectionListDto'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollectionListDto'
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollectionListDto'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollectionListDto'
          description: No Authorization
      security:
      - xs_auth:
        - xs_authorization.write
      summary: Create bulk role collections for a User
      tags:
      - rolecollections
  /sap/rest/authorization/v2/rolecollections:
    get:
      description: "Returns all role collections which exist within the current subaccount,\
        \ sorted alphabetically by their names."
      operationId: getRoleCollections
      parameters:
      - description: "Set this parameter to true, to include the roles, that are associated\
          \ with the role collections."
        explode: true
        in: query
        name: showRoles
        required: false
        schema:
          type: boolean
        style: form
      - description: "Set this parameter to true, to include the users, to whom the\
          \ role collections are assigned."
        explode: true
        in: query
        name: showUsers
        required: false
        schema:
          type: boolean
        style: form
      - description: "Set this parameter to true, to include the groups, to which\
          \ the role collections are assigned."
        explode: true
        in: query
        name: showGroups
        required: false
        schema:
          type: boolean
        style: form
      - description: Set this parameter to enable paging starting at record <skip>.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Set this parameter to get at most <top> records. If set, maxed\
          \ at 500."
        explode: true
        in: query
        name: top
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Set this parameter to filter the result based on the name of
          the rolecollections.
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Set this parameter to filter the result based on the readOnly
          property of the rolecollections.
        explode: true
        in: query
        name: readOnly
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: OK - The API returned role collections of the current subaccount.
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: "Not Found - Possible reasons, no role collections could be\
            \ found that match your request."
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: Bad Request - The request was poorly formed.
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns role collections.
      tags:
      - rolecollections
    post:
      description: "Creates a role collection. You must include a role name at a minimum.\
        \ The description is created as null if you do not include one. You can include\
        \ role references as defined by the role name, the application ID, and role\
        \ template name. To assign group members use the /Groups endpoint. Groups\
        \ are mapped to role collections in the Authorization and Trust Management\
        \ service."
      operationId: createRoleCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCollection'
        required: true
      responses:
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollection'
          description: Unprocessable Content - The maximal number of custom role collections
            per subaccount was exceeded.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollection'
          description: "Not found - Possible reasons, no role collections could be\
            \ found that match your request."
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollection'
          description: OK - The API created the role collection and returned information
            about the role collection.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollection'
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollection'
          description: Created - The API created the role collection and returned
            information about the role collection.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollection'
          description: "Bad Request - The request was poorly formed. For example,\
            \ the API does not support setting isReadOnly to true."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollection'
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
        - xs_authorization.write
      summary: Creates a role collection.
      tags:
      - rolecollections
  /sap/rest/authorization/v2/rolecollections/bulk:
    delete:
      description: Bulk delete of role collections specified by the name of the role
        collection.
      operationId: deleteRoleCollections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCollectionNamesDto'
        required: true
      responses:
        "404":
          description: "Not found - Possible reasons, no role collections could be\
            \ found that match your request."
        "403":
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "400":
          description: "Bad Request - The request was poorly formed. For example,\
            \ the API does not support setting isReadOnly to true."
        "204":
          description: Deleted - The API deleted the role collections.
        "401":
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.write
      summary: Bulk delete of role collections.
      tags:
      - rolecollections
    post:
      description: Bulk create of role collections specified by the name of the role
        collection.
      operationId: createRoleCollections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCollectionsBulkDto'
        required: true
      responses:
        "404":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: "Not found - Possible reasons, no role collections could be\
            \ found that match your request."
        "403":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "201":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Created - The API created the role collections and returned
            information about the role collections.
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: "Bad Request - The request was poorly formed. For example,\
            \ the API does not support setting isReadOnly to true."
        "401":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.write
      summary: Bulk creation of role collections.
      tags:
      - rolecollections
  /sap/rest/authorization/v2/identity-providers/{origin}/attributes:
    post:
      description: Add an attribute with value and operation to current IdP and application
        role collection.
      operationId: addIdpAttributeToRoleCollection
      parameters:
      - description: Origin Key
        explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderMapping'
        required: true
      responses:
        "404":
          content:
            application/json:
              schema:
                type: object
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                type: object
          description: No Authorization
        "201":
          content:
            application/json:
              schema:
                type: object
          description: Created
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Add a Idp attribute with value and operator to a role collection
      tags:
      - idp-role-collection
  /sap/rest/authorization/v2/apps/roles:
    post:
      description: Create a role for an application based on a role template. You
        must define the role name and description as well as identify the application
        and the role template name that you want to include in the role. The role
        inherits the scopes of the role template.
      operationId: createRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Unprocessable Content. The maximal number of custom roles per
            subaccount was exceeded.
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: The API created the role.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Your request was poorly formed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Access denied. Your authentication credentials have been refused.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Conflict. A role with the same name based on the same template
            already exists.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Not found.
      security:
      - xs_auth:
        - xs_authorization.read
        - xs_authorization.write
      summary: Creates a role for an application.
      tags:
      - roles
  /Users:
    get:
      operationId: findUsers
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          default: id pr
          type: string
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: created
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ascending
          type: string
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchResultsObject'
          description: OK
      tags:
      - scim-user-endpoints
    post:
      operationId: createUser_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScimUser'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScimUser'
          description: Created
      tags:
      - scim-user-endpoints
  /Groups:
    get:
      operationId: listGroups
      parameters:
      - explode: true
        in: query
        name: attributes
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          default: id pr
          type: string
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: displayName
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          default: ascending
          type: string
        style: form
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: count
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchResultsObject'
          description: OK
      tags:
      - scim-group-endpoints
    post:
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
        required: true
      responses:
        "201":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ScimGroup'
          description: Created
      tags:
      - scim-group-endpoints
  /sap/rest/globalaccount/{globalAccountId}/platform-identity-providers/{originKey}:
    delete:
      description: Deletes a trust for a platform identity provider.
      operationId: deletePlatformIdentityProviderTrust
      parameters:
      - description: Global account ID
        explode: false
        in: path
        name: globalAccountId
        required: true
        schema:
          type: string
        style: simple
      - description: Origin of the trust to remove
        explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Trust deleted from GA
      security:
      - xs_idp:
        - xs_idp.write
      summary: Deletes a GA Trust for given origin.
      tags:
      - platform-identity-providers
    patch:
      description: Updates a trust for a platform identity provider.
      operationId: updatePlatformIdentityProviderTrust
      parameters:
      - description: Global account ID
        explode: false
        in: path
        name: globalAccountId
        required: true
        schema:
          type: string
        style: simple
      - description: Origin of the trust to remove
        explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: refreshTrust
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPlatformIdentityProviderTrust'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Trust updated from GA
      security:
      - xs_idp:
        - xs_idp.write
      summary: Updates a GA Trust for given origin.
      tags:
      - platform-identity-providers
  /sap/rest/authorization/v2/securitySettings:
    get:
      operationId: readSettings
      parameters:
      - explode: true
        in: query
        name: token
        required: true
        schema:
          $ref: '#/components/schemas/Token'
        style: form
      - description: ID of tenant that should be returned
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantSettingsResp'
          description: OK
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantSettingsResp'
          description: Not Found
      security:
      - tenant_auth:
        - xs_tenant.read
        - xs_authorization.read
      summary: Reads settings of a tenant
      tags:
      - tenant
    patch:
      description: Updates settings of a tenant
      operationId: updateSettings
      parameters:
      - description: ID of tenant that should be updated
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantSettingsReq'
        required: true
      responses:
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantSettingsResp'
          description: JSON malformed
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantSettingsResp'
          description: Updated
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TenantSettingsResp'
          description: Not Found
      security:
      - tenant_auth:
        - xs_authorization.write
        - xs_tenant.write
      tags:
      - tenant
  /sap/rest/user/origin:
    get:
      description: Returns all unique origin values of all users in the account.
      operationId: getOrigins
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  type: string
                type: array
          description: OK - The API returns the origin names.
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  type: string
                type: array
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  type: string
                type: array
          description: Unauthorized - Your authentication credentials have been refused.
      summary: Get origins of users
      tags:
      - usercontroller
  /sap/rest/user/origin/{origin}/name:
    get:
      description: "Returns all usernames in the account, sorted alphabetically"
      operationId: getUserNames
      parameters:
      - explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: details
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: OK - The API returns the user names.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Bad Request - The request was poorly formed. The specified
            origin is not allowed or the filter is invalid.
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: NotFound - Could not find the following resource.
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
      summary: Get usernames
      tags:
      - usercontroller
  /sap/rest/user/origin/{origin}/name/{username}:
    get:
      description: Returns the user record of the specified username and origin
      operationId: getUserByName
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: OK - The API returns the user record.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Bad Request - The request was poorly formed. The specified
            origin is not allowed or the parameters are invalid.
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Not found - The user cannot be found.
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/XSUser'
          description: Unauthorized - Your authentication credentials have been refused.
      summary: Get a specifiy user
      tags:
      - usercontroller
  /sap/rest/user/id/{id}:
    delete:
      description: Deletes an existing user with the specified user ID
      operationId: deleteUserById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK - The API deletes the user.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: Not found - The user cannot be found.
        "403":
          content:
            '*/*':
              schema:
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: Bad Request - The request was poorly formed.
        "401":
          content:
            '*/*':
              schema:
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
      summary: Delete a user
      tags:
      - usercontroller
    get:
      description: Retrieves a user with the specified ID
      operationId: getUserById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: OK - The API returns the user.
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Not found - The user cannot be found.
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Bad Request - The request was poorly formed.
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
      summary: Read user by ID
      tags:
      - usercontroller
  /sap/rest/tenantLoginInfo/{subdomain}:
    get:
      operationId: getZoneInformationBySubdomain
      parameters:
      - description: Subdomain of the tenant
        explode: false
        in: path
        name: subdomain
        required: true
        schema:
          type: string
        style: simple
      - description: ClientId of the application created by the identity broker
        explode: true
        in: query
        name: iasClient
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSTenantV2ZoneInformation'
          description: OK
      summary: Get Zone information for tenant
      tags:
      - zone-trust-information
  /sap/rest/neo/platformidentityproviders:
    get:
      description: Returns the feature flag value for a neo user for a IAS tenant
      operationId: getCustomIdPFeatureFlagForNeoUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Ok
      summary: Returns the feature flag value for a neo user for a IAS tenant
      tags:
      - customidp
  /sap/rest/identity-providers/ias:
    get:
      description: "For the current XSUAA tenant, returns those IAS tenants for which\
        \ no SAML trust has been set up yet."
      operationId: retrieveIasTenants
      parameters:
      - explode: true
        in: query
        name: all
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: additionalInfo
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
                uniqueItems: true
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "404":
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
                uniqueItems: true
          description: Not found - A possible reason is that there is no identity
            provider that matches the id of your request.
        "200":
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
                uniqueItems: true
          description: OK - The API returned the IAS tenant list.
        "401":
          content:
            '*/*':
              schema:
                items:
                  additionalProperties:
                    type: object
                  type: object
                type: array
                uniqueItems: true
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_idp.read
      summary: Returns a list of valid IAS tenants.
      tags:
      - identity-providers
  /sap/rest/identity-providers/ias/{tenantURL}:
    get:
      description: Returns a specific IAS tenants for the current XSUAA tenant.
      operationId: retrieveSpecificIasTenant
      parameters:
      - explode: false
        in: path
        name: tenantURL
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: all
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: additionalInfo
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "403":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "404":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Not found - A possible reason is that there is no identity
            provider that matches the id of your request.
        "200":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK - The API returned the IAS tenant list.
        "401":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_idp.read
      summary: Returns a specific IAS tenant.
      tags:
      - identity-providers
  /sap/rest/identity-providers/ias/status:
    get:
      description: Returns the current status of the IAS registry component. This
        includes a json payload containing errors or a health statement.
      operationId: getRegistryStatus
      responses:
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Not found - A possible reason is that there is no identity
            provider that matches the id of your request.
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK - The API returns the state of the registry.
      summary: Returns the status of IAS registry.
      tags:
      - identity-providers
  /sap/rest/identity-providers/btpcli/identity-providers:
    get:
      deprecated: true
      operationId: retrieveIdentityProvidersForBtpCliDeprecated
      parameters:
      - explode: true
        in: query
        name: activeOnly
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/BtpCliXsIdentityProvider'
                type: array
          description: OK
      tags:
      - identity-providers
  /sap/rest/globalaccount/{globalAccountId}/platform-identity-providers/status:
    get:
      description: Return whether multiple custom platform IdP trusts are allowed
      operationId: areMoreTrustsAllowed
      parameters:
      - explode: false
        in: path
        name: globalAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIdpCockpitResponse'
          description: OK
      security:
      - xs_idp:
        - xs_idp.read
      summary: Return whether multiple custom platform IdP trusts are allowed
      tags:
      - customidp
  /sap/rest/authorization/v2/zoneinfo/{subdomain}:
    get:
      operationId: getZoneInformationBySubdomain_1
      parameters:
      - description: Subdomain of the tenant
        explode: false
        in: path
        name: subdomain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSTenantV2ZoneInformation'
          description: OK
      summary: Get Zone information for tenant
      tags:
      - zone-trust-information
  /sap/rest/authorization/v2/users/{userId}/rolecollections:
    get:
      description: all role collections for a user
      operationId: getRoleCollectionsForUser
      parameters:
      - description: User ID
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollectionListDto'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollectionListDto'
          description: Not Found
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollectionListDto'
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCollectionListDto'
          description: No Authorization
      summary: Get role collections of User
      tags:
      - rolecollections
  /sap/rest/authorization/v2/securitySettings/public:
    get:
      operationId: readPublicSettings
      parameters:
      - explode: true
        in: query
        name: subdomain
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: OK
        "404":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Not Found
        "400":
          content:
            '*/*':
              schema:
                additionalProperties:
                  type: object
                type: object
          description: "Bad Request, either subdomain or tenant ID (but not both)\
            \ must be provided"
      summary: Reads public settings of a tenant
      tags:
      - tenant
  /sap/rest/authorization/v2/roles:
    get:
      description: "Returns all application roles for all service instances which\
        \ are registered at UAA as OAuth2 client, sorted alphabetically by their name\
        \ and roleTemplateAppId. The roles that are returned are limited to the subaccount\
        \ credentials that are used for this request."
      operationId: getRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: The API returned the roles.
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: "Not Found. Possible reasons, no roles could be found."
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Access denied. Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns the roles of all service instances.
      tags:
      - roles
  /sap/rest/authorization/v2/rolecollections/roles/{appId}/{roleTemplateName}/{roleName}:
    get:
      description: "Retrieve all RoleCollections containing a role. The role is identified\
        \ by appId, roleTemplateName and role name."
      operationId: getRoleCollectionsByAppIdTemplateNameAndRoleName
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Role Template
        explode: false
        in: path
        name: roleTemplateName
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Role
        explode: false
        in: path
        name: roleName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: OK
      security:
      - xs_auth:
        - xs_authorization.read
        - xs_authorization.write
      summary: "Get RoleCollections containing a role identified by appId, roleTemplateName\
        \ and role name"
      tags:
      - rolecollections
      - application
  /sap/rest/authorization/v2/rolecollections/pages/{pageId}:
    get:
      description: Returns the specified page of role collection search result. The
        role collections are the result of a previous paged GET request for role collections
        of the current subaccount.
      operationId: getRoleCollectionsByPaging
      parameters:
      - description: "Set this parameter to true, to include the roles, that are associated\
          \ with the role collections."
        explode: true
        in: query
        name: showRoles
        required: false
        schema:
          type: boolean
        style: form
      - description: "Set this parameter to true, to include the users, to whom the\
          \ role collections are assigned."
        explode: true
        in: query
        name: showUsers
        required: false
        schema:
          type: boolean
        style: form
      - description: "Set this parameter to true, to include the groups, to which\
          \ the role collections are assigned."
        explode: true
        in: query
        name: showGroups
        required: false
        schema:
          type: boolean
        style: form
      - description: Page Id
        explode: false
        in: path
        name: pageId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: OK - The API returned a page of role collection information.
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: "Not Found - Possible reasons, no role collections could be\
            \ found that match your request."
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: Bad Request - The request was poorly formed.
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns a page of role collections.
      tags:
      - rolecollections
  /sap/rest/authorization/v2/rolecollections/pages:
    get:
      description: Returns the specified page of role collection search result. The
        role collections are the result of a previous paged GET request for role collections
        of the current subaccount.
      operationId: getRoleCollectionsByPaging_1
      parameters:
      - description: "Set this parameter to true, to include the roles, that are associated\
          \ with the role collections."
        explode: true
        in: query
        name: showRoles
        required: false
        schema:
          type: boolean
        style: form
      - description: "Set this parameter to true, to include the users, to whom the\
          \ role collections are assigned."
        explode: true
        in: query
        name: showUsers
        required: false
        schema:
          type: boolean
        style: form
      - description: "Set this parameter to true, to include the groups, to which\
          \ the role collections are assigned."
        explode: true
        in: query
        name: showGroups
        required: false
        schema:
          type: boolean
        style: form
      - description: Page Id
        explode: false
        in: path
        name: pageId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: OK - The API returned a page of role collection information.
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: "Not Found - Possible reasons, no role collections could be\
            \ found that match your request."
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: Bad Request - The request was poorly formed.
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns a page of role collections.
      tags:
      - rolecollections
  /sap/rest/authorization/v2/rolecollections/pages/:
    get:
      description: Returns the specified page of role collection search result. The
        role collections are the result of a previous paged GET request for role collections
        of the current subaccount.
      operationId: getRoleCollectionsByPaging_2
      parameters:
      - description: "Set this parameter to true, to include the roles, that are associated\
          \ with the role collections."
        explode: true
        in: query
        name: showRoles
        required: false
        schema:
          type: boolean
        style: form
      - description: "Set this parameter to true, to include the users, to whom the\
          \ role collections are assigned."
        explode: true
        in: query
        name: showUsers
        required: false
        schema:
          type: boolean
        style: form
      - description: "Set this parameter to true, to include the groups, to which\
          \ the role collections are assigned."
        explode: true
        in: query
        name: showGroups
        required: false
        schema:
          type: boolean
        style: form
      - description: Page Id
        explode: false
        in: path
        name: pageId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: OK - The API returned a page of role collection information.
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: "Not Found - Possible reasons, no role collections could be\
            \ found that match your request."
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: Bad Request - The request was poorly formed.
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: Unauthorized - Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns a page of role collections.
      tags:
      - rolecollections
  /sap/rest/authorization/v2/ownapp:
    get:
      description: Returns information about the service instance which is associated
        with the client credentials you submitted with this REST call.
      operationId: getOwnApp
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: The API returned the service instance associated with your
            client credentials.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: Access denied. Your authentication credentials have been refused.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: "Not found. Possible reasons: No service instance was found\
            \ matching your client credentials."
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns information about the service instance used to execute this
        API access.
      tags:
      - application
  /sap/rest/authorization/v2/ownapp/usage:
    get:
      description: Returns the number of subscribers for the service instance which
        is associated with the client credentials you submitted with this REST call.
      operationId: getAppByToken
      parameters:
      - description: Tenant ID
        explode: true
        in: query
        name: tenant
        required: false
        schema:
          type: string
        style: form
      - description: Zone ID
        explode: true
        in: query
        name: zoneid
        required: false
        schema:
          type: string
        style: form
      - description: Include subscriptions
        explode: true
        in: query
        name: listSubscriptions
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Include clone subscriptions
        explode: true
        in: query
        name: listCloneSubscriptions
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: "Not Found. Possible reasons, apps could be found that match\
            \ your request."
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: The API returned the usage information for the service instance.
        "403":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "400":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Invalid tenant
        "401":
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
          description: Access denied. Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns usage information for the service instance which is used to
        execute API access.
      tags:
      - application
  /sap/rest/authorization/v2/identity-providers/{origin}/rolecollections/{roleCollectionName}:
    get:
      description: Read all attributes for current IdP and application role collection.
      operationId: getIdpAttributeValuesFromRoleCollection
      parameters:
      - description: IDP-OriginKey
        explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the role collection
        explode: false
        in: path
        name: roleCollectionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollectionAttribute'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollectionAttribute'
                type: array
          description: Not Found
        "403":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollectionAttribute'
                type: array
          description: No Authorization
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Get attributes and role collections from IdP
      tags:
      - idp-role-collection
  /sap/rest/authorization/v2/identity-providers/{origin}/attributes/{attributeName}/{attributeValue}:
    get:
      description: List of application role collections which are assigned to the
        current idP and the current attribute/value
      operationId: getRoleCollectionByAttributeValue
      parameters:
      - description: IDP-OriginKey
        explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      - description: attribute name
        explode: false
        in: path
        name: attributeName
        required: true
        schema:
          type: string
        style: simple
      - description: IDP attribute value
        explode: false
        in: path
        name: attributeValue
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: Bad Request
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollection'
                type: array
          description: No Authorization
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Read role collections from current attribute value and IdP
      tags:
      - idp-role-collection
  /sap/rest/authorization/v2/identity-providers/{origin}/attributes/{attributeName}/rolecollections/{roleCollectionName}:
    get:
      description: ist of Idp attribute value of a role collection for current attribute
        name
      operationId: getIdpAttributeValuesFromRoleCollectionByAttribute
      parameters:
      - description: IDP-OriginKey
        explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the attribute
        explode: false
        in: path
        name: attributeName
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the role collection
        explode: false
        in: path
        name: roleCollectionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollectionAttribute'
                type: array
          description: OK
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollectionAttribute'
                type: array
          description: Not found
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollectionAttribute'
                type: array
          description: No authorization
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollectionAttribute'
                type: array
          description: Bad Request
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Read all attributes for current IdP and application role collection
      tags:
      - idp-role-collection
  /sap/rest/authorization/v2/identity-providers/{origin}/attributes/rolecollections:
    get:
      description: Read all attributes for current IdP and application role collection.
      operationId: getIdpAttributeValues
      parameters:
      - description: IDP-OriginKey
        explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollectionAttribute'
                type: array
          description: OK
        "404":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollectionAttribute'
                type: array
          description: Not Found
        "400":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollectionAttribute'
                type: array
          description: Bad Request
        "403":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/RoleCollectionAttribute'
                type: array
          description: No Authorization
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Get attributes and role collection of IdP
      tags:
      - idp-role-collection
  /sap/rest/authorization/v2/apps:
    get:
      description: Returns all service instances of the current subaccount which are
        registered at the Authorization and Trust Management service as OAuth 2.0
        clients. The system provides information about the XSUAA application and its
        OAuth client.
      operationId: getApps
      parameters:
      - description: "OAuth client filter: If set to false only apps are returned\
          \ that are not associated with an OAuth client. The filter is of type boolean."
        explode: true
        in: query
        name: onlyWithClientId
        required: false
        schema:
          type: boolean
        style: form
      - description: "CF organizations filter: Only apps that reside in the specified\
          \ Cloud Foundry org are returned. The CF org is specified by its GUID."
        explode: true
        in: query
        name: onlyForOrgId
        required: false
        schema:
          type: string
        style: form
      - description: "Subaccount filter: Only apps that reside in the specified subaccount\
          \ are returned. The subaccount is specified by its id."
        explode: true
        in: query
        name: onlyForSubaccountId
        required: false
        schema:
          type: string
        style: form
      - description: "XSAppName filter: Only apps with the specified name are returned.\
          \ The name is the xsappname of the application."
        explode: true
        in: query
        name: onlyForXsappname
        required: false
        schema:
          type: string
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/App'
                type: array
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/App'
                type: array
          description: Your request was poorly formed.
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/App'
                type: array
          description: The API returned the list of registered service instances.
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/App'
                type: array
          description: "Not found. Possible reasons: No service instances could be\
            \ found that match your request."
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns registered service instances of the current subaccount.
      tags:
      - application
  /sap/rest/authorization/v2/apps/{id}:
    get:
      description: Returns information about an XSUAA application instance specified
        by the app ID or service instance ID. The XSUAA application instance paired
        with an OAuth client defines a service instance of the Authorization and Trust
        Management service.
      operationId: getAppById
      parameters:
      - description: "The ID of the application or service instance. To use service\
          \ instance ID, set the parameter to true."
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "If the parameter is set to true, the ID set in the path is interpreted\
          \ as the service instance ID and not the XSUAA application instance ID."
        explode: true
        in: query
        name: isServiceInstanceId
        required: false
        schema:
          type: boolean
        style: form
      - description: "The ID of the application or service instance. To use service\
          \ instance ID, set the isServiceInstanceId parameter to true."
        explode: true
        in: query
        name: hideDetails
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: Your request was poorly formed.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: "Not found. Possible reasons: No XSUAA application instance\
            \ or service instance could be found."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: Access denied. Your authentication credentials have been refused.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: The API returned the information about the XSUAA application
            instance.
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns information about an XSUAA application instance.
      tags:
      - application
  /sap/rest/authorization/v2/apps/{appId}/scopes:
    get:
      description: Returns all scopes of an application protected by a service instance
        of the Authorization and Trust Management service.
      operationId: listScopes
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Scope'
                type: array
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Scope'
                type: array
          description: "Not found. Possible reasons: No applications could be found\
            \ that match your request."
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Scope'
                type: array
          description: Access denied. Your authentication credentials have been refused.
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Scope'
                type: array
          description: The API returned the scopes of the specified application.
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns the scopes of an application.
      tags:
      - application
  /sap/rest/authorization/v2/apps/{appId}/scopes/{scopeName}:
    get:
      description: Returns information about a specific scope of a specific application.
      operationId: getScope
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the scope
        explode: false
        in: path
        name: scopeName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
          description: The API returned the scope of the specified application.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
          description: Access denied. Your authentication credentials have been refused.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scope'
          description: "Not found. Possible reasons: No service instance or scope\
            \ could be found that match your request."
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns the scope of an application.
      tags:
      - application
  /sap/rest/authorization/v2/apps/{appId}/roletemplates:
    get:
      description: Returns information about all role templates for an application
        that is specified by the application ID.
      operationId: getRoleTemplateByAppName
      parameters:
      - description: ID of application
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleTemplate'
                type: array
          description: The API returned the list of role templates.
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleTemplate'
                type: array
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleTemplate'
                type: array
          description: Your request was poorly formed.
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleTemplate'
                type: array
          description: Access denied. Your authentication credentials have been refused.
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleTemplate'
                type: array
          description: "Not found. Possible reasons: No service instance could be\
            \ found that matches your request."
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns role templates for an application.
      tags:
      - roletemplates
  /sap/rest/authorization/v2/apps/{appId}/roletemplates/{templateName}:
    get:
      description: "Returns information about a role template of an application, which\
        \ is specified by the application ID and the role template name."
      operationId: getRoleTemplateByName
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the template
        explode: false
        in: path
        name: templateName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleTemplate'
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleTemplate'
          description: "Not found. Possible reasons: No application or role template\
            \ could be found that matches your request."
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleTemplate'
          description: The API returned the role template.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleTemplate'
          description: Your request was poorly formed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleTemplate'
          description: Access denied. Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns a role template of an application.
      tags:
      - roletemplates
  /sap/rest/authorization/v2/apps/{appId}/roles:
    get:
      description: Returns all roles of an application specified by the application
        ID.
      operationId: getRolesByAppId
      parameters:
      - description: ID of the application
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: "Not found. Possible reasons: No application could be found\
            \ that matches your request."
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: The API returned the list of roles.
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Access denied. Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns the roles of an application
      tags:
      - roles
  /sap/rest/authorization/v2/apps/{appId}/authorizationData:
    get:
      description: Retrieve authorization data for a given appId.
      operationId: getAuthorizationData
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthDataWrapper'
          description: Internal Server Error
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthDataWrapper'
          description: OK
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthDataWrapper'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthDataWrapper'
          description: Not Authenticated
        "403":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthDataWrapper'
          description: No Authorization
      security:
      - xs_auth:
        - xs_authorization.read
      summary: 'Get authorization data '
      tags:
      - ams
  /sap/rest/authorization/v2/apps/{appId}/authorities:
    get:
      description: Returns a list of authorities that have been granted to an application.
        <ul><li>The granting application is identified by the <var>grantedByAppGuid</var>
        or <var>grantedByAppId</var> parameter. If no granting application is specified
        the list will be empty.</li><li>The request has to be authenticated with a
        JWT obtained via the client credentials grant from the granted application.
        The JWT has to include the <var>uaa.resource</var> scope.</li></ul>
      operationId: getGrantedAuthorities
      parameters:
      - description: Application ID
        explode: false
        in: path
        name: appId
        required: true
        schema:
          type: string
        style: simple
      - description: appUid of authority
        explode: true
        in: query
        name: grantedByAppGuid
        required: false
        schema:
          type: string
        style: form
      - description: AppID of authority
        explode: true
        in: query
        name: grantedByAppId
        required: false
        schema:
          type: string
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
                uniqueItems: true
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "404":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
                uniqueItems: true
          description: "Not found. Possible reasons: No application could be found\
            \ that matches your request."
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
                uniqueItems: true
          description: The API returns the list of authorities granted to the specified
            application.
        "401":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
                uniqueItems: true
          description: Access denied. Your authentication credentials have been refused.
      security:
      - uaa.resource:
        - uaa.resource
      summary: Returns a list of authorities granted to an application.
      tags:
      - application
  /sap/rest/authorization/v2/apps/roletemplates:
    get:
      description: "Returns information about all role templates of applications protected\
        \ by the service instance of the Authorization and Trust Management service.\
        \ description: Returns all role templates"
      operationId: getRoleTemplates
      parameters:
      - description: "If the parameter is set, the API also returns information about\
          \ the roles associated with the role templates."
        explode: true
        in: query
        name: showRoles
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "403":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleTemplate'
                type: array
          description: Access denied. You do not have the authorizations required
            to access the resource.
        "404":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleTemplate'
                type: array
          description: "Not found. Possible reasons: No role templates were found."
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleTemplate'
                type: array
          description: The API returned the role template information.
        "401":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleTemplate'
                type: array
          description: Access denied. Your authentication credentials have been refused.
      security:
      - xs_auth:
        - xs_authorization.read
      summary: Returns all role templates.
      tags:
      - roletemplates
  /sap/rest/user/origin/{origin}/name/{userName}:
    delete:
      description: Deletes an existing user with the specified username and origin
      operationId: deleteUserByName
      parameters:
      - explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK - The API deletes the user.
        "404":
          content:
            '*/*':
              schema:
                type: object
          description: Not found - The user cannot be found.
        "403":
          content:
            '*/*':
              schema:
                type: object
          description: Forbidden - You do not have the authorizations required to
            access the resource.
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: Bad Request - The request was poorly formed. The specified
            origin is invalid.
        "401":
          content:
            '*/*':
              schema:
                type: object
          description: Unauthorized - Your authentication credentials have been refused.
      summary: Delete a user by username and origin
      tags:
      - usercontroller
  /sap/rest/platform-identity-providers-global/{originKey}/globalaccountids/{globalAccountId}:
    delete:
      description: Deletes a globalAccountId to a custom platform IdP.
      operationId: deletePlatformIdentityProviderGlobalAccountId
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: globalAccountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Internal Server Error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Authorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XSPlatformIdentityProvider'
          description: Not Authenticated
      security:
      - xs_idp_global:
        - xs_idp_global.write
      summary: Deletes a globalAccountId.
      tags:
      - platform-identity-providers-global
  /sap/rest/identity-providers/originKey/{originKey}:
    delete:
      operationId: deleteIdentityProviderUsingOriginKey
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdentityProviderAbstractIdentityProviderDefinition'
          description: OK
      tags:
      - identity-providers
  ? /sap/rest/authorization/v2/identity-providers/{origin}/attributes/{attributeName}/{operator}/{attributeValue}/rolecollections/{roleCollectionName}
  : delete:
      description: Delete an attribute value for the current attribute within current
        IdP and application role collection
      operationId: deleteIdpAttributeToRoleCollection
      parameters:
      - description: IDP-OriginKey
        explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Idp attribute
        explode: false
        in: path
        name: attributeName
        required: true
        schema:
          type: string
        style: simple
      - description: Operator
        explode: false
        in: path
        name: operator
        required: true
        schema:
          type: string
        style: simple
      - description: Value of the Idp attribute
        explode: false
        in: path
        name: attributeValue
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the role collection
        explode: false
        in: path
        name: roleCollectionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: object
          description: OK
        "403":
          content:
            '*/*':
              schema:
                type: object
          description: No Autorization
        "400":
          content:
            '*/*':
              schema:
                type: object
          description: Bad Request
      security:
      - xs_auth:
        - xs_authorization.read
      summary: delete attribute with value from a role collection
      tags:
      - idp-role-collection
  /sap/rest/identity-providers/btpcli/originKey/{originKey}:
    delete:
      deprecated: true
      operationId: retrieveIdentityProviderByOriginKeyDeprecated_3
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BtpCliXsIdentityProvider'
          description: OK
      tags:
      - identity-providers
    get:
      deprecated: true
      operationId: retrieveIdentityProviderByOriginKeyDeprecated_5
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BtpCliXsIdentityProvider'
          description: OK
      tags:
      - identity-providers
    head:
      deprecated: true
      operationId: retrieveIdentityProviderByOriginKeyDeprecated
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BtpCliXsIdentityProvider'
          description: OK
      tags:
      - identity-providers
    options:
      deprecated: true
      operationId: retrieveIdentityProviderByOriginKeyDeprecated_2
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BtpCliXsIdentityProvider'
          description: OK
      tags:
      - identity-providers
    patch:
      deprecated: true
      operationId: retrieveIdentityProviderByOriginKeyDeprecated_6
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BtpCliXsIdentityProvider'
          description: OK
      tags:
      - identity-providers
    post:
      deprecated: true
      operationId: retrieveIdentityProviderByOriginKeyDeprecated_4
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BtpCliXsIdentityProvider'
          description: OK
      tags:
      - identity-providers
    put:
      deprecated: true
      operationId: retrieveIdentityProviderByOriginKeyDeprecated_1
      parameters:
      - explode: false
        in: path
        name: originKey
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: rawConfig
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BtpCliXsIdentityProvider'
          description: OK
      tags:
      - identity-providers
components:
  schemas:
    XSUser:
      example:
        passwordChangeRequired: true
        salt: salt
        created: 2000-01-23T04:56:07.000+00:00
        givenName: givenName
        origin: origin
        verified: true
        externalId: externalId
        active: true
        version: 1
        password: password
        phoneNumber: phoneNumber
        legacyVerificationBehavior: true
        lastLogonTime: 0
        familyName: familyName
        previousLogonTime: 6
        modified: 2000-01-23T04:56:07.000+00:00
        zoneId: zoneId
        roleCollections:
        - roleCollections
        - roleCollections
        id: id
        passwordLastModified: 2000-01-23T04:56:07.000+00:00
        email: email
        username: username
      properties:
        id:
          type: string
        username:
          type: string
        password:
          type: string
        email:
          type: string
        givenName:
          type: string
        familyName:
          type: string
        created:
          format: date-time
          type: string
        modified:
          format: date-time
          type: string
        origin:
          type: string
        externalId:
          type: string
        salt:
          type: string
        passwordLastModified:
          format: date-time
          type: string
        phoneNumber:
          type: string
        lastLogonTime:
          format: int64
          type: integer
        previousLogonTime:
          format: int64
          type: integer
        zoneId:
          type: string
        verified:
          type: boolean
        legacyVerificationBehavior:
          type: boolean
        passwordChangeRequired:
          type: boolean
        version:
          format: int32
          type: integer
        active:
          type: boolean
        roleCollections:
          items:
            type: string
          type: array
      type: object
    XSPlatformIdentityProvider:
      example:
        createdByUsername: createdByUsername
        relyingPartySecret: relyingPartySecret
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        originKey: originKey
        aliasZid: aliasZid
        relyingPartyId: relyingPartyId
        modifiedByOriginKey: modifiedByOriginKey
        distribution:
          key: "{}"
        originXsuaa: originXsuaa
        iasTenantUrlWithoutProtocol: iasTenantUrlWithoutProtocol
        iasTenantUrl: iasTenantUrl
        result: 0
        createdAt: 2000-01-23T04:56:07.000+00:00
        iasAppId: iasAppId
        iasWellKnownMetadata:
          key: "{}"
        modifiedByUsername: modifiedByUsername
        active: true
        createdByOriginKey: createdByOriginKey
        version: 6
        iasAdminUrl: iasAdminUrl
        neoAuthnWithOidc: true
        deleted: true
        domain: domain
        name: name
        registration:
          key: "{}"
      properties:
        originKey:
          type: string
        iasTenantUrl:
          type: string
        iasAppId:
          type: string
        iasAdminUrl:
          type: string
        active:
          type: boolean
        createdByUsername:
          type: string
        createdByOriginKey:
          type: string
        createdAt:
          format: date-time
          type: string
        modifiedByUsername:
          type: string
        modifiedByOriginKey:
          type: string
        modifiedAt:
          format: date-time
          type: string
        deleted:
          type: boolean
        distribution:
          additionalProperties:
            type: object
          type: object
        registration:
          additionalProperties:
            type: object
          type: object
        result:
          format: int32
          type: integer
        relyingPartyId:
          type: string
        relyingPartySecret:
          type: string
        originXsuaa:
          type: string
        version:
          format: int32
          type: integer
        iasWellKnownMetadata:
          additionalProperties:
            type: object
          type: object
        neoAuthnWithOidc:
          type: boolean
        domain:
          type: string
        name:
          type: string
        aliasZid:
          type: string
        iasTenantUrlWithoutProtocol:
          type: string
      type: object
    AbstractIdentityProviderDefinition:
      example:
        additionalConfiguration:
          key: "{}"
        emailDomain:
        - emailDomain
        - emailDomain
        providerDescription: providerDescription
      properties:
        emailDomain:
          items:
            type: string
          type: array
        additionalConfiguration:
          additionalProperties:
            type: object
          type: object
        providerDescription:
          type: string
      type: object
    XSIdentityProvider:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        originKey: originKey
        name: name
        active: true
        id: id
        type: type
        config:
          additionalConfiguration:
            key: "{}"
          emailDomain:
          - emailDomain
          - emailDomain
          providerDescription: providerDescription
        version: 0
        identityZoneId: identityZoneId
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        originKey:
          type: string
        name:
          type: string
        type:
          type: string
        config:
          $ref: '#/components/schemas/AbstractIdentityProviderDefinition'
        version:
          format: int32
          type: integer
        created:
          format: date-time
          type: string
        active:
          type: boolean
        identityZoneId:
          type: string
        last_modified:
          format: date-time
          type: string
      required:
      - name
      - originKey
      - type
      type: object
    IdentityProviderAbstractIdentityProviderDefinition:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        originKey: originKey
        name: name
        active: true
        id: id
        type: type
        config:
          additionalConfiguration:
            key: "{}"
          emailDomain:
          - emailDomain
          - emailDomain
          providerDescription: providerDescription
        version: 0
        identityZoneId: identityZoneId
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        originKey:
          type: string
        name:
          type: string
        type:
          type: string
        config:
          $ref: '#/components/schemas/AbstractIdentityProviderDefinition'
        version:
          format: int32
          type: integer
        created:
          format: date-time
          type: string
        active:
          type: boolean
        identityZoneId:
          type: string
        last_modified:
          format: date-time
          type: string
      required:
      - name
      - originKey
      - type
      type: object
    RoleCollectionDescription:
      description: Json of the role collection containing the description
      example:
        description: description
      properties:
        description:
          type: string
      type: object
    RoleReference:
      example:
        name: name
        description: description
        roleTemplateAppId: roleTemplateAppId
        roleTemplateName: roleTemplateName
      properties:
        roleTemplateAppId:
          type: string
        roleTemplateName:
          type: string
        name:
          type: string
        description:
          type: string
      type: object
    RoleAttribute:
      example:
        attributeValues:
        - attributeValues
        - attributeValues
        description: description
        attributeName: attributeName
        attributeValueOrigin: attributeValueOrigin
        valueRequired: true
      properties:
        attributeName:
          type: string
        attributeValueOrigin:
          type: string
        attributeValues:
          items:
            type: string
          type: array
        valueRequired:
          type: boolean
        description:
          type: string
      required:
      - attributeName
      - attributeValueOrigin
      - attributeValues
      type: object
    RoleUpdate:
      description: JSON containing the role
      example:
        attributeList:
        - attributeValues:
          - attributeValues
          - attributeValues
          description: description
          attributeName: attributeName
          attributeValueOrigin: attributeValueOrigin
          valueRequired: true
        - attributeValues:
          - attributeValues
          - attributeValues
          description: description
          attributeName: attributeName
          attributeValueOrigin: attributeValueOrigin
          valueRequired: true
        description: description
      properties:
        description:
          type: string
        attributeList:
          items:
            $ref: '#/components/schemas/RoleAttribute'
          type: array
      type: object
    Role:
      description: JSON containing the role
      example:
        isReadOnly: true
        appName: appName
        attributeList:
        - attributeValues:
          - attributeValues
          - attributeValues
          description: description
          attributeName: attributeName
          attributeValueOrigin: attributeValueOrigin
          valueRequired: true
        - attributeValues:
          - attributeValues
          - attributeValues
          description: description
          attributeName: attributeName
          attributeValueOrigin: attributeValueOrigin
          valueRequired: true
        name: name
        roleCollectionReferences:
        - name: name
          description: description
        - name: name
          description: description
        appDescription: appDescription
        description: description
        scopes:
        - granted-apps:
          - granted-apps
          - granted-apps
          grant-as-authority-to-apps:
          - grant-as-authority-to-apps
          - grant-as-authority-to-apps
          name: name
          custom-granted-apps:
          - custom-granted-apps
          - custom-granted-apps
          custom-grant-as-authority-to-apps:
          - custom-grant-as-authority-to-apps
          - custom-grant-as-authority-to-apps
          description: description
        - granted-apps:
          - granted-apps
          - granted-apps
          grant-as-authority-to-apps:
          - grant-as-authority-to-apps
          - grant-as-authority-to-apps
          name: name
          custom-granted-apps:
          - custom-granted-apps
          - custom-granted-apps
          custom-grant-as-authority-to-apps:
          - custom-grant-as-authority-to-apps
          - custom-grant-as-authority-to-apps
          description: description
        roleTemplateName: roleTemplateName
        roleTemplateAppId: roleTemplateAppId
      properties:
        roleTemplateName:
          type: string
        roleTemplateAppId:
          type: string
        name:
          type: string
        attributeList:
          items:
            $ref: '#/components/schemas/RoleAttribute'
          type: array
        description:
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/Scope'
          type: array
        roleCollectionReferences:
          items:
            $ref: '#/components/schemas/RoleCollectionReference'
          type: array
        isReadOnly:
          type: boolean
        appName:
          type: string
        appDescription:
          type: string
      required:
      - attributeList
      - description
      - name
      - roleTemplateAppId
      - roleTemplateName
      - scopes
      type: object
    RoleCollectionReference:
      example:
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
      required:
      - name
      type: object
    Scope:
      example:
        granted-apps:
        - granted-apps
        - granted-apps
        grant-as-authority-to-apps:
        - grant-as-authority-to-apps
        - grant-as-authority-to-apps
        name: name
        custom-granted-apps:
        - custom-granted-apps
        - custom-granted-apps
        custom-grant-as-authority-to-apps:
        - custom-grant-as-authority-to-apps
        - custom-grant-as-authority-to-apps
        description: description
      properties:
        description:
          type: string
        name:
          type: string
        custom-granted-apps:
          items:
            type: string
          type: array
        granted-apps:
          items:
            type: string
          type: array
        grant-as-authority-to-apps:
          items:
            type: string
          type: array
        custom-grant-as-authority-to-apps:
          items:
            type: string
          type: array
      required:
      - custom-grant-as-authority-to-apps
      - custom-granted-apps
      - name
      type: object
    AddPlatformIdentityProviderTrust:
      example:
        fromOriginKey: fromOriginKey
        domain: domain
        name: name
        description: description
        aliasZid: aliasZid
        fromIasTenantUrl: fromIasTenantUrl
      properties:
        fromOriginKey:
          type: string
        fromIasTenantUrl:
          type: string
        name:
          type: string
        description:
          type: string
        domain:
          type: string
        aliasZid:
          type: string
      type: object
    RoleCollectionListDto:
      example:
        roleCollectionsBySamlAssignment:
        - roleCollectionsBySamlAssignment
        - roleCollectionsBySamlAssignment
        roleCollections:
        - roleCollections
        - roleCollections
      properties:
        roleCollections:
          items:
            type: string
          type: array
          uniqueItems: true
        roleCollectionsBySamlAssignment:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    RoleCollection:
      description: Json of the role collections
      example:
        roleReferences:
        - name: name
          description: description
          roleTemplateAppId: roleTemplateAppId
          roleTemplateName: roleTemplateName
        - name: name
          description: description
          roleTemplateAppId: roleTemplateAppId
          roleTemplateName: roleTemplateName
        isReadOnly: true
        userReferences:
        - givenName: givenName
          familyName: familyName
          origin: origin
          zoneId: zoneId
          id: id
          email: email
          username: username
        - givenName: givenName
          familyName: familyName
          origin: origin
          zoneId: zoneId
          id: id
          email: email
          username: username
        name: name
        description: description
        groupReferences:
        - attributeValue: attributeValue
          comparisonOperator: comparisonOperator
          idpId: idpId
          roleCollectionName: roleCollectionName
          attributeName: attributeName
          roleCollectionIdentityZone: roleCollectionIdentityZone
          samlAttributeValue: samlAttributeValue
          samlAttrName: samlAttrName
          samlEntityId: samlEntityId
          idpDisplayName: idpDisplayName
        - attributeValue: attributeValue
          comparisonOperator: comparisonOperator
          idpId: idpId
          roleCollectionName: roleCollectionName
          attributeName: attributeName
          roleCollectionIdentityZone: roleCollectionIdentityZone
          samlAttributeValue: samlAttributeValue
          samlAttrName: samlAttrName
          samlEntityId: samlEntityId
          idpDisplayName: idpDisplayName
        samlAttributeAssignment:
        - attributeValue: attributeValue
          comparisonOperator: comparisonOperator
          idpId: idpId
          roleCollectionName: roleCollectionName
          attributeName: attributeName
          roleCollectionIdentityZone: roleCollectionIdentityZone
          samlAttributeValue: samlAttributeValue
          samlAttrName: samlAttrName
          samlEntityId: samlEntityId
          idpDisplayName: idpDisplayName
        - attributeValue: attributeValue
          comparisonOperator: comparisonOperator
          idpId: idpId
          roleCollectionName: roleCollectionName
          attributeName: attributeName
          roleCollectionIdentityZone: roleCollectionIdentityZone
          samlAttributeValue: samlAttributeValue
          samlAttrName: samlAttrName
          samlEntityId: samlEntityId
          idpDisplayName: idpDisplayName
      properties:
        name:
          type: string
        description:
          type: string
        roleReferences:
          items:
            $ref: '#/components/schemas/RoleReference'
          type: array
        userReferences:
          items:
            $ref: '#/components/schemas/UserReference'
          type: array
        groupReferences:
          deprecated: true
          items:
            $ref: '#/components/schemas/RoleCollectionAttribute'
          type: array
        samlAttributeAssignment:
          items:
            $ref: '#/components/schemas/RoleCollectionAttribute'
          type: array
        isReadOnly:
          type: boolean
      required:
      - name
      type: object
    RoleCollectionAttribute:
      example:
        attributeValue: attributeValue
        comparisonOperator: comparisonOperator
        idpId: idpId
        roleCollectionName: roleCollectionName
        attributeName: attributeName
        roleCollectionIdentityZone: roleCollectionIdentityZone
        samlAttributeValue: samlAttributeValue
        samlAttrName: samlAttrName
        samlEntityId: samlEntityId
        idpDisplayName: idpDisplayName
      properties:
        roleCollectionName:
          type: string
        roleCollectionIdentityZone:
          type: string
        samlAttrName:
          type: string
        attributeName:
          type: string
        samlAttributeValue:
          type: string
        attributeValue:
          type: string
        comparisonOperator:
          type: string
        samlEntityId:
          type: string
        idpId:
          type: string
        idpDisplayName:
          type: string
      type: object
    UserReference:
      example:
        givenName: givenName
        familyName: familyName
        origin: origin
        zoneId: zoneId
        id: id
        email: email
        username: username
      properties:
        id:
          type: string
        username:
          type: string
        zoneId:
          type: string
        email:
          type: string
        givenName:
          type: string
        familyName:
          type: string
        origin:
          type: string
      type: object
    RoleCollectionBasicDto:
      example:
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    RoleCollectionsBulkDto:
      description: The role collection names to be created
      example:
        roleCollections:
        - name: name
          description: description
        - name: name
          description: description
      properties:
        roleCollections:
          items:
            $ref: '#/components/schemas/RoleCollectionBasicDto'
          type: array
          uniqueItems: true
      type: object
    IdentityProviderMapping:
      description: Attribute added to role collection
      example:
        attributeValue: attributeValue
        roleCollectionName: roleCollectionName
        attributeName: attributeName
        operator: operator
      properties:
        roleCollectionName:
          type: string
        attributeName:
          type: string
        attributeValue:
          type: string
        operator:
          type: string
      type: object
    Approval:
      example:
        clientId: clientId
        lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
        scope: scope
        userId: userId
        expiresAt: 2000-01-23T04:56:07.000+00:00
        status: APPROVED
      properties:
        userId:
          type: string
        clientId:
          type: string
        scope:
          type: string
        status:
          enum:
          - APPROVED
          - DENIED
          type: string
        lastUpdatedAt:
          format: date-time
          type: string
        expiresAt:
          format: date-time
          type: string
      type: object
    Email:
      example:
        type: type
        value: value
        primary: true
      properties:
        value:
          type: string
        type:
          type: string
        primary:
          type: boolean
      type: object
    Group:
      example:
        display: display
        type: DIRECT
        value: value
      properties:
        value:
          type: string
        display:
          type: string
        type:
          enum:
          - DIRECT
          - INDIRECT
          type: string
      type: object
    Name:
      example:
        honorificSuffix: honorificSuffix
        formatted: formatted
        familyName: familyName
        givenName: givenName
        honorificPrefix: honorificPrefix
        middleName: middleName
      properties:
        formatted:
          type: string
        familyName:
          type: string
        givenName:
          type: string
        middleName:
          type: string
          writeOnly: true
        honorificPrefix:
          type: string
          writeOnly: true
        honorificSuffix:
          type: string
          writeOnly: true
      type: object
    PhoneNumber:
      example:
        type: type
        value: value
      properties:
        value:
          type: string
        type:
          type: string
      type: object
    ScimMeta:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        attributes:
        - attributes
        - attributes
        lastModified: 2000-01-23T04:56:07.000+00:00
        version: 0
      properties:
        version:
          format: int32
          type: integer
        created:
          format: date-time
          type: string
        lastModified:
          format: date-time
          type: string
        attributes:
          items:
            type: string
          type: array
      type: object
    ScimUser:
      example:
        profileUrl: profileUrl
        preferredLanguage: preferredLanguage
        displayName: displayName
        timezone: timezone
        origin: origin
        title: title
        locale: locale
        phoneNumbers:
        - type: type
          value: value
        - type: type
          value: value
        emails:
        - type: type
          value: value
          primary: true
        - type: type
          value: value
          primary: true
        password: password
        lastLogonTime: 1
        approvals:
        - clientId: clientId
          lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
          scope: scope
          userId: userId
          expiresAt: 2000-01-23T04:56:07.000+00:00
          status: APPROVED
        - clientId: clientId
          lastUpdatedAt: 2000-01-23T04:56:07.000+00:00
          scope: scope
          userId: userId
          expiresAt: 2000-01-23T04:56:07.000+00:00
          status: APPROVED
        previousLogonTime: 6
        zoneId: zoneId
        id: id
        passwordLastModified: 2000-01-23T04:56:07.000+00:00
        salt: salt
        nickName: nickName
        verified: true
        externalId: externalId
        groups:
        - display: display
          type: DIRECT
          value: value
        - display: display
          type: DIRECT
          value: value
        active: true
        userName: userName
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          attributes:
          - attributes
          - attributes
          lastModified: 2000-01-23T04:56:07.000+00:00
          version: 0
        schemas:
        - schemas
        - schemas
        name:
          honorificSuffix: honorificSuffix
          formatted: formatted
          familyName: familyName
          givenName: givenName
          honorificPrefix: honorificPrefix
          middleName: middleName
        userType: userType
      properties:
        id:
          type: string
        externalId:
          type: string
        meta:
          $ref: '#/components/schemas/ScimMeta'
        userName:
          type: string
        name:
          $ref: '#/components/schemas/Name'
        emails:
          items:
            $ref: '#/components/schemas/Email'
          type: array
        groups:
          items:
            $ref: '#/components/schemas/Group'
          type: array
          uniqueItems: true
        approvals:
          items:
            $ref: '#/components/schemas/Approval'
          type: array
          uniqueItems: true
        phoneNumbers:
          items:
            $ref: '#/components/schemas/PhoneNumber'
          type: array
        displayName:
          type: string
        nickName:
          type: string
          writeOnly: true
        profileUrl:
          type: string
          writeOnly: true
        title:
          type: string
        userType:
          type: string
        preferredLanguage:
          type: string
          writeOnly: true
        locale:
          type: string
        timezone:
          type: string
          writeOnly: true
        active:
          type: boolean
        verified:
          type: boolean
        origin:
          type: string
        zoneId:
          type: string
        salt:
          type: string
        passwordLastModified:
          format: date-time
          type: string
        previousLogonTime:
          format: int64
          type: integer
        lastLogonTime:
          format: int64
          type: integer
        password:
          type: string
        schemas:
          items:
            type: string
          type: array
      type: object
    ScimCore:
      example:
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          attributes:
          - attributes
          - attributes
          lastModified: 2000-01-23T04:56:07.000+00:00
          version: 0
        schemas:
        - schemas
        - schemas
        externalId: externalId
        id: id
      properties:
        id:
          type: string
        externalId:
          type: string
        meta:
          $ref: '#/components/schemas/ScimMeta'
        schemas:
          items:
            type: string
          type: array
      type: object
    ScimGroup:
      example:
        meta:
          created: 2000-01-23T04:56:07.000+00:00
          attributes:
          - attributes
          - attributes
          lastModified: 2000-01-23T04:56:07.000+00:00
          version: 0
        displayName: displayName
        members:
        - origin: origin
          type: USER
          operation: operation
          value: value
          entity:
            meta:
              created: 2000-01-23T04:56:07.000+00:00
              attributes:
              - attributes
              - attributes
              lastModified: 2000-01-23T04:56:07.000+00:00
              version: 0
            schemas:
            - schemas
            - schemas
            externalId: externalId
            id: id
        - origin: origin
          type: USER
          operation: operation
          value: value
          entity:
            meta:
              created: 2000-01-23T04:56:07.000+00:00
              attributes:
              - attributes
              - attributes
              lastModified: 2000-01-23T04:56:07.000+00:00
              version: 0
            schemas:
            - schemas
            - schemas
            externalId: externalId
            id: id
        schemas:
        - schemas
        - schemas
        externalId: externalId
        zoneId: zoneId
        description: description
        id: id
      properties:
        id:
          type: string
        externalId:
          type: string
        meta:
          $ref: '#/components/schemas/ScimMeta'
        displayName:
          type: string
        zoneId:
          type: string
        description:
          type: string
        members:
          items:
            $ref: '#/components/schemas/ScimGroupMember'
          type: array
        schemas:
          items:
            type: string
          type: array
      type: object
    ScimGroupMember:
      example:
        origin: origin
        type: USER
        operation: operation
        value: value
        entity:
          meta:
            created: 2000-01-23T04:56:07.000+00:00
            attributes:
            - attributes
            - attributes
            lastModified: 2000-01-23T04:56:07.000+00:00
            version: 0
          schemas:
          - schemas
          - schemas
          externalId: externalId
          id: id
      properties:
        origin:
          type: string
        operation:
          type: string
        type:
          enum:
          - USER
          - GROUP
          type: string
        entity:
          $ref: '#/components/schemas/ScimCore'
        value:
          type: string
      type: object
    LinksSettings:
      example:
        homeRedirect: homeRedirect
      properties:
        homeRedirect:
          type: string
      type: object
    SamlConfigSettingsReq:
      example:
        disableInResponseToCheck: true
        changeMode: ADD
        keyId: keyId
        key:
          certificate: certificate
          passphrase: passphrase
          key: key
      properties:
        disableInResponseToCheck:
          type: boolean
        changeMode:
          enum:
          - ADD
          - DELETE
          - UPDATE
          - FORCE_UPDATE
          - FORCE_DELETE
          - UNKNOWN
          type: string
        keyId:
          type: string
        key:
          $ref: '#/components/schemas/SamlKey'
      type: object
    SamlKey:
      example:
        certificate: certificate
        passphrase: passphrase
        key: key
      properties:
        key:
          type: string
        passphrase:
          type: string
        certificate:
          type: string
      type: object
    TenantSettingsReq:
      description: Tenantsettings to be used for update
      example:
        iframeDomains: iframeDomains
        corsXhrOrigins:
        - corsXhrOrigins
        - corsXhrOrigins
        useIdpUserNameInTokens: true
        samlConfigSettings:
          disableInResponseToCheck: true
          changeMode: ADD
          keyId: keyId
          key:
            certificate: certificate
            passphrase: passphrase
            key: key
        defaultIdp: defaultIdp
        links:
          homeRedirect: homeRedirect
        tokenPolicySettings:
          refreshTokenValidity: 6
          changeMode: ADD
          keyId: keyId
          refreshTokenUnique: true
          accessTokenValidity: 0
        customEmailDomains:
        - customEmailDomains
        - customEmailDomains
        partitionedCookies: true
        treatUsersWithSameEmailAsSameUser: true
        corsDefaultOrigins:
        - corsDefaultOrigins
        - corsDefaultOrigins
        cmkEnabled: cmkEnabled
      properties:
        iframeDomains:
          type: string
        tokenPolicySettings:
          $ref: '#/components/schemas/TokenPolicySettingsReq'
        samlConfigSettings:
          $ref: '#/components/schemas/SamlConfigSettingsReq'
        links:
          $ref: '#/components/schemas/LinksSettings'
        defaultIdp:
          type: string
        corsDefaultOrigins:
          items:
            type: string
          type: array
        corsXhrOrigins:
          items:
            type: string
          type: array
        treatUsersWithSameEmailAsSameUser:
          type: boolean
        useIdpUserNameInTokens:
          type: boolean
        customEmailDomains:
          items:
            type: string
          type: array
        cmkEnabled:
          type: string
        partitionedCookies:
          type: boolean
      type: object
    TokenPolicySettingsReq:
      example:
        refreshTokenValidity: 6
        changeMode: ADD
        keyId: keyId
        refreshTokenUnique: true
        accessTokenValidity: 0
      properties:
        accessTokenValidity:
          format: int32
          type: integer
        refreshTokenValidity:
          format: int32
          type: integer
        refreshTokenUnique:
          type: boolean
        changeMode:
          enum:
          - ADD
          - DELETE
          - UPDATE
          - FORCE_UPDATE
          - FORCE_DELETE
          - UNKNOWN
          type: string
        keyId:
          type: string
      type: object
    KeysResp:
      example:
        created: created
        fipsCompliant: true
      properties:
        created:
          type: string
        fipsCompliant:
          type: boolean
      type: object
    SamlConfigSettingsResp:
      example:
        activeKeyId: activeKeyId
        disableInResponseToCheck: true
        keys:
          key:
            certificate: certificate
            passphrase: passphrase
            key: key
        entityID: entityID
      properties:
        disableInResponseToCheck:
          type: boolean
        entityID:
          type: string
        activeKeyId:
          type: string
        keys:
          additionalProperties:
            $ref: '#/components/schemas/SamlKey'
          type: object
      type: object
    TenantCredentialTypeInfo:
      example:
        credentialType: credentialType
        appId: appId
        tenantId: tenantId
        serviceInstanceId: serviceInstanceId
        bindingId: bindingId
      properties:
        tenantId:
          type: string
        serviceInstanceId:
          type: string
        appId:
          type: string
        credentialType:
          type: string
        bindingId:
          type: string
      type: object
    TenantSettingsResp:
      example:
        iframeDomains: iframeDomains
        useIdpUserNameInTokens: true
        defaultIdp: defaultIdp
        tokenPolicySettings:
          activeKeyId: activeKeyId
          keyIds:
          - keyIds
          - keyIds
          refreshTokenValidity: 6
          keys:
            key:
              created: created
              fipsCompliant: true
          refreshTokenUnique: true
          accessTokenValidity: 0
        partitionedCookies: true
        treatUsersWithSameEmailAsSameUser: true
        cmkEnabled: cmkEnabled
        credentialTypeInfos:
        - credentialType: credentialType
          appId: appId
          tenantId: tenantId
          serviceInstanceId: serviceInstanceId
          bindingId: bindingId
        - credentialType: credentialType
          appId: appId
          tenantId: tenantId
          serviceInstanceId: serviceInstanceId
          bindingId: bindingId
        corsXhrOrigins:
        - corsXhrOrigins
        - corsXhrOrigins
        samlConfigSettings:
          activeKeyId: activeKeyId
          disableInResponseToCheck: true
          keys:
            key:
              certificate: certificate
              passphrase: passphrase
              key: key
          entityID: entityID
        links:
          homeRedirect: homeRedirect
        customEmailDomains:
        - customEmailDomains
        - customEmailDomains
        corsDefaultOrigins:
        - corsDefaultOrigins
        - corsDefaultOrigins
      properties:
        iframeDomains:
          type: string
        tokenPolicySettings:
          $ref: '#/components/schemas/TokenPolicySettingsResp'
        samlConfigSettings:
          $ref: '#/components/schemas/SamlConfigSettingsResp'
        links:
          $ref: '#/components/schemas/LinksSettings'
        defaultIdp:
          type: string
        corsDefaultOrigins:
          items:
            type: string
          type: array
        corsXhrOrigins:
          items:
            type: string
          type: array
        credentialTypeInfos:
          items:
            $ref: '#/components/schemas/TenantCredentialTypeInfo'
          type: array
        treatUsersWithSameEmailAsSameUser:
          type: boolean
        useIdpUserNameInTokens:
          type: boolean
        customEmailDomains:
          items:
            type: string
          type: array
        cmkEnabled:
          type: string
        partitionedCookies:
          type: boolean
      type: object
    TokenPolicySettingsResp:
      example:
        activeKeyId: activeKeyId
        keyIds:
        - keyIds
        - keyIds
        refreshTokenValidity: 6
        keys:
          key:
            created: created
            fipsCompliant: true
        refreshTokenUnique: true
        accessTokenValidity: 0
      properties:
        accessTokenValidity:
          format: int32
          type: integer
        refreshTokenValidity:
          format: int32
          type: integer
        refreshTokenUnique:
          type: boolean
        activeKeyId:
          type: string
        keyIds:
          items:
            type: string
          type: array
        keys:
          additionalProperties:
            $ref: '#/components/schemas/KeysResp'
          type: object
      type: object
    XSTenantV2ZoneInformation:
      example:
        iasTenantUri: iasTenantUri
        app_tid: app_tid
        end_session_endpoint: end_session_endpoint
        partitionedCookies: true
        oidc_metadata: oidc_metadata
        authorization_endpoint: authorization_endpoint
        userinfo_endpoint: userinfo_endpoint
        error_details: error_details
        iasTenantBrowserUri: iasTenantBrowserUri
        zoneId: zoneId
        status: ACTIVE
        authentication: authentication
        token_endpoint: token_endpoint
      properties:
        status:
          enum:
          - ACTIVE
          - INACTIVE
          - NOTRUST
          - ERROR
          type: string
        zoneId:
          type: string
        iasTenantUri:
          type: string
        iasTenantBrowserUri:
          type: string
        authentication:
          type: string
        authorization_endpoint:
          type: string
        token_endpoint:
          type: string
        userinfo_endpoint:
          type: string
        end_session_endpoint:
          type: string
        oidc_metadata:
          type: string
        app_tid:
          type: string
        error_details:
          type: string
        partitionedCookies:
          type: boolean
      type: object
    XSIdentityProviderAbstractIdentityProviderDefinition:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        originKey: originKey
        name: name
        active: true
        id: id
        type: type
        config:
          additionalConfiguration:
            key: "{}"
          emailDomain:
          - emailDomain
          - emailDomain
          providerDescription: providerDescription
        version: 0
        identityZoneId: identityZoneId
        last_modified: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        originKey:
          type: string
        name:
          type: string
        type:
          type: string
        config:
          $ref: '#/components/schemas/AbstractIdentityProviderDefinition'
        version:
          format: int32
          type: integer
        created:
          format: date-time
          type: string
        active:
          type: boolean
        identityZoneId:
          type: string
        last_modified:
          format: date-time
          type: string
      required:
      - name
      - originKey
      - type
      type: object
    BtpCliXsIdentityProvider:
      example:
        createShadowUsersDuringLogon: createShadowUsersDuringLogon
        sapBtpCli: sapBtpCli
        originKey: originKey
        typeOfTrust: typeOfTrust
        description: description
        readOnly: true
        availableForUserLogon: availableForUserLogon
        identityProvider: identityProvider
        protocol: protocol
        domain: domain
        name: name
        linkTextForUserLogon: linkTextForUserLogon
        status: status
      properties:
        name:
          type: string
        originKey:
          type: string
        typeOfTrust:
          type: string
        status:
          type: string
        description:
          type: string
        identityProvider:
          type: string
        domain:
          type: string
        linkTextForUserLogon:
          type: string
        availableForUserLogon:
          type: string
        createShadowUsersDuringLogon:
          type: string
        sapBtpCli:
          type: string
        protocol:
          type: string
        readOnly:
          type: boolean
      type: object
    CustomIdpCockpitResponse:
      example:
        moreTrustsAllowed: true
      properties:
        moreTrustsAllowed:
          type: boolean
      type: object
    GrantedAuthority:
      properties:
        authority:
          type: string
      type: object
    Token:
      properties:
        expirationDate:
          deprecated: true
          format: date-time
          type: string
        cloneServiceInstanceId:
          type: string
        givenName:
          type: string
        clientId:
          type: string
        subdomain:
          type: string
        appToken:
          type: string
        subaccountId:
          type: string
        grantType:
          type: string
        scopes:
          items:
            type: string
          type: array
        authorities:
          items:
            $ref: '#/components/schemas/GrantedAuthority'
          type: array
        email:
          type: string
        familyName:
          type: string
        zoneId:
          type: string
        logonName:
          type: string
        expiration:
          format: date-time
          type: string
        origin:
          type: string
        enabled:
          type: boolean
        accountNonExpired:
          type: boolean
        password:
          type: string
        username:
          type: string
        credentialsNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
      type: object
    App:
      example:
        xsappname: xsappname
        role-templates:
        - attribute-references:
          - default-values:
            - default-values
            - default-values
            valueType: valueType
            name: name
            description: description
            valueRequired: true
          - default-values:
            - default-values
            - default-values
            valueType: valueType
            name: name
            description: description
            valueRequired: true
          role-references:
          - isReadOnly: true
            appName: appName
            attributeList:
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            name: name
            roleCollectionReferences:
            - name: name
              description: description
            - name: name
              description: description
            appDescription: appDescription
            description: description
            scopes:
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            roleTemplateName: roleTemplateName
            roleTemplateAppId: roleTemplateAppId
          - isReadOnly: true
            appName: appName
            attributeList:
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            name: name
            roleCollectionReferences:
            - name: name
              description: description
            - name: name
              description: description
            appDescription: appDescription
            description: description
            scopes:
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            roleTemplateName: roleTemplateName
            roleTemplateAppId: roleTemplateAppId
          scope-references:
          - scope-references
          - scope-references
          appName: appName
          appId: appId
          name: name
          default-role-name: default-role-name
          appDescription: appDescription
          description: description
        - attribute-references:
          - default-values:
            - default-values
            - default-values
            valueType: valueType
            name: name
            description: description
            valueRequired: true
          - default-values:
            - default-values
            - default-values
            valueType: valueType
            name: name
            description: description
            valueRequired: true
          role-references:
          - isReadOnly: true
            appName: appName
            attributeList:
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            name: name
            roleCollectionReferences:
            - name: name
              description: description
            - name: name
              description: description
            appDescription: appDescription
            description: description
            scopes:
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            roleTemplateName: roleTemplateName
            roleTemplateAppId: roleTemplateAppId
          - isReadOnly: true
            appName: appName
            attributeList:
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            name: name
            roleCollectionReferences:
            - name: name
              description: description
            - name: name
              description: description
            appDescription: appDescription
            description: description
            scopes:
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            roleTemplateName: roleTemplateName
            roleTemplateAppId: roleTemplateAppId
          scope-references:
          - scope-references
          - scope-references
          appName: appName
          appId: appId
          name: name
          default-role-name: default-role-name
          appDescription: appDescription
          description: description
        tenant-mode: tenant-mode
        oauth2-configuration:
          refresh-token-validity: 6
          system-attributes:
          - system-attributes
          - system-attributes
          autoapprove: true
          grant-types:
          - grant-types
          - grant-types
          allowedproviders:
          - allowedproviders
          - allowedproviders
          redirect-uris:
          - redirect-uris
          - redirect-uris
          credential-types:
          - credential-types
          - credential-types
          token-validity: 0
        planName: planName
        description: description
        userName: userName
        orgId: orgId
        authorities:
        - authorities
        - authorities
        foreign-scope-references:
        - foreign-scope-references
        - foreign-scope-references
        spaceId: spaceId
        appid: appid
        tenantId: tenantId
        planId: planId
        masterAppId: masterAppId
        attributes:
        - valueType: valueType
          name: name
          description: description
          valueRequired: true
        - valueType: valueType
          name: name
          description: description
          valueRequired: true
        scopes:
        - granted-apps:
          - granted-apps
          - granted-apps
          grant-as-authority-to-apps:
          - grant-as-authority-to-apps
          - grant-as-authority-to-apps
          name: name
          custom-granted-apps:
          - custom-granted-apps
          - custom-granted-apps
          custom-grant-as-authority-to-apps:
          - custom-grant-as-authority-to-apps
          - custom-grant-as-authority-to-apps
          description: description
        - granted-apps:
          - granted-apps
          - granted-apps
          grant-as-authority-to-apps:
          - grant-as-authority-to-apps
          - grant-as-authority-to-apps
          name: name
          custom-granted-apps:
          - custom-granted-apps
          - custom-granted-apps
          custom-grant-as-authority-to-apps:
          - custom-grant-as-authority-to-apps
          - custom-grant-as-authority-to-apps
          description: description
        serviceinstanceid: serviceinstanceid
      properties:
        appid:
          type: string
        serviceinstanceid:
          type: string
        planId:
          type: string
        planName:
          type: string
        orgId:
          type: string
        spaceId:
          type: string
        userName:
          type: string
        description:
          type: string
        masterAppId:
          type: string
        tenantId:
          type: string
        xsappname:
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/Scope'
          type: array
        authorities:
          items:
            type: string
          type: array
        foreign-scope-references:
          items:
            type: string
          type: array
        attributes:
          items:
            $ref: '#/components/schemas/AppAttribute'
          type: array
        role-templates:
          items:
            $ref: '#/components/schemas/RoleTemplate'
          type: array
        oauth2-configuration:
          $ref: '#/components/schemas/OAuth2Configuration'
        tenant-mode:
          type: string
      type: object
    AppAttribute:
      example:
        valueType: valueType
        name: name
        description: description
        valueRequired: true
      properties:
        name:
          type: string
        valueType:
          type: string
        description:
          type: string
        valueRequired:
          type: boolean
      type: object
    AttributeReference:
      example:
        default-values:
        - default-values
        - default-values
        valueType: valueType
        name: name
        description: description
        valueRequired: true
      properties:
        name:
          type: string
        valueRequired:
          type: boolean
        default-values:
          items:
            type: string
          type: array
        valueType:
          type: string
        description:
          type: string
      type: object
    OAuth2Configuration:
      example:
        refresh-token-validity: 6
        system-attributes:
        - system-attributes
        - system-attributes
        autoapprove: true
        grant-types:
        - grant-types
        - grant-types
        allowedproviders:
        - allowedproviders
        - allowedproviders
        redirect-uris:
        - redirect-uris
        - redirect-uris
        credential-types:
        - credential-types
        - credential-types
        token-validity: 0
      properties:
        token-validity:
          format: int32
          type: integer
        refresh-token-validity:
          format: int32
          type: integer
        autoapprove:
          type: boolean
        grant-types:
          items:
            type: string
          type: array
          uniqueItems: true
        system-attributes:
          items:
            type: string
          type: array
        allowedproviders:
          items:
            type: string
          type: array
        redirect-uris:
          items:
            type: string
          type: array
          uniqueItems: true
        credential-types:
          items:
            type: string
          type: array
      type: object
    RoleTemplate:
      example:
        attribute-references:
        - default-values:
          - default-values
          - default-values
          valueType: valueType
          name: name
          description: description
          valueRequired: true
        - default-values:
          - default-values
          - default-values
          valueType: valueType
          name: name
          description: description
          valueRequired: true
        role-references:
        - isReadOnly: true
          appName: appName
          attributeList:
          - attributeValues:
            - attributeValues
            - attributeValues
            description: description
            attributeName: attributeName
            attributeValueOrigin: attributeValueOrigin
            valueRequired: true
          - attributeValues:
            - attributeValues
            - attributeValues
            description: description
            attributeName: attributeName
            attributeValueOrigin: attributeValueOrigin
            valueRequired: true
          name: name
          roleCollectionReferences:
          - name: name
            description: description
          - name: name
            description: description
          appDescription: appDescription
          description: description
          scopes:
          - granted-apps:
            - granted-apps
            - granted-apps
            grant-as-authority-to-apps:
            - grant-as-authority-to-apps
            - grant-as-authority-to-apps
            name: name
            custom-granted-apps:
            - custom-granted-apps
            - custom-granted-apps
            custom-grant-as-authority-to-apps:
            - custom-grant-as-authority-to-apps
            - custom-grant-as-authority-to-apps
            description: description
          - granted-apps:
            - granted-apps
            - granted-apps
            grant-as-authority-to-apps:
            - grant-as-authority-to-apps
            - grant-as-authority-to-apps
            name: name
            custom-granted-apps:
            - custom-granted-apps
            - custom-granted-apps
            custom-grant-as-authority-to-apps:
            - custom-grant-as-authority-to-apps
            - custom-grant-as-authority-to-apps
            description: description
          roleTemplateName: roleTemplateName
          roleTemplateAppId: roleTemplateAppId
        - isReadOnly: true
          appName: appName
          attributeList:
          - attributeValues:
            - attributeValues
            - attributeValues
            description: description
            attributeName: attributeName
            attributeValueOrigin: attributeValueOrigin
            valueRequired: true
          - attributeValues:
            - attributeValues
            - attributeValues
            description: description
            attributeName: attributeName
            attributeValueOrigin: attributeValueOrigin
            valueRequired: true
          name: name
          roleCollectionReferences:
          - name: name
            description: description
          - name: name
            description: description
          appDescription: appDescription
          description: description
          scopes:
          - granted-apps:
            - granted-apps
            - granted-apps
            grant-as-authority-to-apps:
            - grant-as-authority-to-apps
            - grant-as-authority-to-apps
            name: name
            custom-granted-apps:
            - custom-granted-apps
            - custom-granted-apps
            custom-grant-as-authority-to-apps:
            - custom-grant-as-authority-to-apps
            - custom-grant-as-authority-to-apps
            description: description
          - granted-apps:
            - granted-apps
            - granted-apps
            grant-as-authority-to-apps:
            - grant-as-authority-to-apps
            - grant-as-authority-to-apps
            name: name
            custom-granted-apps:
            - custom-granted-apps
            - custom-granted-apps
            custom-grant-as-authority-to-apps:
            - custom-grant-as-authority-to-apps
            - custom-grant-as-authority-to-apps
            description: description
          roleTemplateName: roleTemplateName
          roleTemplateAppId: roleTemplateAppId
        scope-references:
        - scope-references
        - scope-references
        appName: appName
        appId: appId
        name: name
        default-role-name: default-role-name
        appDescription: appDescription
        description: description
      properties:
        name:
          type: string
        description:
          type: string
        default-role-name:
          type: string
        scope-references:
          items:
            type: string
          type: array
        attribute-references:
          items:
            $ref: '#/components/schemas/AttributeReference'
          type: array
        role-references:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        appId:
          type: string
        appName:
          type: string
        appDescription:
          type: string
      type: object
    AuthData:
      example:
        roles:
        - isReadOnly: true
          appName: appName
          attributeList:
          - attributeValues:
            - attributeValues
            - attributeValues
            description: description
            attributeName: attributeName
            attributeValueOrigin: attributeValueOrigin
            valueRequired: true
          - attributeValues:
            - attributeValues
            - attributeValues
            description: description
            attributeName: attributeName
            attributeValueOrigin: attributeValueOrigin
            valueRequired: true
          name: name
          roleCollectionReferences:
          - name: name
            description: description
          - name: name
            description: description
          appDescription: appDescription
          description: description
          scopes:
          - granted-apps:
            - granted-apps
            - granted-apps
            grant-as-authority-to-apps:
            - grant-as-authority-to-apps
            - grant-as-authority-to-apps
            name: name
            custom-granted-apps:
            - custom-granted-apps
            - custom-granted-apps
            custom-grant-as-authority-to-apps:
            - custom-grant-as-authority-to-apps
            - custom-grant-as-authority-to-apps
            description: description
          - granted-apps:
            - granted-apps
            - granted-apps
            grant-as-authority-to-apps:
            - grant-as-authority-to-apps
            - grant-as-authority-to-apps
            name: name
            custom-granted-apps:
            - custom-granted-apps
            - custom-granted-apps
            custom-grant-as-authority-to-apps:
            - custom-grant-as-authority-to-apps
            - custom-grant-as-authority-to-apps
            description: description
          roleTemplateName: roleTemplateName
          roleTemplateAppId: roleTemplateAppId
        - isReadOnly: true
          appName: appName
          attributeList:
          - attributeValues:
            - attributeValues
            - attributeValues
            description: description
            attributeName: attributeName
            attributeValueOrigin: attributeValueOrigin
            valueRequired: true
          - attributeValues:
            - attributeValues
            - attributeValues
            description: description
            attributeName: attributeName
            attributeValueOrigin: attributeValueOrigin
            valueRequired: true
          name: name
          roleCollectionReferences:
          - name: name
            description: description
          - name: name
            description: description
          appDescription: appDescription
          description: description
          scopes:
          - granted-apps:
            - granted-apps
            - granted-apps
            grant-as-authority-to-apps:
            - grant-as-authority-to-apps
            - grant-as-authority-to-apps
            name: name
            custom-granted-apps:
            - custom-granted-apps
            - custom-granted-apps
            custom-grant-as-authority-to-apps:
            - custom-grant-as-authority-to-apps
            - custom-grant-as-authority-to-apps
            description: description
          - granted-apps:
            - granted-apps
            - granted-apps
            grant-as-authority-to-apps:
            - grant-as-authority-to-apps
            - grant-as-authority-to-apps
            name: name
            custom-granted-apps:
            - custom-granted-apps
            - custom-granted-apps
            custom-grant-as-authority-to-apps:
            - custom-grant-as-authority-to-apps
            - custom-grant-as-authority-to-apps
            description: description
          roleTemplateName: roleTemplateName
          roleTemplateAppId: roleTemplateAppId
        roleCollections:
        - roleReferences:
          - name: name
            description: description
            roleTemplateAppId: roleTemplateAppId
            roleTemplateName: roleTemplateName
          - name: name
            description: description
            roleTemplateAppId: roleTemplateAppId
            roleTemplateName: roleTemplateName
          isReadOnly: true
          userReferences:
          - givenName: givenName
            familyName: familyName
            origin: origin
            zoneId: zoneId
            id: id
            email: email
            username: username
          - givenName: givenName
            familyName: familyName
            origin: origin
            zoneId: zoneId
            id: id
            email: email
            username: username
          name: name
          description: description
          groupReferences:
          - attributeValue: attributeValue
            comparisonOperator: comparisonOperator
            idpId: idpId
            roleCollectionName: roleCollectionName
            attributeName: attributeName
            roleCollectionIdentityZone: roleCollectionIdentityZone
            samlAttributeValue: samlAttributeValue
            samlAttrName: samlAttrName
            samlEntityId: samlEntityId
            idpDisplayName: idpDisplayName
          - attributeValue: attributeValue
            comparisonOperator: comparisonOperator
            idpId: idpId
            roleCollectionName: roleCollectionName
            attributeName: attributeName
            roleCollectionIdentityZone: roleCollectionIdentityZone
            samlAttributeValue: samlAttributeValue
            samlAttrName: samlAttrName
            samlEntityId: samlEntityId
            idpDisplayName: idpDisplayName
          samlAttributeAssignment:
          - attributeValue: attributeValue
            comparisonOperator: comparisonOperator
            idpId: idpId
            roleCollectionName: roleCollectionName
            attributeName: attributeName
            roleCollectionIdentityZone: roleCollectionIdentityZone
            samlAttributeValue: samlAttributeValue
            samlAttrName: samlAttrName
            samlEntityId: samlEntityId
            idpDisplayName: idpDisplayName
          - attributeValue: attributeValue
            comparisonOperator: comparisonOperator
            idpId: idpId
            roleCollectionName: roleCollectionName
            attributeName: attributeName
            roleCollectionIdentityZone: roleCollectionIdentityZone
            samlAttributeValue: samlAttributeValue
            samlAttrName: samlAttrName
            samlEntityId: samlEntityId
            idpDisplayName: idpDisplayName
        - roleReferences:
          - name: name
            description: description
            roleTemplateAppId: roleTemplateAppId
            roleTemplateName: roleTemplateName
          - name: name
            description: description
            roleTemplateAppId: roleTemplateAppId
            roleTemplateName: roleTemplateName
          isReadOnly: true
          userReferences:
          - givenName: givenName
            familyName: familyName
            origin: origin
            zoneId: zoneId
            id: id
            email: email
            username: username
          - givenName: givenName
            familyName: familyName
            origin: origin
            zoneId: zoneId
            id: id
            email: email
            username: username
          name: name
          description: description
          groupReferences:
          - attributeValue: attributeValue
            comparisonOperator: comparisonOperator
            idpId: idpId
            roleCollectionName: roleCollectionName
            attributeName: attributeName
            roleCollectionIdentityZone: roleCollectionIdentityZone
            samlAttributeValue: samlAttributeValue
            samlAttrName: samlAttrName
            samlEntityId: samlEntityId
            idpDisplayName: idpDisplayName
          - attributeValue: attributeValue
            comparisonOperator: comparisonOperator
            idpId: idpId
            roleCollectionName: roleCollectionName
            attributeName: attributeName
            roleCollectionIdentityZone: roleCollectionIdentityZone
            samlAttributeValue: samlAttributeValue
            samlAttrName: samlAttrName
            samlEntityId: samlEntityId
            idpDisplayName: idpDisplayName
          samlAttributeAssignment:
          - attributeValue: attributeValue
            comparisonOperator: comparisonOperator
            idpId: idpId
            roleCollectionName: roleCollectionName
            attributeName: attributeName
            roleCollectionIdentityZone: roleCollectionIdentityZone
            samlAttributeValue: samlAttributeValue
            samlAttrName: samlAttrName
            samlEntityId: samlEntityId
            idpDisplayName: idpDisplayName
          - attributeValue: attributeValue
            comparisonOperator: comparisonOperator
            idpId: idpId
            roleCollectionName: roleCollectionName
            attributeName: attributeName
            roleCollectionIdentityZone: roleCollectionIdentityZone
            samlAttributeValue: samlAttributeValue
            samlAttrName: samlAttrName
            samlEntityId: samlEntityId
            idpDisplayName: idpDisplayName
        identityZone: identityZone
      properties:
        identityZone:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        roleCollections:
          items:
            $ref: '#/components/schemas/RoleCollection'
          type: array
      type: object
    AuthDataWrapper:
      example:
        authorizationData:
        - roles:
          - isReadOnly: true
            appName: appName
            attributeList:
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            name: name
            roleCollectionReferences:
            - name: name
              description: description
            - name: name
              description: description
            appDescription: appDescription
            description: description
            scopes:
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            roleTemplateName: roleTemplateName
            roleTemplateAppId: roleTemplateAppId
          - isReadOnly: true
            appName: appName
            attributeList:
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            name: name
            roleCollectionReferences:
            - name: name
              description: description
            - name: name
              description: description
            appDescription: appDescription
            description: description
            scopes:
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            roleTemplateName: roleTemplateName
            roleTemplateAppId: roleTemplateAppId
          roleCollections:
          - roleReferences:
            - name: name
              description: description
              roleTemplateAppId: roleTemplateAppId
              roleTemplateName: roleTemplateName
            - name: name
              description: description
              roleTemplateAppId: roleTemplateAppId
              roleTemplateName: roleTemplateName
            isReadOnly: true
            userReferences:
            - givenName: givenName
              familyName: familyName
              origin: origin
              zoneId: zoneId
              id: id
              email: email
              username: username
            - givenName: givenName
              familyName: familyName
              origin: origin
              zoneId: zoneId
              id: id
              email: email
              username: username
            name: name
            description: description
            groupReferences:
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
            samlAttributeAssignment:
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
          - roleReferences:
            - name: name
              description: description
              roleTemplateAppId: roleTemplateAppId
              roleTemplateName: roleTemplateName
            - name: name
              description: description
              roleTemplateAppId: roleTemplateAppId
              roleTemplateName: roleTemplateName
            isReadOnly: true
            userReferences:
            - givenName: givenName
              familyName: familyName
              origin: origin
              zoneId: zoneId
              id: id
              email: email
              username: username
            - givenName: givenName
              familyName: familyName
              origin: origin
              zoneId: zoneId
              id: id
              email: email
              username: username
            name: name
            description: description
            groupReferences:
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
            samlAttributeAssignment:
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
          identityZone: identityZone
        - roles:
          - isReadOnly: true
            appName: appName
            attributeList:
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            name: name
            roleCollectionReferences:
            - name: name
              description: description
            - name: name
              description: description
            appDescription: appDescription
            description: description
            scopes:
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            roleTemplateName: roleTemplateName
            roleTemplateAppId: roleTemplateAppId
          - isReadOnly: true
            appName: appName
            attributeList:
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            - attributeValues:
              - attributeValues
              - attributeValues
              description: description
              attributeName: attributeName
              attributeValueOrigin: attributeValueOrigin
              valueRequired: true
            name: name
            roleCollectionReferences:
            - name: name
              description: description
            - name: name
              description: description
            appDescription: appDescription
            description: description
            scopes:
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            - granted-apps:
              - granted-apps
              - granted-apps
              grant-as-authority-to-apps:
              - grant-as-authority-to-apps
              - grant-as-authority-to-apps
              name: name
              custom-granted-apps:
              - custom-granted-apps
              - custom-granted-apps
              custom-grant-as-authority-to-apps:
              - custom-grant-as-authority-to-apps
              - custom-grant-as-authority-to-apps
              description: description
            roleTemplateName: roleTemplateName
            roleTemplateAppId: roleTemplateAppId
          roleCollections:
          - roleReferences:
            - name: name
              description: description
              roleTemplateAppId: roleTemplateAppId
              roleTemplateName: roleTemplateName
            - name: name
              description: description
              roleTemplateAppId: roleTemplateAppId
              roleTemplateName: roleTemplateName
            isReadOnly: true
            userReferences:
            - givenName: givenName
              familyName: familyName
              origin: origin
              zoneId: zoneId
              id: id
              email: email
              username: username
            - givenName: givenName
              familyName: familyName
              origin: origin
              zoneId: zoneId
              id: id
              email: email
              username: username
            name: name
            description: description
            groupReferences:
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
            samlAttributeAssignment:
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
          - roleReferences:
            - name: name
              description: description
              roleTemplateAppId: roleTemplateAppId
              roleTemplateName: roleTemplateName
            - name: name
              description: description
              roleTemplateAppId: roleTemplateAppId
              roleTemplateName: roleTemplateName
            isReadOnly: true
            userReferences:
            - givenName: givenName
              familyName: familyName
              origin: origin
              zoneId: zoneId
              id: id
              email: email
              username: username
            - givenName: givenName
              familyName: familyName
              origin: origin
              zoneId: zoneId
              id: id
              email: email
              username: username
            name: name
            description: description
            groupReferences:
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
            samlAttributeAssignment:
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
            - attributeValue: attributeValue
              comparisonOperator: comparisonOperator
              idpId: idpId
              roleCollectionName: roleCollectionName
              attributeName: attributeName
              roleCollectionIdentityZone: roleCollectionIdentityZone
              samlAttributeValue: samlAttributeValue
              samlAttrName: samlAttrName
              samlEntityId: samlEntityId
              idpDisplayName: idpDisplayName
          identityZone: identityZone
        appId: appId
      properties:
        appId:
          type: string
        authorizationData:
          items:
            $ref: '#/components/schemas/AuthData'
          type: array
      type: object
    SearchResultsObject:
      example:
        startIndex: 0
        totalResults: 1
        itemsPerPage: 6
        schemas:
        - schemas
        - schemas
        resources:
        - "{}"
        - "{}"
      properties:
        resources:
          items:
            type: object
          type: array
        startIndex:
          format: int32
          type: integer
        itemsPerPage:
          format: int32
          type: integer
        totalResults:
          format: int32
          type: integer
        schemas:
          items:
            type: string
          type: array
      type: object
    RoleCollectionNamesDto:
      description: The role collections to be deleted
      example:
        roleCollections:
        - roleCollections
        - roleCollections
      properties:
        roleCollections:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
  securitySchemes:
    xs_auth:
      description: This API uses OAuth2 with the client-credentials flow.
      flows:
        clientCredentials:
          authorizationUrl: /token
          scopes:
            xs_authorization.read: for read operations
            xs_authorization.write: for create and update operations
      name: xs_auth
      type: oauth2
    xs_sub:
      description: This API uses OAuth2 with the client-credentials flow.
      flows:
        clientCredentials:
          authorizationUrl: /token
          scopes:
            xs_subscription.read: for read operations
            xs_subscription.write: for create and update operations
      name: xs_sub
      type: oauth2
    xs_tenant:
      description: This API uses OAuth2 with the client-credentials flow.
      flows:
        clientCredentials:
          authorizationUrl: /token
          scopes:
            xs_tenant.read: for read operations
            xs_tenant.write: for create and update operations
      name: xs_tenant
      type: oauth2
    xs_idp:
      description: This API uses OAuth2 with the client-credentials flow.
      flows:
        clientCredentials:
          authorizationUrl: /token
          scopes:
            xs_idp.read: for read operations
            xs_idp.write: for modifying operations
      name: xs_idp
      type: oauth2
    xs_idp_global:
      description: This API uses OAuth2 with the client-credentials flow.
      flows:
        clientCredentials:
          authorizationUrl: /token
          scopes:
            xs_idp_global.read: for read operations
            xs_idp_global.write: for modifying operations
      name: xs_idp_global
      type: oauth2
    uaa.resource:
      description: This API uses OAuth2 with the client-credentials flow.
      flows:
        clientCredentials:
          authorizationUrl: /token
          scopes:
            uaa.resource: Identifies a JWT obtained via the client credentials grant.
      name: uaa.resource
      type: oauth2
