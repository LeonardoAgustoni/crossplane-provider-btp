/*
SAP XSUAA REST API

Provides access to RoleTemplates, Roles, RoleCollection etc. using the XSUAA REST API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TenantSettingsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenantSettingsResp{}

// TenantSettingsResp struct for TenantSettingsResp
type TenantSettingsResp struct {
	IframeDomains *string `json:"iframeDomains,omitempty"`
	TokenPolicySettings *TokenPolicySettingsResp `json:"tokenPolicySettings,omitempty"`
	SamlConfigSettings *SamlConfigSettingsResp `json:"samlConfigSettings,omitempty"`
	Links *LinksSettings `json:"links,omitempty"`
	DefaultIdp *string `json:"defaultIdp,omitempty"`
	CorsDefaultOrigins []string `json:"corsDefaultOrigins,omitempty"`
	CorsXhrOrigins []string `json:"corsXhrOrigins,omitempty"`
	CredentialTypeInfos []TenantCredentialTypeInfo `json:"credentialTypeInfos,omitempty"`
	TreatUsersWithSameEmailAsSameUser *bool `json:"treatUsersWithSameEmailAsSameUser,omitempty"`
	UseIdpUserNameInTokens *bool `json:"useIdpUserNameInTokens,omitempty"`
	CustomEmailDomains []string `json:"customEmailDomains,omitempty"`
	CmkEnabled *string `json:"cmkEnabled,omitempty"`
	PartitionedCookies *bool `json:"partitionedCookies,omitempty"`
}

// NewTenantSettingsResp instantiates a new TenantSettingsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantSettingsResp() *TenantSettingsResp {
	this := TenantSettingsResp{}
	return &this
}

// NewTenantSettingsRespWithDefaults instantiates a new TenantSettingsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantSettingsRespWithDefaults() *TenantSettingsResp {
	this := TenantSettingsResp{}
	return &this
}

// GetIframeDomains returns the IframeDomains field value if set, zero value otherwise.
func (o *TenantSettingsResp) GetIframeDomains() string {
	if o == nil || IsNil(o.IframeDomains) {
		var ret string
		return ret
	}
	return *o.IframeDomains
}

// GetIframeDomainsOk returns a tuple with the IframeDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsResp) GetIframeDomainsOk() (*string, bool) {
	if o == nil || IsNil(o.IframeDomains) {
		return nil, false
	}
	return o.IframeDomains, true
}

// HasIframeDomains returns a boolean if a field has been set.
func (o *TenantSettingsResp) HasIframeDomains() bool {
	if o != nil && !IsNil(o.IframeDomains) {
		return true
	}

	return false
}

// SetIframeDomains gets a reference to the given string and assigns it to the IframeDomains field.
func (o *TenantSettingsResp) SetIframeDomains(v string) {
	o.IframeDomains = &v
}

// GetTokenPolicySettings returns the TokenPolicySettings field value if set, zero value otherwise.
func (o *TenantSettingsResp) GetTokenPolicySettings() TokenPolicySettingsResp {
	if o == nil || IsNil(o.TokenPolicySettings) {
		var ret TokenPolicySettingsResp
		return ret
	}
	return *o.TokenPolicySettings
}

// GetTokenPolicySettingsOk returns a tuple with the TokenPolicySettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsResp) GetTokenPolicySettingsOk() (*TokenPolicySettingsResp, bool) {
	if o == nil || IsNil(o.TokenPolicySettings) {
		return nil, false
	}
	return o.TokenPolicySettings, true
}

// HasTokenPolicySettings returns a boolean if a field has been set.
func (o *TenantSettingsResp) HasTokenPolicySettings() bool {
	if o != nil && !IsNil(o.TokenPolicySettings) {
		return true
	}

	return false
}

// SetTokenPolicySettings gets a reference to the given TokenPolicySettingsResp and assigns it to the TokenPolicySettings field.
func (o *TenantSettingsResp) SetTokenPolicySettings(v TokenPolicySettingsResp) {
	o.TokenPolicySettings = &v
}

// GetSamlConfigSettings returns the SamlConfigSettings field value if set, zero value otherwise.
func (o *TenantSettingsResp) GetSamlConfigSettings() SamlConfigSettingsResp {
	if o == nil || IsNil(o.SamlConfigSettings) {
		var ret SamlConfigSettingsResp
		return ret
	}
	return *o.SamlConfigSettings
}

// GetSamlConfigSettingsOk returns a tuple with the SamlConfigSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsResp) GetSamlConfigSettingsOk() (*SamlConfigSettingsResp, bool) {
	if o == nil || IsNil(o.SamlConfigSettings) {
		return nil, false
	}
	return o.SamlConfigSettings, true
}

// HasSamlConfigSettings returns a boolean if a field has been set.
func (o *TenantSettingsResp) HasSamlConfigSettings() bool {
	if o != nil && !IsNil(o.SamlConfigSettings) {
		return true
	}

	return false
}

// SetSamlConfigSettings gets a reference to the given SamlConfigSettingsResp and assigns it to the SamlConfigSettings field.
func (o *TenantSettingsResp) SetSamlConfigSettings(v SamlConfigSettingsResp) {
	o.SamlConfigSettings = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *TenantSettingsResp) GetLinks() LinksSettings {
	if o == nil || IsNil(o.Links) {
		var ret LinksSettings
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsResp) GetLinksOk() (*LinksSettings, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *TenantSettingsResp) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given LinksSettings and assigns it to the Links field.
func (o *TenantSettingsResp) SetLinks(v LinksSettings) {
	o.Links = &v
}

// GetDefaultIdp returns the DefaultIdp field value if set, zero value otherwise.
func (o *TenantSettingsResp) GetDefaultIdp() string {
	if o == nil || IsNil(o.DefaultIdp) {
		var ret string
		return ret
	}
	return *o.DefaultIdp
}

// GetDefaultIdpOk returns a tuple with the DefaultIdp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsResp) GetDefaultIdpOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultIdp) {
		return nil, false
	}
	return o.DefaultIdp, true
}

// HasDefaultIdp returns a boolean if a field has been set.
func (o *TenantSettingsResp) HasDefaultIdp() bool {
	if o != nil && !IsNil(o.DefaultIdp) {
		return true
	}

	return false
}

// SetDefaultIdp gets a reference to the given string and assigns it to the DefaultIdp field.
func (o *TenantSettingsResp) SetDefaultIdp(v string) {
	o.DefaultIdp = &v
}

// GetCorsDefaultOrigins returns the CorsDefaultOrigins field value if set, zero value otherwise.
func (o *TenantSettingsResp) GetCorsDefaultOrigins() []string {
	if o == nil || IsNil(o.CorsDefaultOrigins) {
		var ret []string
		return ret
	}
	return o.CorsDefaultOrigins
}

// GetCorsDefaultOriginsOk returns a tuple with the CorsDefaultOrigins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsResp) GetCorsDefaultOriginsOk() ([]string, bool) {
	if o == nil || IsNil(o.CorsDefaultOrigins) {
		return nil, false
	}
	return o.CorsDefaultOrigins, true
}

// HasCorsDefaultOrigins returns a boolean if a field has been set.
func (o *TenantSettingsResp) HasCorsDefaultOrigins() bool {
	if o != nil && !IsNil(o.CorsDefaultOrigins) {
		return true
	}

	return false
}

// SetCorsDefaultOrigins gets a reference to the given []string and assigns it to the CorsDefaultOrigins field.
func (o *TenantSettingsResp) SetCorsDefaultOrigins(v []string) {
	o.CorsDefaultOrigins = v
}

// GetCorsXhrOrigins returns the CorsXhrOrigins field value if set, zero value otherwise.
func (o *TenantSettingsResp) GetCorsXhrOrigins() []string {
	if o == nil || IsNil(o.CorsXhrOrigins) {
		var ret []string
		return ret
	}
	return o.CorsXhrOrigins
}

// GetCorsXhrOriginsOk returns a tuple with the CorsXhrOrigins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsResp) GetCorsXhrOriginsOk() ([]string, bool) {
	if o == nil || IsNil(o.CorsXhrOrigins) {
		return nil, false
	}
	return o.CorsXhrOrigins, true
}

// HasCorsXhrOrigins returns a boolean if a field has been set.
func (o *TenantSettingsResp) HasCorsXhrOrigins() bool {
	if o != nil && !IsNil(o.CorsXhrOrigins) {
		return true
	}

	return false
}

// SetCorsXhrOrigins gets a reference to the given []string and assigns it to the CorsXhrOrigins field.
func (o *TenantSettingsResp) SetCorsXhrOrigins(v []string) {
	o.CorsXhrOrigins = v
}

// GetCredentialTypeInfos returns the CredentialTypeInfos field value if set, zero value otherwise.
func (o *TenantSettingsResp) GetCredentialTypeInfos() []TenantCredentialTypeInfo {
	if o == nil || IsNil(o.CredentialTypeInfos) {
		var ret []TenantCredentialTypeInfo
		return ret
	}
	return o.CredentialTypeInfos
}

// GetCredentialTypeInfosOk returns a tuple with the CredentialTypeInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsResp) GetCredentialTypeInfosOk() ([]TenantCredentialTypeInfo, bool) {
	if o == nil || IsNil(o.CredentialTypeInfos) {
		return nil, false
	}
	return o.CredentialTypeInfos, true
}

// HasCredentialTypeInfos returns a boolean if a field has been set.
func (o *TenantSettingsResp) HasCredentialTypeInfos() bool {
	if o != nil && !IsNil(o.CredentialTypeInfos) {
		return true
	}

	return false
}

// SetCredentialTypeInfos gets a reference to the given []TenantCredentialTypeInfo and assigns it to the CredentialTypeInfos field.
func (o *TenantSettingsResp) SetCredentialTypeInfos(v []TenantCredentialTypeInfo) {
	o.CredentialTypeInfos = v
}

// GetTreatUsersWithSameEmailAsSameUser returns the TreatUsersWithSameEmailAsSameUser field value if set, zero value otherwise.
func (o *TenantSettingsResp) GetTreatUsersWithSameEmailAsSameUser() bool {
	if o == nil || IsNil(o.TreatUsersWithSameEmailAsSameUser) {
		var ret bool
		return ret
	}
	return *o.TreatUsersWithSameEmailAsSameUser
}

// GetTreatUsersWithSameEmailAsSameUserOk returns a tuple with the TreatUsersWithSameEmailAsSameUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsResp) GetTreatUsersWithSameEmailAsSameUserOk() (*bool, bool) {
	if o == nil || IsNil(o.TreatUsersWithSameEmailAsSameUser) {
		return nil, false
	}
	return o.TreatUsersWithSameEmailAsSameUser, true
}

// HasTreatUsersWithSameEmailAsSameUser returns a boolean if a field has been set.
func (o *TenantSettingsResp) HasTreatUsersWithSameEmailAsSameUser() bool {
	if o != nil && !IsNil(o.TreatUsersWithSameEmailAsSameUser) {
		return true
	}

	return false
}

// SetTreatUsersWithSameEmailAsSameUser gets a reference to the given bool and assigns it to the TreatUsersWithSameEmailAsSameUser field.
func (o *TenantSettingsResp) SetTreatUsersWithSameEmailAsSameUser(v bool) {
	o.TreatUsersWithSameEmailAsSameUser = &v
}

// GetUseIdpUserNameInTokens returns the UseIdpUserNameInTokens field value if set, zero value otherwise.
func (o *TenantSettingsResp) GetUseIdpUserNameInTokens() bool {
	if o == nil || IsNil(o.UseIdpUserNameInTokens) {
		var ret bool
		return ret
	}
	return *o.UseIdpUserNameInTokens
}

// GetUseIdpUserNameInTokensOk returns a tuple with the UseIdpUserNameInTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsResp) GetUseIdpUserNameInTokensOk() (*bool, bool) {
	if o == nil || IsNil(o.UseIdpUserNameInTokens) {
		return nil, false
	}
	return o.UseIdpUserNameInTokens, true
}

// HasUseIdpUserNameInTokens returns a boolean if a field has been set.
func (o *TenantSettingsResp) HasUseIdpUserNameInTokens() bool {
	if o != nil && !IsNil(o.UseIdpUserNameInTokens) {
		return true
	}

	return false
}

// SetUseIdpUserNameInTokens gets a reference to the given bool and assigns it to the UseIdpUserNameInTokens field.
func (o *TenantSettingsResp) SetUseIdpUserNameInTokens(v bool) {
	o.UseIdpUserNameInTokens = &v
}

// GetCustomEmailDomains returns the CustomEmailDomains field value if set, zero value otherwise.
func (o *TenantSettingsResp) GetCustomEmailDomains() []string {
	if o == nil || IsNil(o.CustomEmailDomains) {
		var ret []string
		return ret
	}
	return o.CustomEmailDomains
}

// GetCustomEmailDomainsOk returns a tuple with the CustomEmailDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsResp) GetCustomEmailDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.CustomEmailDomains) {
		return nil, false
	}
	return o.CustomEmailDomains, true
}

// HasCustomEmailDomains returns a boolean if a field has been set.
func (o *TenantSettingsResp) HasCustomEmailDomains() bool {
	if o != nil && !IsNil(o.CustomEmailDomains) {
		return true
	}

	return false
}

// SetCustomEmailDomains gets a reference to the given []string and assigns it to the CustomEmailDomains field.
func (o *TenantSettingsResp) SetCustomEmailDomains(v []string) {
	o.CustomEmailDomains = v
}

// GetCmkEnabled returns the CmkEnabled field value if set, zero value otherwise.
func (o *TenantSettingsResp) GetCmkEnabled() string {
	if o == nil || IsNil(o.CmkEnabled) {
		var ret string
		return ret
	}
	return *o.CmkEnabled
}

// GetCmkEnabledOk returns a tuple with the CmkEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsResp) GetCmkEnabledOk() (*string, bool) {
	if o == nil || IsNil(o.CmkEnabled) {
		return nil, false
	}
	return o.CmkEnabled, true
}

// HasCmkEnabled returns a boolean if a field has been set.
func (o *TenantSettingsResp) HasCmkEnabled() bool {
	if o != nil && !IsNil(o.CmkEnabled) {
		return true
	}

	return false
}

// SetCmkEnabled gets a reference to the given string and assigns it to the CmkEnabled field.
func (o *TenantSettingsResp) SetCmkEnabled(v string) {
	o.CmkEnabled = &v
}

// GetPartitionedCookies returns the PartitionedCookies field value if set, zero value otherwise.
func (o *TenantSettingsResp) GetPartitionedCookies() bool {
	if o == nil || IsNil(o.PartitionedCookies) {
		var ret bool
		return ret
	}
	return *o.PartitionedCookies
}

// GetPartitionedCookiesOk returns a tuple with the PartitionedCookies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantSettingsResp) GetPartitionedCookiesOk() (*bool, bool) {
	if o == nil || IsNil(o.PartitionedCookies) {
		return nil, false
	}
	return o.PartitionedCookies, true
}

// HasPartitionedCookies returns a boolean if a field has been set.
func (o *TenantSettingsResp) HasPartitionedCookies() bool {
	if o != nil && !IsNil(o.PartitionedCookies) {
		return true
	}

	return false
}

// SetPartitionedCookies gets a reference to the given bool and assigns it to the PartitionedCookies field.
func (o *TenantSettingsResp) SetPartitionedCookies(v bool) {
	o.PartitionedCookies = &v
}

func (o TenantSettingsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenantSettingsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IframeDomains) {
		toSerialize["iframeDomains"] = o.IframeDomains
	}
	if !IsNil(o.TokenPolicySettings) {
		toSerialize["tokenPolicySettings"] = o.TokenPolicySettings
	}
	if !IsNil(o.SamlConfigSettings) {
		toSerialize["samlConfigSettings"] = o.SamlConfigSettings
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.DefaultIdp) {
		toSerialize["defaultIdp"] = o.DefaultIdp
	}
	if !IsNil(o.CorsDefaultOrigins) {
		toSerialize["corsDefaultOrigins"] = o.CorsDefaultOrigins
	}
	if !IsNil(o.CorsXhrOrigins) {
		toSerialize["corsXhrOrigins"] = o.CorsXhrOrigins
	}
	if !IsNil(o.CredentialTypeInfos) {
		toSerialize["credentialTypeInfos"] = o.CredentialTypeInfos
	}
	if !IsNil(o.TreatUsersWithSameEmailAsSameUser) {
		toSerialize["treatUsersWithSameEmailAsSameUser"] = o.TreatUsersWithSameEmailAsSameUser
	}
	if !IsNil(o.UseIdpUserNameInTokens) {
		toSerialize["useIdpUserNameInTokens"] = o.UseIdpUserNameInTokens
	}
	if !IsNil(o.CustomEmailDomains) {
		toSerialize["customEmailDomains"] = o.CustomEmailDomains
	}
	if !IsNil(o.CmkEnabled) {
		toSerialize["cmkEnabled"] = o.CmkEnabled
	}
	if !IsNil(o.PartitionedCookies) {
		toSerialize["partitionedCookies"] = o.PartitionedCookies
	}
	return toSerialize, nil
}

type NullableTenantSettingsResp struct {
	value *TenantSettingsResp
	isSet bool
}

func (v NullableTenantSettingsResp) Get() *TenantSettingsResp {
	return v.value
}

func (v *NullableTenantSettingsResp) Set(val *TenantSettingsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantSettingsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantSettingsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantSettingsResp(val *TenantSettingsResp) *NullableTenantSettingsResp {
	return &NullableTenantSettingsResp{value: val, isSet: true}
}

func (v NullableTenantSettingsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantSettingsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


