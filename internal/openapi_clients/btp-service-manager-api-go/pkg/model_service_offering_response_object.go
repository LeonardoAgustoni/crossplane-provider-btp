/*
Service Manager

Service Manager provides REST APIs that are responsible for the creation and consumption of service instances in any connected runtime environment.   Use the Service Manager APIs to perform various operations related to your platforms, service brokers, service instances, and service bindings.  Get service plans and service offerings associated with your environment.    #### Platforms   Platforms are OSBAPI-enabled software systems on which applications and services are hosted.   With the Service Manager, you can now register your platform and enable it to consume the SAP BTP services from your native environment.   This registration results in a returned set of credentials that are needed to deploy the Service Manager agent.     #### Service Brokers   Service brokers act as brokers between the Service Manager and a platform’s marketplace to advertise catalogues of service offerings and service plans.  They also receive and process the requests from the marketplace to provision, bind, unbind, and deprovision these offerings and plans.    #### Service Instances   Service instances are instantiations of service plans that make the functionality of those service plans available for consumption.    #### Service Bindings   Service bindings provide access details to existing service instances.  The access details are part of the service bindings' ‘credentials’ property, and typically include access URLs and credentials.    #### Service Plans   Service plans represent sets of capabilities provided by a service offering.  For example, database service offerings provide different plans for different database versions or sizes, while the Service Manager plans offer different data access levels.    #### Service Offerings   Service offerings are advertisements of the services that are supported by a service broker.  For example, software that you can consume in the subaccount.  Service offerings are related to one or more service plans.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ServiceOfferingResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceOfferingResponseObject{}

// ServiceOfferingResponseObject struct for ServiceOfferingResponseObject
type ServiceOfferingResponseObject struct {
	// Whether the context for the service offering can be updated.
	AllowContextUpdates *bool `json:"allow_context_updates,omitempty"`
	// Whether the service offering is bindable.
	Bindable *bool `json:"bindable,omitempty"`
	// Whether the bindings associated with the service offering can be retrieved.
	BindingsRetrievable *bool `json:"bindings_retrievable,omitempty"`
	// The ID of the broker that provides the service plan.
	BrokerId *string `json:"broker_id,omitempty"`
	// The ID of the service offering as provided by the catalog.
	CatalogId *string `json:"catalog_id,omitempty"`
	// The catalog name of the service offering.
	CatalogName *string `json:"catalog_name,omitempty"`
	// The time the service offering was created. <br> In ISO 8601 format:</br> YYYY-MM-DDThh:mm:ssTZD
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The description of the service offering.
	Description *string `json:"description,omitempty"`
	// The ID of the service offering.
	Id *string `json:"id,omitempty"`
	// Whether the service instances associated with the service offering can be retrieved.
	InstancesRetrievable *bool `json:"instances_retrievable,omitempty"`
	Metadata *ServiceOfferingMetadata `json:"metadata,omitempty"`
	// The name of the service offering.
	Name *string `json:"name,omitempty"`
	// Whether the offered plan can be updated.
	PlanUpdateable *bool `json:"plan_updateable,omitempty"`
	// Whether the service offering is ready to be advertised.
	Ready *bool `json:"ready,omitempty"`
	// The list of tags for the service offering.
	Tags []string `json:"tags,omitempty"`
	// The last time the service offering was updated. <br/> In ISO 8601 format.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewServiceOfferingResponseObject instantiates a new ServiceOfferingResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceOfferingResponseObject() *ServiceOfferingResponseObject {
	this := ServiceOfferingResponseObject{}
	return &this
}

// NewServiceOfferingResponseObjectWithDefaults instantiates a new ServiceOfferingResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceOfferingResponseObjectWithDefaults() *ServiceOfferingResponseObject {
	this := ServiceOfferingResponseObject{}
	return &this
}

// GetAllowContextUpdates returns the AllowContextUpdates field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetAllowContextUpdates() bool {
	if o == nil || IsNil(o.AllowContextUpdates) {
		var ret bool
		return ret
	}
	return *o.AllowContextUpdates
}

// GetAllowContextUpdatesOk returns a tuple with the AllowContextUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetAllowContextUpdatesOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowContextUpdates) {
		return nil, false
	}
	return o.AllowContextUpdates, true
}

// HasAllowContextUpdates returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasAllowContextUpdates() bool {
	if o != nil && !IsNil(o.AllowContextUpdates) {
		return true
	}

	return false
}

// SetAllowContextUpdates gets a reference to the given bool and assigns it to the AllowContextUpdates field.
func (o *ServiceOfferingResponseObject) SetAllowContextUpdates(v bool) {
	o.AllowContextUpdates = &v
}

// GetBindable returns the Bindable field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetBindable() bool {
	if o == nil || IsNil(o.Bindable) {
		var ret bool
		return ret
	}
	return *o.Bindable
}

// GetBindableOk returns a tuple with the Bindable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetBindableOk() (*bool, bool) {
	if o == nil || IsNil(o.Bindable) {
		return nil, false
	}
	return o.Bindable, true
}

// HasBindable returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasBindable() bool {
	if o != nil && !IsNil(o.Bindable) {
		return true
	}

	return false
}

// SetBindable gets a reference to the given bool and assigns it to the Bindable field.
func (o *ServiceOfferingResponseObject) SetBindable(v bool) {
	o.Bindable = &v
}

// GetBindingsRetrievable returns the BindingsRetrievable field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetBindingsRetrievable() bool {
	if o == nil || IsNil(o.BindingsRetrievable) {
		var ret bool
		return ret
	}
	return *o.BindingsRetrievable
}

// GetBindingsRetrievableOk returns a tuple with the BindingsRetrievable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetBindingsRetrievableOk() (*bool, bool) {
	if o == nil || IsNil(o.BindingsRetrievable) {
		return nil, false
	}
	return o.BindingsRetrievable, true
}

// HasBindingsRetrievable returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasBindingsRetrievable() bool {
	if o != nil && !IsNil(o.BindingsRetrievable) {
		return true
	}

	return false
}

// SetBindingsRetrievable gets a reference to the given bool and assigns it to the BindingsRetrievable field.
func (o *ServiceOfferingResponseObject) SetBindingsRetrievable(v bool) {
	o.BindingsRetrievable = &v
}

// GetBrokerId returns the BrokerId field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetBrokerId() string {
	if o == nil || IsNil(o.BrokerId) {
		var ret string
		return ret
	}
	return *o.BrokerId
}

// GetBrokerIdOk returns a tuple with the BrokerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetBrokerIdOk() (*string, bool) {
	if o == nil || IsNil(o.BrokerId) {
		return nil, false
	}
	return o.BrokerId, true
}

// HasBrokerId returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasBrokerId() bool {
	if o != nil && !IsNil(o.BrokerId) {
		return true
	}

	return false
}

// SetBrokerId gets a reference to the given string and assigns it to the BrokerId field.
func (o *ServiceOfferingResponseObject) SetBrokerId(v string) {
	o.BrokerId = &v
}

// GetCatalogId returns the CatalogId field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetCatalogId() string {
	if o == nil || IsNil(o.CatalogId) {
		var ret string
		return ret
	}
	return *o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetCatalogIdOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogId) {
		return nil, false
	}
	return o.CatalogId, true
}

// HasCatalogId returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasCatalogId() bool {
	if o != nil && !IsNil(o.CatalogId) {
		return true
	}

	return false
}

// SetCatalogId gets a reference to the given string and assigns it to the CatalogId field.
func (o *ServiceOfferingResponseObject) SetCatalogId(v string) {
	o.CatalogId = &v
}

// GetCatalogName returns the CatalogName field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetCatalogName() string {
	if o == nil || IsNil(o.CatalogName) {
		var ret string
		return ret
	}
	return *o.CatalogName
}

// GetCatalogNameOk returns a tuple with the CatalogName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetCatalogNameOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogName) {
		return nil, false
	}
	return o.CatalogName, true
}

// HasCatalogName returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasCatalogName() bool {
	if o != nil && !IsNil(o.CatalogName) {
		return true
	}

	return false
}

// SetCatalogName gets a reference to the given string and assigns it to the CatalogName field.
func (o *ServiceOfferingResponseObject) SetCatalogName(v string) {
	o.CatalogName = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ServiceOfferingResponseObject) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServiceOfferingResponseObject) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceOfferingResponseObject) SetId(v string) {
	o.Id = &v
}

// GetInstancesRetrievable returns the InstancesRetrievable field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetInstancesRetrievable() bool {
	if o == nil || IsNil(o.InstancesRetrievable) {
		var ret bool
		return ret
	}
	return *o.InstancesRetrievable
}

// GetInstancesRetrievableOk returns a tuple with the InstancesRetrievable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetInstancesRetrievableOk() (*bool, bool) {
	if o == nil || IsNil(o.InstancesRetrievable) {
		return nil, false
	}
	return o.InstancesRetrievable, true
}

// HasInstancesRetrievable returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasInstancesRetrievable() bool {
	if o != nil && !IsNil(o.InstancesRetrievable) {
		return true
	}

	return false
}

// SetInstancesRetrievable gets a reference to the given bool and assigns it to the InstancesRetrievable field.
func (o *ServiceOfferingResponseObject) SetInstancesRetrievable(v bool) {
	o.InstancesRetrievable = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetMetadata() ServiceOfferingMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret ServiceOfferingMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetMetadataOk() (*ServiceOfferingMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ServiceOfferingMetadata and assigns it to the Metadata field.
func (o *ServiceOfferingResponseObject) SetMetadata(v ServiceOfferingMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServiceOfferingResponseObject) SetName(v string) {
	o.Name = &v
}

// GetPlanUpdateable returns the PlanUpdateable field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetPlanUpdateable() bool {
	if o == nil || IsNil(o.PlanUpdateable) {
		var ret bool
		return ret
	}
	return *o.PlanUpdateable
}

// GetPlanUpdateableOk returns a tuple with the PlanUpdateable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetPlanUpdateableOk() (*bool, bool) {
	if o == nil || IsNil(o.PlanUpdateable) {
		return nil, false
	}
	return o.PlanUpdateable, true
}

// HasPlanUpdateable returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasPlanUpdateable() bool {
	if o != nil && !IsNil(o.PlanUpdateable) {
		return true
	}

	return false
}

// SetPlanUpdateable gets a reference to the given bool and assigns it to the PlanUpdateable field.
func (o *ServiceOfferingResponseObject) SetPlanUpdateable(v bool) {
	o.PlanUpdateable = &v
}

// GetReady returns the Ready field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetReady() bool {
	if o == nil || IsNil(o.Ready) {
		var ret bool
		return ret
	}
	return *o.Ready
}

// GetReadyOk returns a tuple with the Ready field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetReadyOk() (*bool, bool) {
	if o == nil || IsNil(o.Ready) {
		return nil, false
	}
	return o.Ready, true
}

// HasReady returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasReady() bool {
	if o != nil && !IsNil(o.Ready) {
		return true
	}

	return false
}

// SetReady gets a reference to the given bool and assigns it to the Ready field.
func (o *ServiceOfferingResponseObject) SetReady(v bool) {
	o.Ready = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ServiceOfferingResponseObject) SetTags(v []string) {
	o.Tags = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ServiceOfferingResponseObject) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceOfferingResponseObject) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ServiceOfferingResponseObject) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ServiceOfferingResponseObject) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o ServiceOfferingResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceOfferingResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowContextUpdates) {
		toSerialize["allow_context_updates"] = o.AllowContextUpdates
	}
	if !IsNil(o.Bindable) {
		toSerialize["bindable"] = o.Bindable
	}
	if !IsNil(o.BindingsRetrievable) {
		toSerialize["bindings_retrievable"] = o.BindingsRetrievable
	}
	if !IsNil(o.BrokerId) {
		toSerialize["broker_id"] = o.BrokerId
	}
	if !IsNil(o.CatalogId) {
		toSerialize["catalog_id"] = o.CatalogId
	}
	if !IsNil(o.CatalogName) {
		toSerialize["catalog_name"] = o.CatalogName
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InstancesRetrievable) {
		toSerialize["instances_retrievable"] = o.InstancesRetrievable
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PlanUpdateable) {
		toSerialize["plan_updateable"] = o.PlanUpdateable
	}
	if !IsNil(o.Ready) {
		toSerialize["ready"] = o.Ready
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableServiceOfferingResponseObject struct {
	value *ServiceOfferingResponseObject
	isSet bool
}

func (v NullableServiceOfferingResponseObject) Get() *ServiceOfferingResponseObject {
	return v.value
}

func (v *NullableServiceOfferingResponseObject) Set(val *ServiceOfferingResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceOfferingResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceOfferingResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceOfferingResponseObject(val *ServiceOfferingResponseObject) *NullableServiceOfferingResponseObject {
	return &NullableServiceOfferingResponseObject{value: val, isSet: true}
}

func (v NullableServiceOfferingResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceOfferingResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


