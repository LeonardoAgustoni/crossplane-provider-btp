/*
Service Manager

Service Manager provides REST APIs that are responsible for the creation and consumption of service instances in any connected runtime environment.   Use the Service Manager APIs to perform various operations related to your platforms, service brokers, service instances, and service bindings.  Get service plans and service offerings associated with your environment.    #### Platforms   Platforms are OSBAPI-enabled software systems on which applications and services are hosted.   With the Service Manager, you can now register your platform and enable it to consume the SAP BTP services from your native environment.   This registration results in a returned set of credentials that are needed to deploy the Service Manager agent.     #### Service Brokers   Service brokers act as brokers between the Service Manager and a platform’s marketplace to advertise catalogues of service offerings and service plans.  They also receive and process the requests from the marketplace to provision, bind, unbind, and deprovision these offerings and plans.    #### Service Instances   Service instances are instantiations of service plans that make the functionality of those service plans available for consumption.    #### Service Bindings   Service bindings provide access details to existing service instances.  The access details are part of the service bindings' ‘credentials’ property, and typically include access URLs and credentials.    #### Service Plans   Service plans represent sets of capabilities provided by a service offering.  For example, database service offerings provide different plans for different database versions or sizes, while the Service Manager plans offer different data access levels.    #### Service Offerings   Service offerings are advertisements of the services that are supported by a service broker.  For example, software that you can consume in the subaccount.  Service offerings are related to one or more service plans.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ServicePlanResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicePlanResponseObject{}

// ServicePlanResponseObject struct for ServicePlanResponseObject
type ServicePlanResponseObject struct {
	// Whether the service plan is bindable.
	Bindable *bool `json:"bindable,omitempty"`
	// The ID of the service plan in the service broker catalog.
	CatalogId *string `json:"catalog_id,omitempty"`
	// The name of the associated service broker catalog.
	CatalogName *string `json:"catalog_name,omitempty"`
	// The time the service plan was created.<br> In ISO 8601 format:</br> YYYY-MM-DDThh:mm:ssTZD
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The description of the service plan.
	Description *string `json:"description,omitempty"`
	// Whether the service plan is free.
	Free *bool `json:"free,omitempty"`
	// The ID of the service plan.
	Id *string `json:"id,omitempty"`
	Metadata *ServicePlanMetadata `json:"metadata,omitempty"`
	// The name of the service plan.
	Name *string `json:"name,omitempty"`
	// Whether the service plan is ready.
	Ready *bool `json:"ready,omitempty"`
	// The ID of the service offering.
	ServiceOfferingId *string `json:"service_offering_id,omitempty"`
	// The last time the service plan was updated.<br> In ISO 8601 format.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewServicePlanResponseObject instantiates a new ServicePlanResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicePlanResponseObject() *ServicePlanResponseObject {
	this := ServicePlanResponseObject{}
	return &this
}

// NewServicePlanResponseObjectWithDefaults instantiates a new ServicePlanResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicePlanResponseObjectWithDefaults() *ServicePlanResponseObject {
	this := ServicePlanResponseObject{}
	return &this
}

// GetBindable returns the Bindable field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetBindable() bool {
	if o == nil || IsNil(o.Bindable) {
		var ret bool
		return ret
	}
	return *o.Bindable
}

// GetBindableOk returns a tuple with the Bindable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetBindableOk() (*bool, bool) {
	if o == nil || IsNil(o.Bindable) {
		return nil, false
	}
	return o.Bindable, true
}

// HasBindable returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasBindable() bool {
	if o != nil && !IsNil(o.Bindable) {
		return true
	}

	return false
}

// SetBindable gets a reference to the given bool and assigns it to the Bindable field.
func (o *ServicePlanResponseObject) SetBindable(v bool) {
	o.Bindable = &v
}

// GetCatalogId returns the CatalogId field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetCatalogId() string {
	if o == nil || IsNil(o.CatalogId) {
		var ret string
		return ret
	}
	return *o.CatalogId
}

// GetCatalogIdOk returns a tuple with the CatalogId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetCatalogIdOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogId) {
		return nil, false
	}
	return o.CatalogId, true
}

// HasCatalogId returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasCatalogId() bool {
	if o != nil && !IsNil(o.CatalogId) {
		return true
	}

	return false
}

// SetCatalogId gets a reference to the given string and assigns it to the CatalogId field.
func (o *ServicePlanResponseObject) SetCatalogId(v string) {
	o.CatalogId = &v
}

// GetCatalogName returns the CatalogName field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetCatalogName() string {
	if o == nil || IsNil(o.CatalogName) {
		var ret string
		return ret
	}
	return *o.CatalogName
}

// GetCatalogNameOk returns a tuple with the CatalogName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetCatalogNameOk() (*string, bool) {
	if o == nil || IsNil(o.CatalogName) {
		return nil, false
	}
	return o.CatalogName, true
}

// HasCatalogName returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasCatalogName() bool {
	if o != nil && !IsNil(o.CatalogName) {
		return true
	}

	return false
}

// SetCatalogName gets a reference to the given string and assigns it to the CatalogName field.
func (o *ServicePlanResponseObject) SetCatalogName(v string) {
	o.CatalogName = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ServicePlanResponseObject) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServicePlanResponseObject) SetDescription(v string) {
	o.Description = &v
}

// GetFree returns the Free field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetFree() bool {
	if o == nil || IsNil(o.Free) {
		var ret bool
		return ret
	}
	return *o.Free
}

// GetFreeOk returns a tuple with the Free field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetFreeOk() (*bool, bool) {
	if o == nil || IsNil(o.Free) {
		return nil, false
	}
	return o.Free, true
}

// HasFree returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasFree() bool {
	if o != nil && !IsNil(o.Free) {
		return true
	}

	return false
}

// SetFree gets a reference to the given bool and assigns it to the Free field.
func (o *ServicePlanResponseObject) SetFree(v bool) {
	o.Free = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServicePlanResponseObject) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetMetadata() ServicePlanMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret ServicePlanMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetMetadataOk() (*ServicePlanMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ServicePlanMetadata and assigns it to the Metadata field.
func (o *ServicePlanResponseObject) SetMetadata(v ServicePlanMetadata) {
	o.Metadata = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServicePlanResponseObject) SetName(v string) {
	o.Name = &v
}

// GetReady returns the Ready field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetReady() bool {
	if o == nil || IsNil(o.Ready) {
		var ret bool
		return ret
	}
	return *o.Ready
}

// GetReadyOk returns a tuple with the Ready field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetReadyOk() (*bool, bool) {
	if o == nil || IsNil(o.Ready) {
		return nil, false
	}
	return o.Ready, true
}

// HasReady returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasReady() bool {
	if o != nil && !IsNil(o.Ready) {
		return true
	}

	return false
}

// SetReady gets a reference to the given bool and assigns it to the Ready field.
func (o *ServicePlanResponseObject) SetReady(v bool) {
	o.Ready = &v
}

// GetServiceOfferingId returns the ServiceOfferingId field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetServiceOfferingId() string {
	if o == nil || IsNil(o.ServiceOfferingId) {
		var ret string
		return ret
	}
	return *o.ServiceOfferingId
}

// GetServiceOfferingIdOk returns a tuple with the ServiceOfferingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetServiceOfferingIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceOfferingId) {
		return nil, false
	}
	return o.ServiceOfferingId, true
}

// HasServiceOfferingId returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasServiceOfferingId() bool {
	if o != nil && !IsNil(o.ServiceOfferingId) {
		return true
	}

	return false
}

// SetServiceOfferingId gets a reference to the given string and assigns it to the ServiceOfferingId field.
func (o *ServicePlanResponseObject) SetServiceOfferingId(v string) {
	o.ServiceOfferingId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ServicePlanResponseObject) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicePlanResponseObject) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ServicePlanResponseObject) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ServicePlanResponseObject) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o ServicePlanResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicePlanResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bindable) {
		toSerialize["bindable"] = o.Bindable
	}
	if !IsNil(o.CatalogId) {
		toSerialize["catalog_id"] = o.CatalogId
	}
	if !IsNil(o.CatalogName) {
		toSerialize["catalog_name"] = o.CatalogName
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Free) {
		toSerialize["free"] = o.Free
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Ready) {
		toSerialize["ready"] = o.Ready
	}
	if !IsNil(o.ServiceOfferingId) {
		toSerialize["service_offering_id"] = o.ServiceOfferingId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableServicePlanResponseObject struct {
	value *ServicePlanResponseObject
	isSet bool
}

func (v NullableServicePlanResponseObject) Get() *ServicePlanResponseObject {
	return v.value
}

func (v *NullableServicePlanResponseObject) Set(val *ServicePlanResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableServicePlanResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableServicePlanResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicePlanResponseObject(val *ServicePlanResponseObject) *NullableServicePlanResponseObject {
	return &NullableServicePlanResponseObject{value: val, isSet: true}
}

func (v NullableServicePlanResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicePlanResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


