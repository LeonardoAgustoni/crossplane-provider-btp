/*
Service Manager

Service Manager provides REST APIs that are responsible for the creation and consumption of service instances in any connected runtime environment.   Use the Service Manager APIs to perform various operations related to your platforms, service brokers, service instances, and service bindings.  Get service plans and service offerings associated with your environment.    #### Platforms   Platforms are OSBAPI-enabled software systems on which applications and services are hosted.   With the Service Manager, you can now register your platform and enable it to consume the SAP BTP services from your native environment.   This registration results in a returned set of credentials that are needed to deploy the Service Manager agent.     #### Service Brokers   Service brokers act as brokers between the Service Manager and a platform’s marketplace to advertise catalogues of service offerings and service plans.  They also receive and process the requests from the marketplace to provision, bind, unbind, and deprovision these offerings and plans.    #### Service Instances   Service instances are instantiations of service plans that make the functionality of those service plans available for consumption.    #### Service Bindings   Service bindings provide access details to existing service instances.  The access details are part of the service bindings' ‘credentials’ property, and typically include access URLs and credentials.    #### Service Plans   Service plans represent sets of capabilities provided by a service offering.  For example, database service offerings provide different plans for different database versions or sizes, while the Service Manager plans offer different data access levels.    #### Service Offerings   Service offerings are advertisements of the services that are supported by a service broker.  For example, software that you can consume in the subaccount.  Service offerings are related to one or more service plans.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ServiceBindingResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceBindingResponseObject{}

// ServiceBindingResponseObject struct for ServiceBindingResponseObject
type ServiceBindingResponseObject struct {
	// The bound resources.
	BindResource *map[string]string `json:"bind_resource,omitempty"`
	// Contextual data for the resource.
	Context *map[string]string `json:"context,omitempty"`
	// The time the binding was created.<br/>In ISO 8601 format:</br> YYYY-MM-DDThh:mm:ssTZD
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Credentials to access the binding.
	Credentials map[string]interface{} `json:"credentials,omitempty"`
	// The ID of the service binding.
	Id *string `json:"id,omitempty"`
	// Additional data associated with the resource entity. <br><br>Can be an empty object.
	Labels *map[string][]string `json:"labels,omitempty"`
	LastOperation *OperationResponseObject `json:"last_operation,omitempty"`
	// The name of the service binding.
	Name *string `json:"name,omitempty"`
	// Whether the service binding is ready.
	Ready *bool `json:"ready,omitempty"`
	// The ID of the service instance associated with the binding.
	ServiceInstanceId *string `json:"service_instance_id,omitempty"`
	// The last time the binding was updated.<br/> In ISO 8601 format.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// NewServiceBindingResponseObject instantiates a new ServiceBindingResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceBindingResponseObject() *ServiceBindingResponseObject {
	this := ServiceBindingResponseObject{}
	return &this
}

// NewServiceBindingResponseObjectWithDefaults instantiates a new ServiceBindingResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceBindingResponseObjectWithDefaults() *ServiceBindingResponseObject {
	this := ServiceBindingResponseObject{}
	return &this
}

// GetBindResource returns the BindResource field value if set, zero value otherwise.
func (o *ServiceBindingResponseObject) GetBindResource() map[string]string {
	if o == nil || IsNil(o.BindResource) {
		var ret map[string]string
		return ret
	}
	return *o.BindResource
}

// GetBindResourceOk returns a tuple with the BindResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingResponseObject) GetBindResourceOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.BindResource) {
		return nil, false
	}
	return o.BindResource, true
}

// HasBindResource returns a boolean if a field has been set.
func (o *ServiceBindingResponseObject) HasBindResource() bool {
	if o != nil && !IsNil(o.BindResource) {
		return true
	}

	return false
}

// SetBindResource gets a reference to the given map[string]string and assigns it to the BindResource field.
func (o *ServiceBindingResponseObject) SetBindResource(v map[string]string) {
	o.BindResource = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *ServiceBindingResponseObject) GetContext() map[string]string {
	if o == nil || IsNil(o.Context) {
		var ret map[string]string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingResponseObject) GetContextOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Context) {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *ServiceBindingResponseObject) HasContext() bool {
	if o != nil && !IsNil(o.Context) {
		return true
	}

	return false
}

// SetContext gets a reference to the given map[string]string and assigns it to the Context field.
func (o *ServiceBindingResponseObject) SetContext(v map[string]string) {
	o.Context = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ServiceBindingResponseObject) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingResponseObject) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ServiceBindingResponseObject) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ServiceBindingResponseObject) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *ServiceBindingResponseObject) GetCredentials() map[string]interface{} {
	if o == nil || IsNil(o.Credentials) {
		var ret map[string]interface{}
		return ret
	}
	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingResponseObject) GetCredentialsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Credentials) {
		return map[string]interface{}{}, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *ServiceBindingResponseObject) HasCredentials() bool {
	if o != nil && !IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given map[string]interface{} and assigns it to the Credentials field.
func (o *ServiceBindingResponseObject) SetCredentials(v map[string]interface{}) {
	o.Credentials = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServiceBindingResponseObject) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingResponseObject) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServiceBindingResponseObject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServiceBindingResponseObject) SetId(v string) {
	o.Id = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ServiceBindingResponseObject) GetLabels() map[string][]string {
	if o == nil || IsNil(o.Labels) {
		var ret map[string][]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingResponseObject) GetLabelsOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ServiceBindingResponseObject) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string][]string and assigns it to the Labels field.
func (o *ServiceBindingResponseObject) SetLabels(v map[string][]string) {
	o.Labels = &v
}

// GetLastOperation returns the LastOperation field value if set, zero value otherwise.
func (o *ServiceBindingResponseObject) GetLastOperation() OperationResponseObject {
	if o == nil || IsNil(o.LastOperation) {
		var ret OperationResponseObject
		return ret
	}
	return *o.LastOperation
}

// GetLastOperationOk returns a tuple with the LastOperation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingResponseObject) GetLastOperationOk() (*OperationResponseObject, bool) {
	if o == nil || IsNil(o.LastOperation) {
		return nil, false
	}
	return o.LastOperation, true
}

// HasLastOperation returns a boolean if a field has been set.
func (o *ServiceBindingResponseObject) HasLastOperation() bool {
	if o != nil && !IsNil(o.LastOperation) {
		return true
	}

	return false
}

// SetLastOperation gets a reference to the given OperationResponseObject and assigns it to the LastOperation field.
func (o *ServiceBindingResponseObject) SetLastOperation(v OperationResponseObject) {
	o.LastOperation = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServiceBindingResponseObject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingResponseObject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServiceBindingResponseObject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServiceBindingResponseObject) SetName(v string) {
	o.Name = &v
}

// GetReady returns the Ready field value if set, zero value otherwise.
func (o *ServiceBindingResponseObject) GetReady() bool {
	if o == nil || IsNil(o.Ready) {
		var ret bool
		return ret
	}
	return *o.Ready
}

// GetReadyOk returns a tuple with the Ready field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingResponseObject) GetReadyOk() (*bool, bool) {
	if o == nil || IsNil(o.Ready) {
		return nil, false
	}
	return o.Ready, true
}

// HasReady returns a boolean if a field has been set.
func (o *ServiceBindingResponseObject) HasReady() bool {
	if o != nil && !IsNil(o.Ready) {
		return true
	}

	return false
}

// SetReady gets a reference to the given bool and assigns it to the Ready field.
func (o *ServiceBindingResponseObject) SetReady(v bool) {
	o.Ready = &v
}

// GetServiceInstanceId returns the ServiceInstanceId field value if set, zero value otherwise.
func (o *ServiceBindingResponseObject) GetServiceInstanceId() string {
	if o == nil || IsNil(o.ServiceInstanceId) {
		var ret string
		return ret
	}
	return *o.ServiceInstanceId
}

// GetServiceInstanceIdOk returns a tuple with the ServiceInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingResponseObject) GetServiceInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceInstanceId) {
		return nil, false
	}
	return o.ServiceInstanceId, true
}

// HasServiceInstanceId returns a boolean if a field has been set.
func (o *ServiceBindingResponseObject) HasServiceInstanceId() bool {
	if o != nil && !IsNil(o.ServiceInstanceId) {
		return true
	}

	return false
}

// SetServiceInstanceId gets a reference to the given string and assigns it to the ServiceInstanceId field.
func (o *ServiceBindingResponseObject) SetServiceInstanceId(v string) {
	o.ServiceInstanceId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ServiceBindingResponseObject) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBindingResponseObject) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ServiceBindingResponseObject) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ServiceBindingResponseObject) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o ServiceBindingResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceBindingResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BindResource) {
		toSerialize["bind_resource"] = o.BindResource
	}
	if !IsNil(o.Context) {
		toSerialize["context"] = o.Context
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.LastOperation) {
		toSerialize["last_operation"] = o.LastOperation
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Ready) {
		toSerialize["ready"] = o.Ready
	}
	if !IsNil(o.ServiceInstanceId) {
		toSerialize["service_instance_id"] = o.ServiceInstanceId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableServiceBindingResponseObject struct {
	value *ServiceBindingResponseObject
	isSet bool
}

func (v NullableServiceBindingResponseObject) Get() *ServiceBindingResponseObject {
	return v.value
}

func (v *NullableServiceBindingResponseObject) Set(val *ServiceBindingResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceBindingResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceBindingResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceBindingResponseObject(val *ServiceBindingResponseObject) *NullableServiceBindingResponseObject {
	return &NullableServiceBindingResponseObject{value: val, isSet: true}
}

func (v NullableServiceBindingResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceBindingResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


